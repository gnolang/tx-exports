{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1uf8u5jf2m9l80g0zsfq7tufl3qufqc4393jtkl","package":{"Name":"hello","Path":"gno.land/r/test98/hello","Files":[{"Name":"package.gno","Body":"package hello\n\nvar s = 0\n\nfunc Add() int {\n\ts++\n\treturn s\n}\n\nfunc Render(path string) string {\n\treturn \"Hello World!\"\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AitYIWT3az4Jx3hGzTapJ6hyalJ6EYgqQCpYoe7Gx2Sw"},"signature":"x39iknkYqnE+l06aaS0UB4rh2qKLHj/VMasrUCTyeRgRTsOcCyOb6ytFHS53Hd69rDWwyIv3bvZU6nG2jUpGcg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"389391"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1uf8u5jf2m9l80g0zsfq7tufl3qufqc4393jtkl","send":"","pkg_path":"gno.land/r/test98/hello","func":"Add","args":null}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AitYIWT3az4Jx3hGzTapJ6hyalJ6EYgqQCpYoe7Gx2Sw"},"signature":"oPs6Pdpl23OV+V7fRXLRR9AJSBCiDvxWZOpe0Lxhz59eoWoxVt15LGQggb19LV2nWy/q93pE8lKYS4yuGQx5TA=="}],"memo":"Called through gno.studio"},"blockNum":"389393"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1uf8u5jf2m9l80g0zsfq7tufl3qufqc4393jtkl","send":"","pkg_path":"gno.land/r/test98/hello","func":"Add","args":null}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AitYIWT3az4Jx3hGzTapJ6hyalJ6EYgqQCpYoe7Gx2Sw"},"signature":"EJANcSPglgDyLsIsTOb1BntAOryY5K/3gNFpwLxzLbpURlOCyCzoWgiWyTDElppgODQlCTQ95EZ8wt+EoTAH1g=="}],"memo":"Called through gno.studio"},"blockNum":"389395"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1uf8u5jf2m9l80g0zsfq7tufl3qufqc4393jtkl","send":"","pkg_path":"gno.land/r/test98/hello","func":"Add","args":null}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AitYIWT3az4Jx3hGzTapJ6hyalJ6EYgqQCpYoe7Gx2Sw"},"signature":"4J0x3jOHHgHb/gPecIxWGA25A9Hhiga26acRf2u3l4xCe+bp3GTyvhCLGSxlcuJ2HWt4zaBQJESLclDxwVWmLg=="}],"memo":"Called through gno.studio"},"blockNum":"389404"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1uf8u5jf2m9l80g0zsfq7tufl3qufqc4393jtkl","send":"","pkg_path":"gno.land/r/test98/hello","func":"Add","args":null}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AitYIWT3az4Jx3hGzTapJ6hyalJ6EYgqQCpYoe7Gx2Sw"},"signature":"w8Qvsz3jMk7XnvA+X71Fy2fWbpS+wuZJRTnHX+kpJUNKfDUVrR7J1ih5qbMFc2kmrkCkaEv4AqASh9Npu/I9Vw=="}],"memo":"Called through gno.studio"},"blockNum":"389407"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1rdld2ay4c3r3eghk563sz6ne79mmplcl8zatuu","package":{"Name":"gnoyourdate","Path":"gno.land/r/gnostudio/gnoyourdate","Files":[{"Name":"package.gno","Body":"package gnoyourdate\n\nimport (\n\t\"std\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n\n\t\"gno.land/p/demo/ufmt\"\n)\n\nconst (\n\tChoiceNone             Choice = 0x0\n\tChoiceSinceInception   Choice = 0x1\n\tChoiceOneOrTwoYearsAgo Choice = 0x2\n\tChoiceThisYear         Choice = 0x4\n\tChoiceThisMonth        Choice = 0x8\n)\n\nconst (\n\tdateFmt = \"2006-01-02 15:04 MST\"\n)\n\nvar (\n\tpoll = Poll{\n\t\tQuestion: \"When did you first hear about Gno.land?\",\n\t\tAnswers: []Answer{\n\t\t\t{Choice: ChoiceThisMonth},\n\t\t\t{Choice: ChoiceThisYear},\n\t\t\t{Choice: ChoiceOneOrTwoYearsAgo},\n\t\t\t{Choice: ChoiceSinceInception},\n\t\t},\n\t}\n\tadmin         = std.Address(\"g1rdld2ay4c3r3eghk563sz6ne79mmplcl8zatuu\")\n\tisRealmLocked bool\n\tnextRealmPath string\n)\n\ntype (\n\t// Choice defines a type for poll choices.\n\tChoice byte\n\n\t// Poll tracks the number of votes for a set of pre defined answers.\n\tPoll struct {\n\t\tQuestion string\n\t\tAnswers  []Answer\n\t}\n\n\t// Answer contains the number of votes for a poll choice.\n\tAnswer struct {\n\t\tChoice       Choice\n\t\tParticipants []Participant\n\t}\n)\n\ntype Participant struct {\n\tAddress std.Address\n\tDate    time.Time\n}\n\n// String returns the choice as a string.\nfunc (c Choice) String() string {\n\treturn strconv.Itoa(int(c))\n}\n\n// GetCount returns the number of votes submitted for a poll choice.\nfunc (p Poll) GetCount(c Choice) int {\n\tfor _, a := range p.Answers {\n\t\tif a.Choice == c {\n\t\t\treturn len(a.Participants)\n\t\t}\n\t}\n\treturn 0\n}\n\n// GetTotalCount returns the total number of votes.\nfunc (p Poll) GetTotalCount() int {\n\tvar count int\n\tfor _, a := range p.Answers {\n\t\tcount += len(a.Participants)\n\t}\n\treturn count\n}\n\n// HasVoted checks if an address already submitted a vote.\nfunc (p Poll) HasVoted(addr std.Address) bool {\n\tfor _, answer := range p.Answers {\n\t\tfor _, p := range answer.Participants {\n\t\t\tif p.Address == addr {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\treturn false\n}\n\n// üëã Welcome to the GnoYourDate (Know-Your-Gno-Date) Poll! üéàüéàüéà\n//\n// You are now viewing the Vote function.\n// This function allows you to submit your choice for the poll.\n//\n// ‚ùî Question: When did you first hear about Gno.land?\n// üëá Options:\n//  - This month\n//  - This year\n//  - 1-2 years ago\n//  - Since its inception\n//\n// üìç Please make sure to mark the option you choose as 'True (Yes)' and mark all other options as 'False (No)' for your vote to be valid.\n// üìç If you select multiple options as 'True (Yes)', your vote will be considered invalid.\n//\n// üì¢ Now, please cast your vote using the form below, then click the \"Call\" button to submit it.\n//\n// üí¨ After casting your vote, click the \"Copy result link\" button to copy the link to your vote, then share it by tagging @_gnostudio and using the #gnoyourdate hashtag.\nfunc Vote(thisMonth, thisYear, oneOrTwoYearsAgo, sinceInception bool) string {\n\tif isRealmLocked {\n\t\tif nextRealmPath == \"\" {\n\t\t\tpanic(\"Realm is locked\")\n\t\t}\n\n\t\t// Allow TX to succeed but return an \"error\" message with the link to vote on the next realm version.\n\t\t// Panic and error results are not used to favor GnoStudio Connect usability to making links clickable.\n\t\treturn \"This realm is deprecated. To vote, please navigate to the new version, which can be found at \" + nextRealmPath \n\t}\n\n\tchoice := mustCreateChoiceFromVoteArgs(thisMonth, thisYear, oneOrTwoYearsAgo, sinceInception)\n\tparticipant := Participant{\n\t\tAddress: std.GetOrigCaller(),\n\t\tDate: time.Now(),\n\t}\n\tassertFirstVote(participant.Address)\n\n\tfor i, a := range poll.Answers {\n\t\tif a.Choice == choice {\n\t\t\tpoll.Answers[i].Participants = append(poll.Answers[i].Participants, participant)\n\t\t\tbreak\n\t\t}\n\t}\n\n\treturn ufmt.Sprintf(\n\t\t`You have successfully voted Yes on '%s'. You can check out the results at https://%s.%s`,\n\t\tgetAnswerLabel(choice),\n\t\tstd.GetChainID(),\n\t\tstd.CurrentRealmPath(),\n\t)\n}\n\n// Render returns a Markdown string with the poll details.\nfunc Render(_ string) string {\n\tvar buf strings.Builder\n\n\tif isRealmLocked {\n\t\tvar msg string\n\t\tif nextRealmPath == \"\" {\n\t\t\tmsg = \"Realm is locked.\"\n\t\t} else {\n\t\t\tmsg += ufmt.Sprintf(\n\t\t\t\t\"This realm is deprecated. \u003c/br\u003ePlease navigate to the new version, which can be found at \u003ca href=\\\"%s\\\"\u003e%s\u003c/a\u003e\",\n\t\t\t\tnextRealmPath,\n\t\t\t\tnextRealmPath,\n\t\t\t)\n\t\t}\n\n\t\tbuf.WriteString(\n\t\t\t`\u003cp style=\"padding: .75rem 1.25rem; border: 1px solid #FFEEBA; background-color: #FFF3CD; color: #856404; border-radius: .25rem\"\u003e` +\n\t\t\t\tmsg +\n\t\t\t\t\"\u003c/p\u003e\\n\\n\",\n\t\t)\n\t}\n\n\tbuf.WriteString(\"# GnoYourDate Poll\\nüëã Welcome to the GnoYourDate (Know-Your-Gno-Date) Poll! üéàüéàüéà\\n\\n\")\n\tbuf.WriteString(ufmt.Sprintf(\"## Question: %s\\n\", poll.Question))\n\n\tif !isRealmLocked {\n\t\turl := getGnoStudioConnectVoteURL(std.CurrentRealmPath())\n\t\tbuf.WriteString(\"üëâ You can participate in the poll by [submitting your vote from here](\" + url + \") üëà\\n\")\n\t}\n\n\tbuf.WriteString(\"### Choices:\\n\")\n\tfor _, c := range [4]Choice{ChoiceThisMonth, ChoiceThisYear, ChoiceOneOrTwoYearsAgo, ChoiceSinceInception} {\n\t\tbuf.WriteString(\n\t\t\tufmt.Sprintf(\"- %s: **%d** vote(s)\\n\", getAnswerLabel(c), poll.GetCount(c)),\n\t\t)\n\t}\n\n\tbuf.WriteString(\n\t\tufmt.Sprintf(\"\\nThe total number of received votes is **%d**\\n\", poll.GetTotalCount()),\n\t)\n\n\t// Render participant addresses when there are votes\n\tif poll.GetTotalCount() \u003e 0 {\n\t\tbuf.WriteString(\"### Participants:\\nList of participants grouped by their vote\\n\")\n\t\tfor _, a := range poll.Answers {\n\t\t\t// Skip anwers without votes\n\t\t\tif len(a.Participants) == 0 {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tbuf.WriteString(\"\\n- **\" + getAnswerLabel(a.Choice) + \"**:\\n\")\n\t\t\tfor _, p := range a.Participants {\n\t\t\t\tdate := p.Date.UTC().Format(dateFmt)\n\t\t\t\tbuf.WriteString(\"  - \" + p.Address.String() + \" \u003csmall\u003e\u003ci\u003e(voted at \" + date + \")\u003c/i\u003e\u003c/small\u003e\\n\")\n\t\t\t}\n\t\t}\n\t}\n\n\treturn buf.String()\n}\n\n// GetAdmin returns the address of the Realm admin account.\nfunc GetAdmin() string {\n\treturn admin.String()\n}\n\n// DeprecateRealm deprecates the realm in favor of another realm.\n// Depecation locks this realm to disallow new votes.\nfunc DeprecateRealm(realmPath string) string {\n\tassertCallerIsAdmin()\n\n\trealmPath = strings.TrimSpace(realmPath)\n\tif realmPath == \"\" {\n\t\tpanic(\"Realm path is empty\")\n\t}\n\n\tisRealmLocked = true\n\tnextRealmPath = realmPath\n\treturn \"The poll has been moved to \" + realmPath\n}\n\n// LockRealm locks the realm disallowing new vote submission.\nfunc LockRealm() string {\n\tassertCallerIsAdmin()\n\n\tisRealmLocked = true\n\treturn \"Realm locked successfully\"\n}\n\n// UnlockRealm unlocks the realm allowing new votes to be submitted.\nfunc UnlockRealm() string {\n\tassertCallerIsAdmin()\n\n\tisRealmLocked = false\n\tnextRealmPath = \"\"\n\treturn \"Realm unlocked successfully\"\n}\n\nfunc getAnswerLabel(c Choice) string {\n\tswitch c {\n\tcase ChoiceThisMonth:\n\t\treturn \"This month\"\n\tcase ChoiceThisYear:\n\t\treturn \"This year\"\n\tcase ChoiceOneOrTwoYearsAgo:\n\t\treturn \"1-2 years ago\"\n\tcase ChoiceSinceInception:\n\t\treturn \"Since its inception\"\n\tdefault:\n\t\treturn \"None\"\n\t}\n}\n\nfunc getGnoStudioConnectVoteURL(realmPath string) string {\n\treturn ufmt.Sprintf(\n\t\t\"https://gno.studio/connect/view/%s?network=%s#Vote\",\n\t\trealmPath,\n\t\tstd.GetChainID(),\n\t)\n}\n\nfunc mustCreateChoiceFromVoteArgs(voteArgs ...bool) Choice {\n\tvar c Choice\n\tfor _, arg := range voteArgs {\n\t\tc \u003c\u003c= 1 // shift left\n\t\tif arg {\n\t\t\tc |= 1 // last bit on\n\t\t}\n\t}\n\n\tswitch c {\n\tcase ChoiceThisMonth, ChoiceThisYear, ChoiceOneOrTwoYearsAgo, ChoiceSinceInception:\n\t\treturn c\n\tcase ChoiceNone:\n\t\tpanic(\n\t\t\t\"You haven't selected an option. Please submit your vote by selecting one of the options as 'True (Yes)'.\",\n\t\t)\n\tdefault:\n\t\tpanic(\n\t\t\t\"Multiple options have been selected. Please submit your vote by selecting only one of the options as 'True (Yes)'.\\n\" +\n\t\t\t\t\"The option you choose must be marked as 'True (Yes)', while all other options are marked as 'False (No)'.\",\n\t\t)\n\t}\n}\n\nfunc assertFirstVote(addr std.Address) {\n\tif poll.HasVoted(addr) {\n\t\tpanic(\"This address already voted\")\n\t}\n}\n\nfunc assertCallerIsAdmin() {\n\tif admin != std.GetOrigCaller() {\n\t\tpanic(\"Caller is not admin\")\n\t}\n}"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmDuuTgSMdrhG49g2OdOaaPx5L91eIcZySaYLTyfs2K+"},"signature":"w1vI9EMEOHGSlS6AjhHORWoPbqaJGGr968dPIO8VkNM98nE69b4+uH+icrhtaWV41DQQIoqwJ0H4QtMCQBJyjw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"389440"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","send":"","pkg_path":"gno.land/r/gnostudio/gnoyourdate","func":"Vote","args":["false","false","false","true"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7MWSLkjf+z/CYfMh6KVHEaHLDWpnfGBRDqFO81j1FRN"},"signature":"LIoUm1Av0OmVcw1Agfb+qcOFnXr7c46T9NX54lVI1QIVGPPQvwgWm/IijzIRL8QzR7gyn2kW9acGg653849SDA=="}],"memo":"Called through gno.studio"},"blockNum":"389549"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g18q6q2av8eyns6xrq7qf8c08287wcgmprmetlm5","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxjyQBsJI8CesbgwihvS/eQtYKoezyoA9P+FRlLAKRwg"},"signature":"x60Q3RS1bzngt8xgBQdUsB1TuAlK/wo1z8l0yVXmbqgBW5zqZCtP2UErRQiPC37ZfpuA3mMQeYVDGhLH3l8Jig=="}],"memo":""},"blockNum":"389651"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13d7jc32adhc39erm5me38w5v7ej7lpvlnqjk73","to_address":"g14tg8x2j2j5pjxuyff9zzyaxe0s9qk0shrtxtz4","amount":"20000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/+cjV0/gZkWzMqCul8aP5hC7M3yliIs17uinn/+66uR"},"signature":"ZsUH4EAw8i4/94Y12dUkUOv0dbtBNdbKhM1FnELu6eVdq+cwMHeMIk3hKGQH26rcXY1QNxf+0TkkS9XD9FOTwQ=="}],"memo":""},"blockNum":"389876"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14tg8x2j2j5pjxuyff9zzyaxe0s9qk0shrtxtz4","send":"","pkg_path":"gno.land/r/gnostudio/gnoyourdate","func":"Vote","args":["true","false","true","false"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0LaneHVlDH5Mf/hOM3QlHMGAqZPemXQCt85f9t+Ezdb"},"signature":"ojq7bvc1Vu6wEhaITgJkZan7VZa3qZaafq3pYH+46i5VKl2AODqowhcXQZaoJ1tsVaSjnlKiOjy/5m0OTlC4uw=="}],"memo":"Called through gno.studio"},"blockNum":"389878"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14tg8x2j2j5pjxuyff9zzyaxe0s9qk0shrtxtz4","send":"","pkg_path":"gno.land/r/gnostudio/gnoyourdate","func":"Vote","args":["false","false","true","false"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0LaneHVlDH5Mf/hOM3QlHMGAqZPemXQCt85f9t+Ezdb"},"signature":"h2otZaU3XbpYghXr/90NdVcQ8+7XClWNhsgUNNoMu/oJJoC6SAJ/TNrPZuyGV1qNl85PpXo2LFM2J77Kx7ojvg=="}],"memo":"Called through gno.studio"},"blockNum":"389880"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1dnllrdzwfhxv3evyk09y48mgn5phfjvtyrlzm7","send":"","pkg_path":"gno.land/r/feedback/simplefeedback","func":"SubmitFeedback","args":[""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsGEi/6/N0zRtRCWxHb7KZ1Z/BTfZIc77fvtkSRJlmwQ"},"signature":"EXuc+r0hOqbOoKQUQSd7WHEhOErCdZRy21m9hSSubeBUvO1xwdwjPJZykUZbXQ1Vq5WdPExqlTH7GKFM4RTGmA=="}],"memo":"Called through gno.studio"},"blockNum":"389958"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1uf8u5jf2m9l80g0zsfq7tufl3qufqc4393jtkl","send":"","pkg_path":"gno.land/r/gnostudio/gnoyourdate","func":"Vote","args":["false","true","true","false"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AitYIWT3az4Jx3hGzTapJ6hyalJ6EYgqQCpYoe7Gx2Sw"},"signature":"3wcTinRsJnFnYNhBNrDkGkucvoJrw0XtFQVC/FqQ0i5D/0ezn13eQeFxfsDrwKtN/vLakBbr5K9RYe3w0e0PEw=="}],"memo":"Called through gno.studio"},"blockNum":"390108"}
