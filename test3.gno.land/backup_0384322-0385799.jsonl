{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15huzsfjrl0k6lhv00anz45zwzp06un2q3kvk69","package":{"Name":"svgen","Path":"gno.land/r/alanrsoares/svgen","Files":[{"Name":"package.gno","Body":"package svgen\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n)\n// Render generates an HTML document containing a random number of SVG shapes randomly positioned.\nfunc Render(path string) string {\n    numShapes := rand.Intn(4) + 3 // Random number of shapes between 3 and 6.\n    shapes := []string{}\n\n    for i := 0; i \u003c numShapes; i++ {\n        switch rand.Intn(3) {\n        case 0:\n            shapes = append(shapes, circle())\n        case 1:\n            shapes = append(shapes, rectangle())\n        case 2:\n            shapes = append(shapes, triangle())\n        }\n    }\n\n    // Join all SVG elements into a single SVG tag.\n    svgContent := fmt.Sprintf(`\u003csvg height=\"256\" width=\"256\"\u003e%s\u003c/svg\u003e`, stringJoin(shapes, \"\"))\n\n    // HTML content with embedded SVG\n    html := fmt.Sprintf(`\n        \u003c!DOCTYPE html\u003e\n        \u003chtml lang=\"en\"\u003e\n        \u003chead\u003e\n            \u003cmeta charset=\"UTF-8\"\u003e\n            \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n            \u003ctitle\u003eRandom SVG Shapes\u003c/title\u003e\n        \u003c/head\u003e\n        \u003cbody\u003e\n            %s\n        \u003c/body\u003e\n        \u003c/html\u003e\n    `, svgContent)\n\n    fmt.Println(html)\n}\n\n\n// randomColor generates a random hex color code.\nfunc randomColor() string {\n    return fmt.Sprintf(\"#%06x\", rand.Intn(16777215))\n}\n\n// circle returns an SVG element string representing a circle at a random position.\nfunc circle() string {\n    radius := rand.Intn(30) + 10 // Circle radius between 10 and 40.\n    x := rand.Intn(256 - radius*2) + radius\n    y := rand.Intn(256 - radius*2) + radius\n    color := randomColor()\n    return fmt.Sprintf(`\u003ccircle cx=\"%d\" cy=\"%d\" r=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, radius, color)\n}\n\n// rectangle returns an SVG element string representing a rectangle at a random position.\nfunc rectangle() string {\n    width := rand.Intn(60) + 10  // Rectangle width between 10 and 70.\n    height := rand.Intn(60) + 10 // Rectangle height between 10 and 70.\n    x := rand.Intn(256 - width)\n    y := rand.Intn(256 - height)\n    color := randomColor()\n    return fmt.Sprintf(`\u003crect x=\"%d\" y=\"%d\" width=\"%d\" height=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, width, height, color)\n}\n\n// triangle returns an SVG element string representing a triangle at a random position.\nfunc triangle() string {\n    x1 := rand.Intn(256)\n    y1 := rand.Intn(256)\n    x2 := x1 + rand.Intn(60) - 30\n    y2 := y1 + rand.Intn(60) - 30\n    x3 := x1 + rand.Intn(60) - 30\n    y3 := y1 + rand.Intn(60) - 30\n    color := randomColor()\n    return fmt.Sprintf(`\u003cpolygon points=\"%d,%d %d,%d %d,%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x1, y1, x2, y2, x3, y3, color)\n}\n\n// stringJoin concatenates slice elements with a separator.\nfunc stringJoin(items []string, sep string) string {\n    switch len(items) {\n    case 0:\n        return \"\"\n    case 1:\n        return items[0]\n    }\n    n := len(sep) * (len(items) - 1)\n    for i := 0; i \u003c len(items); i++ {\n        n += len(items[i])\n    }\n    b := make([]byte, n)\n    bp := copy(b, items[0])\n    for _, s := range items[1:] {\n        bp += copy(b[bp:], sep)\n        bp += copy(b[bp:], s)\n    }\n    return string(b)\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmEB0cd+Z4ydBfK7RvsC2LTi9aIxPGWbCQ6o/kZUUD/i"},"signature":"X87DyzMvLQ9pXWhFKgOIW/j8zUeCO2Go0k14aKUlE01XAgcsp781wJZ4mgSddFLGPLgFCu4Oo01mnrfD1blxlg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"384486"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15huzsfjrl0k6lhv00anz45zwzp06un2q3kvk69","package":{"Name":"hello","Path":"gno.land/r/alanrsoares/hello","Files":[{"Name":"package.gno","Body":"package hello\n\n// Render stuff\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmEB0cd+Z4ydBfK7RvsC2LTi9aIxPGWbCQ6o/kZUUD/i"},"signature":"PVV8Y3DUmBmNipZeXpfwlcL6K6bwUiTgNEE5xeYrtxpmvLVocaiNvkI6YbUMjeoUK0sKTK8KiTTNSZFfVFOPXA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"384496"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15huzsfjrl0k6lhv00anz45zwzp06un2q3kvk69","package":{"Name":"svgen","Path":"gno.land/r/alanrsoares/svgen","Files":[{"Name":"package.gno","Body":"package svgen\n\nimport (\n\t\"math/rand\"\n)\n\n\n// Renders a random svg image\nfunc Render(path string) string {\n\tcount := rand.Intn(4) + 3 // Random number of shapes between 3 and 6.\n\n\tshapes := []string{}\n\tfor i := 0; i \u003c count; i++ {\n\t\tswitch rand.Intn(3) {\n\t\tcase 0:\n\t\t\tshapes = append(shapes, circle())\n\t\tcase 1:\n\t\t\tshapes = append(shapes, rectangle())\n\t\tcase 2:\n\t\t\tshapes = append(shapes, triangle())\n\t\t}\n\t}\n\n\tsvgContent := sprintf(`\u003csvg height=\"256\" width=\"256\"\u003e%s\u003c/svg\u003e`, concatSVGElements(shapes, \"\"))\n\n\thtml := sprintf(`\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eRandom SVG Shapes\u003c/title\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    %s\n\u003c/body\u003e\n\u003c/html\u003e`, svgContent)\n\n\treturn html\n}\n\nfunc concatSVGElements(items []string, sep string) string {\n\tif len(items) == 0 {\n\t\treturn \"\"\n\t}\n\tvar result string\n\tfor _, item := range items {\n\t\tresult += item + sep\n\t}\n\treturn result\n}\n\n// itoa converts an integer to a string.\nfunc itoa(num int) string {\n\tif num == 0 {\n\t\treturn \"0\"\n\t}\n\n\tnegative := num \u003c 0\n\tif negative {\n\t\tnum = -num\n\t}\n\n\tdigits := []byte{}\n\tfor num \u003e 0 {\n\t\tdigit := num % 10\n\t\tdigits = append(digits, '0'+byte(digit))\n\t\tnum /= 10\n\t}\n\n\tif negative {\n\t\tdigits = append(digits, '-')\n\t}\n\n\t// Reverse the digits\n\tfor i, j := 0, len(digits)-1; i \u003c j; i, j = i+1, j-1 {\n\t\tdigits[i], digits[j] = digits[j], digits[i]\n\t}\n\n\treturn string(digits)\n}\n\n// sprintf formats a string with placeholders for strings (%s) and integers (%d).\nfunc sprintf(format string, args ...interface{}) string {\n\tvar result []byte\n\targIndex := 0\n\n\tfor i := 0; i \u003c len(format); i++ {\n\t\tif format[i] == '%' \u0026\u0026 i+1 \u003c len(format) {\n\t\t\tswitch format[i+1] {\n\t\t\tcase 'd':\n\t\t\t\tif argIndex \u003c len(args) {\n\t\t\t\t\tif num, ok := args[argIndex].(int); ok {\n\t\t\t\t\t\tresult = append(result, itoa(num)...)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targIndex++\n\t\t\t\ti++\n\t\t\tcase 's':\n\t\t\t\tif argIndex \u003c len(args) {\n\t\t\t\t\tif str, ok := args[argIndex].(string); ok {\n\t\t\t\t\t\tresult = append(result, str...)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targIndex++\n\t\t\t\ti++\n\t\t\tdefault:\n\t\t\t\tresult = append(result, format[i])\n\t\t\t}\n\t\t} else {\n\t\t\tresult = append(result, format[i])\n\t\t}\n\t}\n\treturn string(result)\n}\n\n// randomColor generates a random hex color code.\nfunc randomColor() string {\n\treturn \"#\" + itoa(rand.Intn(16777215))\n}\n\nfunc circle() string {\n\tradius := rand.Intn(30) + 10\n\tx := rand.Intn(256-radius*2) + radius\n\ty := rand.Intn(256-radius*2) + radius\n\tcolor := randomColor()\n\treturn sprintf(`\u003ccircle cx=\"%d\" cy=\"%d\" r=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, radius, color)\n}\n\nfunc rectangle() string {\n\twidth := rand.Intn(60) + 10\n\theight := rand.Intn(60) + 10\n\tx := rand.Intn(256 - width)\n\ty := rand.Intn(256 - height)\n\tcolor := randomColor()\n\treturn sprintf(`\u003crect x=\"%d\" y=\"%d\" width=\"%d\" height=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, width, height, color)\n}\n\nfunc triangle() string {\n\tx1 := rand.Intn(256)\n\ty1 := rand.Intn(256)\n\tx2 := x1 + rand.Intn(60) - 30\n\ty2 := y1 + rand.Intn(60) - 30\n\tx3 := x1 + rand.Intn(60) - 30\n\ty3 := y1 + rand.Intn(60) - 30\n\tcolor := randomColor()\n\n\treturn sprintf(`\u003cpolygon points=\"%d,%d %d,%d %d,%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x1, y1, x2, y2, x3, y3, color)\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmEB0cd+Z4ydBfK7RvsC2LTi9aIxPGWbCQ6o/kZUUD/i"},"signature":"H7NxltzvrQs99hQwHmvGzY3N9dmBV/iOjbUTTlvarEo5Ys5ZEJyk2F9DgmOnGoUB3F/IJl6dOBKoHe15z2jhdQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"384514"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15huzsfjrl0k6lhv00anz45zwzp06un2q3kvk69","package":{"Name":"svgen","Path":"gno.land/r/alanrsoares/svgen","Files":[{"Name":"package.gno","Body":"package svgen\n\n// Global seed for the random number generator\nvar rndSeed int64 = 0\n\n// Renders a random svg image\nfunc Render(seed int64) string {\n  rndSeed = seed\n\tcount := randIntn(4) + 3 // Random number of shapes between 3 and 6.\n\n\tshapes := []string{}\n\tfor i := 0; i \u003c count; i++ {\n\t\tswitch randIntn(3) {\n\t\tcase 0:\n\t\t\tshapes = append(shapes, circle())\n\t\tcase 1:\n\t\t\tshapes = append(shapes, rectangle())\n\t\tcase 2:\n\t\t\tshapes = append(shapes, triangle())\n\t\t}\n\t}\n\n\tsvgContent := sprintf(`\u003csvg height=\"256\" width=\"256\"\u003e%s\u003c/svg\u003e`, concatSVGElements(shapes, \"\"))\n\n\thtml := sprintf(`\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eRandom SVG Shapes\u003c/title\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    %s\n\u003c/body\u003e\n\u003c/html\u003e`, svgContent)\n\n\treturn html\n}\n\nfunc concatSVGElements(items []string, sep string) string {\n\tif len(items) == 0 {\n\t\treturn \"\"\n\t}\n\tvar result string\n\tfor _, item := range items {\n\t\tresult += item + sep\n\t}\n\treturn result\n}\n\n// itoa converts an integer to a string.\nfunc itoa(num int) string {\n\tif num == 0 {\n\t\treturn \"0\"\n\t}\n\n\tnegative := num \u003c 0\n\tif negative {\n\t\tnum = -num\n\t}\n\n\tdigits := []byte{}\n\tfor num \u003e 0 {\n\t\tdigit := num % 10\n\t\tdigits = append(digits, '0'+byte(digit))\n\t\tnum /= 10\n\t}\n\n\tif negative {\n\t\tdigits = append(digits, '-')\n\t}\n\n\t// Reverse the digits\n\tfor i, j := 0, len(digits)-1; i \u003c j; i, j = i+1, j-1 {\n\t\tdigits[i], digits[j] = digits[j], digits[i]\n\t}\n\n\treturn string(digits)\n}\n\n// sprintf formats a string with placeholders for strings (%s) and integers (%d).\nfunc sprintf(format string, args ...interface{}) string {\n\tvar result []byte\n\targIndex := 0\n\n\tfor i := 0; i \u003c len(format); i++ {\n\t\tif format[i] == '%' \u0026\u0026 i+1 \u003c len(format) {\n\t\t\tswitch format[i+1] {\n\t\t\tcase 'd':\n\t\t\t\tif argIndex \u003c len(args) {\n\t\t\t\t\tif num, ok := args[argIndex].(int); ok {\n\t\t\t\t\t\tresult = append(result, itoa(num)...)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targIndex++\n\t\t\t\ti++\n\t\t\tcase 's':\n\t\t\t\tif argIndex \u003c len(args) {\n\t\t\t\t\tif str, ok := args[argIndex].(string); ok {\n\t\t\t\t\t\tresult = append(result, str...)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targIndex++\n\t\t\t\ti++\n\t\t\tdefault:\n\t\t\t\tresult = append(result, format[i])\n\t\t\t}\n\t\t} else {\n\t\t\tresult = append(result, format[i])\n\t\t}\n\t}\n\treturn string(result)\n}\n\n// randIntn returns a pseudo-random number between 0 and n-1.\nfunc randIntn(n int) int {\n\tif n \u003c= 0 {\n\t\treturn 0\n\t}\n\n\t// Constants for a simple LCG (values taken from Numerical Recipes)\n\tconst (\n\t\ta = 1664525\n\t\tc = 1013904223\n\t\tm = 1 \u003c\u003c 31 // Using 2^31 as the modulus\n\t)\n\n\t// Update the rndSeed with LCG formula\n\trndSeed = (a*rndSeed + c) % m\n\n\t// Scale the rndSeed to the desired range and return it\n\treturn int(rndSeed % int64(n))\n}\n\n// randomColor generates a random hex color code.\nfunc randomColor() string {\n\treturn \"#\" + itoa(randIntn(16777215))\n}\n\nfunc circle() string {\n\tradius := randIntn(30) + 10\n\tx := randIntn(256-radius*2) + radius\n\ty := randIntn(256-radius*2) + radius\n\tcolor := randomColor()\n\treturn sprintf(`\u003ccircle cx=\"%d\" cy=\"%d\" r=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, radius, color)\n}\n\nfunc rectangle() string {\n\twidth := randIntn(60) + 10\n\theight := randIntn(60) + 10\n\tx := randIntn(256 - width)\n\ty := randIntn(256 - height)\n\tcolor := randomColor()\n\treturn sprintf(`\u003crect x=\"%d\" y=\"%d\" width=\"%d\" height=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, width, height, color)\n}\n\nfunc triangle() string {\n\tx1 := randIntn(256)\n\ty1 := randIntn(256)\n\tx2 := x1 + randIntn(60) - 30\n\ty2 := y1 + randIntn(60) - 30\n\tx3 := x1 + randIntn(60) - 30\n\ty3 := y1 + randIntn(60) - 30\n\tcolor := randomColor()\n\n\treturn sprintf(`\u003cpolygon points=\"%d,%d %d,%d %d,%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x1, y1, x2, y2, x3, y3, color)\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmEB0cd+Z4ydBfK7RvsC2LTi9aIxPGWbCQ6o/kZUUD/i"},"signature":"cdv5uFN3MtyAl2sca5n8muZoLDwJ1Rgyy2/LwPXQwiMJkk6xQGlVEny8lF031SStWoCNYVjaOvtmYTbIwH+7BA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"384541"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g15huzsfjrl0k6lhv00anz45zwzp06un2q3kvk69","send":"","pkg_path":"gno.land/r/alanrsoares/svgen","func":"Render","args":["123123123"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmEB0cd+Z4ydBfK7RvsC2LTi9aIxPGWbCQ6o/kZUUD/i"},"signature":"0efDMPDLxxr36sam1fJRrHI5DcT4HMyXCqP0T64mgEoZHhDaMttbqZx5H+s6dd0F1qXmdno7b/G3GBCj+/4qpA=="}],"memo":"Called through gno.studio"},"blockNum":"384543"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15huzsfjrl0k6lhv00anz45zwzp06un2q3kvk69","package":{"Name":"svgen2","Path":"gno.land/r/alanrsoares/svgen2","Files":[{"Name":"package.gno","Body":"package svgen\n\n// Global seed for the random number generator\nvar rndSeed int64 = 0\n\n// Renders a random svg image\nfunc Render(seed string) string {\n\tif seed == \"\" {\n\t\trndSeed = int64(1234567890)\n\t}\n\n\tcount := randIntn(4) + 3 // Random number of shapes between 3 and 6.\n\n\tshapes := []string{}\n\tfor i := 0; i \u003c count; i++ {\n\t\tswitch randIntn(3) {\n\t\tcase 0:\n\t\t\tshapes = append(shapes, circle())\n\t\tcase 1:\n\t\t\tshapes = append(shapes, rectangle())\n\t\tcase 2:\n\t\t\tshapes = append(shapes, triangle())\n\t\t}\n\t}\n\n\tsvgContent := sprintf(`\u003csvg height=\"256\" width=\"256\"\u003e%s\u003c/svg\u003e`, concatSVGElements(shapes, \"\"))\n\n\thtml := sprintf(`\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eRandom SVG Shapes\u003c/title\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    %s\n\u003c/body\u003e\n\u003c/html\u003e`, svgContent)\n\n\treturn html\n}\n\nfunc concatSVGElements(items []string, sep string) string {\n\tif len(items) == 0 {\n\t\treturn \"\"\n\t}\n\tvar result string\n\tfor _, item := range items {\n\t\tresult += item + sep\n\t}\n\treturn result\n}\n\n// itoa converts an integer to a string.\nfunc itoa(num int) string {\n\tif num == 0 {\n\t\treturn \"0\"\n\t}\n\n\tnegative := num \u003c 0\n\tif negative {\n\t\tnum = -num\n\t}\n\n\tdigits := []byte{}\n\tfor num \u003e 0 {\n\t\tdigit := num % 10\n\t\tdigits = append(digits, '0'+byte(digit))\n\t\tnum /= 10\n\t}\n\n\tif negative {\n\t\tdigits = append(digits, '-')\n\t}\n\n\t// Reverse the digits\n\tfor i, j := 0, len(digits)-1; i \u003c j; i, j = i+1, j-1 {\n\t\tdigits[i], digits[j] = digits[j], digits[i]\n\t}\n\n\treturn string(digits)\n}\n\n// sprintf formats a string with placeholders for strings (%s) and integers (%d).\nfunc sprintf(format string, args ...interface{}) string {\n\tvar result []byte\n\targIndex := 0\n\n\tfor i := 0; i \u003c len(format); i++ {\n\t\tif format[i] == '%' \u0026\u0026 i+1 \u003c len(format) {\n\t\t\tswitch format[i+1] {\n\t\t\tcase 'd':\n\t\t\t\tif argIndex \u003c len(args) {\n\t\t\t\t\tif num, ok := args[argIndex].(int); ok {\n\t\t\t\t\t\tresult = append(result, itoa(num)...)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targIndex++\n\t\t\t\ti++\n\t\t\tcase 's':\n\t\t\t\tif argIndex \u003c len(args) {\n\t\t\t\t\tif str, ok := args[argIndex].(string); ok {\n\t\t\t\t\t\tresult = append(result, str...)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targIndex++\n\t\t\t\ti++\n\t\t\tdefault:\n\t\t\t\tresult = append(result, format[i])\n\t\t\t}\n\t\t} else {\n\t\t\tresult = append(result, format[i])\n\t\t}\n\t}\n\treturn string(result)\n}\n\n// randIntn returns a pseudo-random number between 0 and n-1.\nfunc randIntn(n int) int {\n\tif n \u003c= 0 {\n\t\treturn 0\n\t}\n\n\t// Constants for a simple LCG (values taken from Numerical Recipes)\n\tconst (\n\t\ta = 1664525\n\t\tc = 1013904223\n\t\tm = 1 \u003c\u003c 31 // Using 2^31 as the modulus\n\t)\n\n\t// Update the rndSeed with LCG formula\n\trndSeed = (a*rndSeed + c) % m\n\n\t// Scale the rndSeed to the desired range and return it\n\treturn int(rndSeed % int64(n))\n}\n\n// randomColor generates a random hex color code.\nfunc randomColor() string {\n\treturn \"#\" + itoa(randIntn(16777215))\n}\n\nfunc circle() string {\n\tradius := randIntn(30) + 10\n\tx := randIntn(256-radius*2) + radius\n\ty := randIntn(256-radius*2) + radius\n\tcolor := randomColor()\n\treturn sprintf(`\u003ccircle cx=\"%d\" cy=\"%d\" r=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, radius, color)\n}\n\nfunc rectangle() string {\n\twidth := randIntn(60) + 10\n\theight := randIntn(60) + 10\n\tx := randIntn(256 - width)\n\ty := randIntn(256 - height)\n\tcolor := randomColor()\n\treturn sprintf(`\u003crect x=\"%d\" y=\"%d\" width=\"%d\" height=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, width, height, color)\n}\n\nfunc triangle() string {\n\tx1 := randIntn(256)\n\ty1 := randIntn(256)\n\tx2 := x1 + randIntn(60) - 30\n\ty2 := y1 + randIntn(60) - 30\n\tx3 := x1 + randIntn(60) - 30\n\ty3 := y1 + randIntn(60) - 30\n\tcolor := randomColor()\n\n\treturn sprintf(`\u003cpolygon points=\"%d,%d %d,%d %d,%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x1, y1, x2, y2, x3, y3, color)\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmEB0cd+Z4ydBfK7RvsC2LTi9aIxPGWbCQ6o/kZUUD/i"},"signature":"GgHxhH4OYV2pDMF9dlx+bEms2fHyCWtMCzeAzHP0J29+yByD8lDrAf3ZmYBUXMgn/FbBvkCHHOeQtFuL0XalVQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"384560"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15huzsfjrl0k6lhv00anz45zwzp06un2q3kvk69","package":{"Name":"svgen2","Path":"gno.land/r/alanrsoares/svgen2","Files":[{"Name":"package.gno","Body":"package svgen2\n\n// Global seed for the random number generator\nvar rndSeed int64 = 0\n\n// Renders a random svg image\nfunc Render(seed string) string {\n\tif seed == \"\" {\n\t\trndSeed = int64(1234567890)\n\t}\n\n\tcount := randIntn(4) + 3 // Random number of shapes between 3 and 6.\n\n\tshapes := []string{}\n\tfor i := 0; i \u003c count; i++ {\n\t\tswitch randIntn(3) {\n\t\tcase 0:\n\t\t\tshapes = append(shapes, circle())\n\t\tcase 1:\n\t\t\tshapes = append(shapes, rectangle())\n\t\tcase 2:\n\t\t\tshapes = append(shapes, triangle())\n\t\t}\n\t}\n\n\tsvgContent := sprintf(`\u003csvg height=\"256\" width=\"256\"\u003e%s\u003c/svg\u003e`, concatSVGElements(shapes, \"\"))\n\n\thtml := sprintf(`\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eRandom SVG Shapes\u003c/title\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    %s\n\u003c/body\u003e\n\u003c/html\u003e`, svgContent)\n\n\treturn html\n}\n\nfunc concatSVGElements(items []string, sep string) string {\n\tif len(items) == 0 {\n\t\treturn \"\"\n\t}\n\tvar result string\n\tfor _, item := range items {\n\t\tresult += item + sep\n\t}\n\treturn result\n}\n\n// itoa converts an integer to a string.\nfunc itoa(num int) string {\n\tif num == 0 {\n\t\treturn \"0\"\n\t}\n\n\tnegative := num \u003c 0\n\tif negative {\n\t\tnum = -num\n\t}\n\n\tdigits := []byte{}\n\tfor num \u003e 0 {\n\t\tdigit := num % 10\n\t\tdigits = append(digits, '0'+byte(digit))\n\t\tnum /= 10\n\t}\n\n\tif negative {\n\t\tdigits = append(digits, '-')\n\t}\n\n\t// Reverse the digits\n\tfor i, j := 0, len(digits)-1; i \u003c j; i, j = i+1, j-1 {\n\t\tdigits[i], digits[j] = digits[j], digits[i]\n\t}\n\n\treturn string(digits)\n}\n\n// sprintf formats a string with placeholders for strings (%s) and integers (%d).\nfunc sprintf(format string, args ...interface{}) string {\n\tvar result []byte\n\targIndex := 0\n\n\tfor i := 0; i \u003c len(format); i++ {\n\t\tif format[i] == '%' \u0026\u0026 i+1 \u003c len(format) {\n\t\t\tswitch format[i+1] {\n\t\t\tcase 'd':\n\t\t\t\tif argIndex \u003c len(args) {\n\t\t\t\t\tif num, ok := args[argIndex].(int); ok {\n\t\t\t\t\t\tresult = append(result, itoa(num)...)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targIndex++\n\t\t\t\ti++\n\t\t\tcase 's':\n\t\t\t\tif argIndex \u003c len(args) {\n\t\t\t\t\tif str, ok := args[argIndex].(string); ok {\n\t\t\t\t\t\tresult = append(result, str...)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targIndex++\n\t\t\t\ti++\n\t\t\tdefault:\n\t\t\t\tresult = append(result, format[i])\n\t\t\t}\n\t\t} else {\n\t\t\tresult = append(result, format[i])\n\t\t}\n\t}\n\treturn string(result)\n}\n\n// randIntn returns a pseudo-random number between 0 and n-1.\nfunc randIntn(n int) int {\n\tif n \u003c= 0 {\n\t\treturn 0\n\t}\n\n\t// Constants for a simple LCG (values taken from Numerical Recipes)\n\tconst (\n\t\ta = 1664525\n\t\tc = 1013904223\n\t\tm = 1 \u003c\u003c 31 // Using 2^31 as the modulus\n\t)\n\n\t// Update the rndSeed with LCG formula\n\trndSeed = (a*rndSeed + c) % m\n\n\t// Scale the rndSeed to the desired range and return it\n\treturn int(rndSeed % int64(n))\n}\n\n// randomColor generates a random hex color code.\nfunc randomColor() string {\n\treturn \"#\" + itoa(randIntn(16777215))\n}\n\nfunc circle() string {\n\tradius := randIntn(30) + 10\n\tx := randIntn(256-radius*2) + radius\n\ty := randIntn(256-radius*2) + radius\n\tcolor := randomColor()\n\treturn sprintf(`\u003ccircle cx=\"%d\" cy=\"%d\" r=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, radius, color)\n}\n\nfunc rectangle() string {\n\twidth := randIntn(60) + 10\n\theight := randIntn(60) + 10\n\tx := randIntn(256 - width)\n\ty := randIntn(256 - height)\n\tcolor := randomColor()\n\treturn sprintf(`\u003crect x=\"%d\" y=\"%d\" width=\"%d\" height=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, width, height, color)\n}\n\nfunc triangle() string {\n\tx1 := randIntn(256)\n\ty1 := randIntn(256)\n\tx2 := x1 + randIntn(60) - 30\n\ty2 := y1 + randIntn(60) - 30\n\tx3 := x1 + randIntn(60) - 30\n\ty3 := y1 + randIntn(60) - 30\n\tcolor := randomColor()\n\n\treturn sprintf(`\u003cpolygon points=\"%d,%d %d,%d %d,%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x1, y1, x2, y2, x3, y3, color)\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmEB0cd+Z4ydBfK7RvsC2LTi9aIxPGWbCQ6o/kZUUD/i"},"signature":"5Mnt6okC+OxJk227QkDPYUzQakJAG70rIaDxlLuoldhnsK7I7OlvKF/YLmPJBRqyTIlZg0FG46rsfVgZXrJ3Jg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"384562"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g15huzsfjrl0k6lhv00anz45zwzp06un2q3kvk69","send":"","pkg_path":"gno.land/r/alanrsoares/svgen2","func":"Render","args":[""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmEB0cd+Z4ydBfK7RvsC2LTi9aIxPGWbCQ6o/kZUUD/i"},"signature":"AIT7zEu7ob3eYUCpI6Dv3VY/Dz5AHd4bJiEXuFV1iEZipY88W+XQ4HgCyuoqsiUgj1VMTiZjagzFi6pQPuzQPA=="}],"memo":"Called through gno.studio"},"blockNum":"384565"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15huzsfjrl0k6lhv00anz45zwzp06un2q3kvk69","package":{"Name":"svgen3","Path":"gno.land/r/alanrsoares/svgen3","Files":[{"Name":"package.gno","Body":"package svgen3\n\n// Global seed for the random number generator\nvar rndSeed int64 = 0\n\n// Renders a random svg image\nfunc Render(seed string) string {\n\tif seed == \"\" {\n\t\trndSeed = int64(1234567890)\n\t}\n\n\tcount := randIntn(4) + 3 // Random number of shapes between 3 and 6.\n\n\tshapes := []string{}\n\tfor i := 0; i \u003c count; i++ {\n\t\tswitch randIntn(3) {\n\t\tcase 0:\n\t\t\tshapes = append(shapes, circle())\n\t\tcase 1:\n\t\t\tshapes = append(shapes, rectangle())\n\t\tcase 2:\n\t\t\tshapes = append(shapes, triangle())\n\t\t}\n\t}\n\n\tsvgContent := sprintf(`\u003csvg height=\"256\" width=\"256\"\u003e%s\u003c/svg\u003e`, concatSVGElements(shapes, \"\"))\n\n\thtml := sprintf(`\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eRandom SVG Shapes\u003c/title\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    %s\n\u003c/body\u003e\n\u003c/html\u003e`, svgContent)\n\n\treturn html\n}\n\nfunc concatSVGElements(items []string, sep string) string {\n\tif len(items) == 0 {\n\t\treturn \"\"\n\t}\n\tvar result string\n\tfor _, item := range items {\n\t\tresult += item + sep\n\t}\n\treturn result\n}\n\n// itoa converts an integer to a string.\nfunc itoa(num int) string {\n\tif num == 0 {\n\t\treturn \"0\"\n\t}\n\n\tnegative := num \u003c 0\n\tif negative {\n\t\tnum = -num\n\t}\n\n\tdigits := []byte{}\n\tfor num \u003e 0 {\n\t\tdigit := num % 10\n\t\tdigits = append(digits, '0'+byte(digit))\n\t\tnum /= 10\n\t}\n\n\tif negative {\n\t\tdigits = append(digits, '-')\n\t}\n\n\t// Reverse the digits\n\tfor i, j := 0, len(digits)-1; i \u003c j; i, j = i+1, j-1 {\n\t\tdigits[i], digits[j] = digits[j], digits[i]\n\t}\n\n\treturn string(digits)\n}\n\n// sprintf formats a string with placeholders for strings (%s) and integers (%d).\nfunc sprintf(format string, args ...interface{}) string {\n\tvar result []byte\n\targIndex := 0\n\n\tfor i := 0; i \u003c len(format); i++ {\n\t\tif format[i] == '%' \u0026\u0026 i+1 \u003c len(format) {\n\t\t\tswitch format[i+1] {\n\t\t\tcase 'd':\n\t\t\t\tif argIndex \u003c len(args) {\n\t\t\t\t\tif num, ok := args[argIndex].(int); ok {\n\t\t\t\t\t\tresult = append(result, itoa(num)...)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targIndex++\n\t\t\t\ti++\n\t\t\tcase 's':\n\t\t\t\tif argIndex \u003c len(args) {\n\t\t\t\t\tif str, ok := args[argIndex].(string); ok {\n\t\t\t\t\t\tresult = append(result, str...)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targIndex++\n\t\t\t\ti++\n\t\t\tdefault:\n\t\t\t\tresult = append(result, format[i])\n\t\t\t}\n\t\t} else {\n\t\t\tresult = append(result, format[i])\n\t\t}\n\t}\n\treturn string(result)\n}\n\n// randIntn returns a pseudo-random number between 0 and n-1.\nfunc randIntn(n int) int {\n\tif n \u003c= 0 {\n\t\treturn 0\n\t}\n\n\t// Constants for a simple LCG (values taken from Numerical Recipes)\n\tconst (\n\t\ta = 1664525\n\t\tc = 1013904223\n\t\tm = 1 \u003c\u003c 31 // Using 2^31 as the modulus\n\t)\n\n\t// Update the rndSeed with LCG formula\n\trndSeed = (a*rndSeed + c) % m\n\n\t// Scale the rndSeed to the desired range and return it\n\treturn int(rndSeed % int64(n))\n}\n\n// randomColor generates a random hex color code.\nfunc randomColor() string {\n\treturn \"#\" + itoa(randIntn(16777215))\n}\n\nfunc circle() string {\n\tradius := randIntn(30) + 10\n\tx := randIntn(256-radius*2) + radius\n\ty := randIntn(256-radius*2) + radius\n\tcolor := randomColor()\n\treturn sprintf(`\u003ccircle cx=\"%d\" cy=\"%d\" r=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, radius, color)\n}\n\nfunc rectangle() string {\n\twidth := randIntn(60) + 10\n\theight := randIntn(60) + 10\n\tx := randIntn(256 - width)\n\ty := randIntn(256 - height)\n\tcolor := randomColor()\n\treturn sprintf(`\u003crect x=\"%d\" y=\"%d\" width=\"%d\" height=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, width, height, color)\n}\n\nfunc triangle() string {\n\tx1 := randIntn(256)\n\ty1 := randIntn(256)\n\tx2 := x1 + randIntn(60) - 30\n\ty2 := y1 + randIntn(60) - 30\n\tx3 := x1 + randIntn(60) - 30\n\ty3 := y1 + randIntn(60) - 30\n\tcolor := randomColor()\n\n\treturn sprintf(`\u003cpolygon points=\"%d,%d %d,%d %d,%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x1, y1, x2, y2, x3, y3, color)\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmEB0cd+Z4ydBfK7RvsC2LTi9aIxPGWbCQ6o/kZUUD/i"},"signature":"L8hxqjz9fJ8fFkWqI8ijcmbUnMJLY8oB2jYcX4S1QARwAMeDDpAERhDglpxraafZED9dLQyiOUon6FgvoP09aQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"384568"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15huzsfjrl0k6lhv00anz45zwzp06un2q3kvk69","package":{"Name":"svgen4","Path":"gno.land/r/alanrsoares/svgen4","Files":[{"Name":"package.gno","Body":"package svgen4\n\n// Global seed for the random number generator\nvar rndSeed int64 = 0\n\n// Renders a random svg image\nfunc Render(seed string) string {\n\tif seed == \"\" {\n\t\trndSeed = int64(1234567890)\n\t}\n\n\tcount := randIntn(4) + 3 // Random number of shapes between 3 and 6.\n\n\tshapes := []string{}\n\tfor i := 0; i \u003c count; i++ {\n\t\tswitch randIntn(3) {\n\t\tcase 0:\n\t\t\tshapes = append(shapes, circle())\n\t\tcase 1:\n\t\t\tshapes = append(shapes, rectangle())\n\t\tcase 2:\n\t\t\tshapes = append(shapes, triangle())\n\t\t}\n\t}\n\n\tsvgContent := sprintf(`\u003csvg height=\"256\" width=\"256\"\u003e%s\u003c/svg\u003e`, concatSVGElements(shapes, \"\"))\n\n\treturn svgContent\n}\n\nfunc concatSVGElements(items []string, sep string) string {\n\tif len(items) == 0 {\n\t\treturn \"\"\n\t}\n\tvar result string\n\tfor _, item := range items {\n\t\tresult += item + sep\n\t}\n\treturn result\n}\n\n// itoa converts an integer to a string.\nfunc itoa(num int) string {\n\tif num == 0 {\n\t\treturn \"0\"\n\t}\n\n\tnegative := num \u003c 0\n\tif negative {\n\t\tnum = -num\n\t}\n\n\tdigits := []byte{}\n\tfor num \u003e 0 {\n\t\tdigit := num % 10\n\t\tdigits = append(digits, '0'+byte(digit))\n\t\tnum /= 10\n\t}\n\n\tif negative {\n\t\tdigits = append(digits, '-')\n\t}\n\n\t// Reverse the digits\n\tfor i, j := 0, len(digits)-1; i \u003c j; i, j = i+1, j-1 {\n\t\tdigits[i], digits[j] = digits[j], digits[i]\n\t}\n\n\treturn string(digits)\n}\n\n// sprintf formats a string with placeholders for strings (%s) and integers (%d).\nfunc sprintf(format string, args ...interface{}) string {\n\tvar result []byte\n\targIndex := 0\n\n\tfor i := 0; i \u003c len(format); i++ {\n\t\tif format[i] == '%' \u0026\u0026 i+1 \u003c len(format) {\n\t\t\tswitch format[i+1] {\n\t\t\tcase 'd':\n\t\t\t\tif argIndex \u003c len(args) {\n\t\t\t\t\tif num, ok := args[argIndex].(int); ok {\n\t\t\t\t\t\tresult = append(result, itoa(num)...)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targIndex++\n\t\t\t\ti++\n\t\t\tcase 's':\n\t\t\t\tif argIndex \u003c len(args) {\n\t\t\t\t\tif str, ok := args[argIndex].(string); ok {\n\t\t\t\t\t\tresult = append(result, str...)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targIndex++\n\t\t\t\ti++\n\t\t\tdefault:\n\t\t\t\tresult = append(result, format[i])\n\t\t\t}\n\t\t} else {\n\t\t\tresult = append(result, format[i])\n\t\t}\n\t}\n\treturn string(result)\n}\n\n// randIntn returns a pseudo-random number between 0 and n-1.\nfunc randIntn(n int) int {\n\tif n \u003c= 0 {\n\t\treturn 0\n\t}\n\n\t// Constants for a simple LCG (values taken from Numerical Recipes)\n\tconst (\n\t\ta = 1664525\n\t\tc = 1013904223\n\t\tm = 1 \u003c\u003c 31 // Using 2^31 as the modulus\n\t)\n\n\t// Update the rndSeed with LCG formula\n\trndSeed = (a*rndSeed + c) % m\n\n\t// Scale the rndSeed to the desired range and return it\n\treturn int(rndSeed % int64(n))\n}\n\n// randomColor generates a random hex color code.\nfunc randomColor() string {\n\treturn \"#\" + itoa(randIntn(16777215))\n}\n\nfunc circle() string {\n\tradius := randIntn(30) + 10\n\tx := randIntn(256-radius*2) + radius\n\ty := randIntn(256-radius*2) + radius\n\tcolor := randomColor()\n\treturn sprintf(`\u003ccircle cx=\"%d\" cy=\"%d\" r=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, radius, color)\n}\n\nfunc rectangle() string {\n\twidth := randIntn(60) + 10\n\theight := randIntn(60) + 10\n\tx := randIntn(256 - width)\n\ty := randIntn(256 - height)\n\tcolor := randomColor()\n\treturn sprintf(`\u003crect x=\"%d\" y=\"%d\" width=\"%d\" height=\"%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x, y, width, height, color)\n}\n\nfunc triangle() string {\n\tx1 := randIntn(256)\n\ty1 := randIntn(256)\n\tx2 := x1 + randIntn(60) - 30\n\ty2 := y1 + randIntn(60) - 30\n\tx3 := x1 + randIntn(60) - 30\n\ty3 := y1 + randIntn(60) - 30\n\tcolor := randomColor()\n\n\treturn sprintf(`\u003cpolygon points=\"%d,%d %d,%d %d,%d\" stroke=\"black\" stroke-width=\"3\" fill=\"%s\" /\u003e`, x1, y1, x2, y2, x3, y3, color)\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmEB0cd+Z4ydBfK7RvsC2LTi9aIxPGWbCQ6o/kZUUD/i"},"signature":"I+NeGwUB6LKwTicBgIgDwE1PQDN1M73rl9ucZbummgBCHSDu1u2VZQig6hJCL5wPzb+q0Pzy67a/of2llLKR9w=="}],"memo":"Deployed through play.gno.land"},"blockNum":"384571"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13d7jc32adhc39erm5me38w5v7ej7lpvlnqjk73","to_address":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","amount":"20000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/+cjV0/gZkWzMqCul8aP5hC7M3yliIs17uinn/+66uR"},"signature":"j9IM+jIo2Ug2emRXvuiVzNv6pGIuBiYx+yMpOzCEy/R5I3vsEsNBp+ipdVFHtWtDZU5diDGnmRbNSZyTt0qVVA=="}],"memo":""},"blockNum":"384691"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13d7jc32adhc39erm5me38w5v7ej7lpvlnqjk73","to_address":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","amount":"20000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/+cjV0/gZkWzMqCul8aP5hC7M3yliIs17uinn/+66uR"},"signature":"1UUheH+1LisR1XbafMpenEx5KYwjL49yZqYJl6wmF7R2dJAeETBzA4kPq4wQg+zn7U+9/6w+olQBVFyNiMO6Xg=="}],"memo":""},"blockNum":"384693"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13d7jc32adhc39erm5me38w5v7ej7lpvlnqjk73","to_address":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","amount":"20000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/+cjV0/gZkWzMqCul8aP5hC7M3yliIs17uinn/+66uR"},"signature":"EI6jRv3mlcuXelwifN6Lw0JvfYQQ9tnp+KP0o1fhQdBQrRpHfnqgW1KWV248dYOj0BKHGE1h1eQWOy7c6It7vQ=="}],"memo":""},"blockNum":"384695"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1dnllrdzwfhxv3evyk09y48mgn5phfjvtyrlzm7","send":"","pkg_path":"gno.land/r/feedback/simplefeedback","func":"SubmitFeedback","args":[""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsGEi/6/N0zRtRCWxHb7KZ1Z/BTfZIc77fvtkSRJlmwQ"},"signature":"sKRasZL2ExuGBea8u++E55L6fTurvFaUUSjYWocvIFpyp/GjfSOT633opBI8UmsunF6CyAes+9749HdZnIIoWA=="}],"memo":"Called through gno.studio"},"blockNum":"384697"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13d7jc32adhc39erm5me38w5v7ej7lpvlnqjk73","to_address":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","amount":"20000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/+cjV0/gZkWzMqCul8aP5hC7M3yliIs17uinn/+66uR"},"signature":"aM/g1Cd6i6b6RX4PZgZSgwmdZAGrlJSzERqp0MGsJSofrMoUebfhWcZ67mRswlJ52d7jcTW8+Z3wFLSWoZwwBg=="}],"memo":""},"blockNum":"384699"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13d7jc32adhc39erm5me38w5v7ej7lpvlnqjk73","to_address":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","amount":"20000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/+cjV0/gZkWzMqCul8aP5hC7M3yliIs17uinn/+66uR"},"signature":"2Dzx2sVw1UXgREgpVgOhRG9BXwoYSOFcjjVeCkh4rwRPu3N6DPcztjkbhqMLrc82nhwUGm/2vGmV94lc2heMkQ=="}],"memo":""},"blockNum":"384704"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g1kh0rnxzpmadzushz2fmspt7sspmljk3ufdzxae","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxjyQBsJI8CesbgwihvS/eQtYKoezyoA9P+FRlLAKRwg"},"signature":"R39tm1+VyIy/NxaTJ/7P9YVzOL3dQQcxDZQFg1kPhtkVkcz68qxn8Yt5wzTkKvhlTubFkUk7j8EeIopZHb124A=="}],"memo":""},"blockNum":"384845"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g10xt7fmglfl2fn2cmkhkgjecwhjxhudwnhswcc7","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxjyQBsJI8CesbgwihvS/eQtYKoezyoA9P+FRlLAKRwg"},"signature":"D88esZ8T72kORCq/mBw9U7zWe531XYxdmJhB5rCE9ulqVm6k/QM2utWDDvXT829HqVT8VTPb1D/Fp21/GaSDNg=="}],"memo":""},"blockNum":"384855"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13d7jc32adhc39erm5me38w5v7ej7lpvlnqjk73","to_address":"g13f63ua8uhmuf9mgc0x8zfz04yrsaqh7j78vcgq","amount":"20000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/+cjV0/gZkWzMqCul8aP5hC7M3yliIs17uinn/+66uR"},"signature":"lWdSxTy6ijmhZDSyGU+PpSYg3NlJlFT0lpcjphmHknZCP1oPLnmFzbrBlVWO/3i1WA+nYwnrXwdvk3Rk1CE7UA=="}],"memo":""},"blockNum":"385046"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13d7jc32adhc39erm5me38w5v7ej7lpvlnqjk73","to_address":"g13f63ua8uhmuf9mgc0x8zfz04yrsaqh7j78vcgq","amount":"20000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/+cjV0/gZkWzMqCul8aP5hC7M3yliIs17uinn/+66uR"},"signature":"5uTZ37LJa0z0Qcg49QpS782iUhybg+81CJ0CzhKSbIEG3fWq9aFv7dBLjjpDrlihRvbe1TzOESXRWPxtWBfpGg=="}],"memo":""},"blockNum":"385048"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13d7jc32adhc39erm5me38w5v7ej7lpvlnqjk73","to_address":"g13f63ua8uhmuf9mgc0x8zfz04yrsaqh7j78vcgq","amount":"20000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/+cjV0/gZkWzMqCul8aP5hC7M3yliIs17uinn/+66uR"},"signature":"/PmS3+ba/kFG9JE/+RG0DR2hDY8IAHKkSed6yKu8bawckm+eE6nGLbkShp196RzjlaxVLvrtQ1KupLzHGIvOAw=="}],"memo":""},"blockNum":"385051"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13d7jc32adhc39erm5me38w5v7ej7lpvlnqjk73","to_address":"g13f63ua8uhmuf9mgc0x8zfz04yrsaqh7j78vcgq","amount":"20000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/+cjV0/gZkWzMqCul8aP5hC7M3yliIs17uinn/+66uR"},"signature":"bNb8ddRSWAHO/76P8iwZ5XINzBEqhbp6vW+KYNr1T1pmF4aIph/Q1KNivawbD30LtY8alHRiphUeODyiLUInEg=="}],"memo":""},"blockNum":"385054"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13d7jc32adhc39erm5me38w5v7ej7lpvlnqjk73","to_address":"g13f63ua8uhmuf9mgc0x8zfz04yrsaqh7j78vcgq","amount":"20000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/+cjV0/gZkWzMqCul8aP5hC7M3yliIs17uinn/+66uR"},"signature":"nCm0LiPmgxQlsx3BcwW9JW+7FSccEaqx7buVhVHNq68vGk4HD4wZg9OowjWP1shytQtTHlUApjqeJ7UDdWHJUw=="}],"memo":""},"blockNum":"385056"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13d7jc32adhc39erm5me38w5v7ej7lpvlnqjk73","to_address":"g13f63ua8uhmuf9mgc0x8zfz04yrsaqh7j78vcgq","amount":"20000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/+cjV0/gZkWzMqCul8aP5hC7M3yliIs17uinn/+66uR"},"signature":"jXWDaGzRN08Qe9glZpHRnFgQXk696kwL5t8JNphGcJA4efMDoSl/47en14WXN7/VCctJQ9J3TIOCds39QiOolA=="}],"memo":""},"blockNum":"385059"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"Name":"hello","Path":"gno.land/r/test50/hello","Files":[{"Name":"package.gno","Body":"package hello\n\nfunc Test(seed int64) int64 {\n  return seed + 1\n}"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"lnwYuJeHmWzeGei2jtwmf+dPdgtIvMfrGRkHOnrCnj0EZ1rvh0cI5ehfndzMQm0DHP7xBpYIRhG2hO87DF7elg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"385126"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/test50/hello","func":"Test","args":["2"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"sFwr9c2wnVdM7T3fIzZn+dKUXf3X4fHZ58zK6ju7dE1B0T4sSUVLYRsvVJpyFMgikAFv35KHreLt4V9fdCcEIQ=="}],"memo":"Called through gno.studio"},"blockNum":"385128"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/test50/hello","func":"Test","args":[""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"plHxP/cdeC7YXijNS6fa13wzlPq+sMarmQquDyhQIjUzNyX6zX2l1/KW2vBz9JK2EeKZOovyBA/uxz/NxGsbbw=="}],"memo":"Called through gno.studio"},"blockNum":"385130"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/test50/hello","func":"Test","args":[""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"VCWVhDTdJG7ClApVnq+l3ljvLxQEwuoY+8kSrCsOtfs6LFkAntAfTRKteF0WSabqZfDwhHZw1yZNIuvsUqNpiQ=="}],"memo":"Called through gno.studio"},"blockNum":"385132"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/test50/hello","func":"Test","args":["0"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"SAoUWSeBqNAyQE5Pz7wFyaJc/0BtklAV24q8GXFL9d5dMQBakNx4NmheauE6SuB+LO3huqOuSzMD4bwaAwSxVg=="}],"memo":"Called through gno.studio"},"blockNum":"385135"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/test50/hello","func":"Test","args":["0"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"uhhPrve52Yk1vZx7P3UYHXkoU+YlUmp4W5lHsE2as85bIso0dCaeqMdmcVeONg2tvlwI6b2B6PYbRelIVUG64A=="}],"memo":"Called through gno.studio"},"blockNum":"385138"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/test50/hello","func":"Test","args":["0"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"rAgxXtsLOKreCirnUbpjeRsdo4S4hcWjMfvKOGWqIAc2jfR+1yL0sMLvGJlvuP7ZPHj2EgjS1NgUKvYbTnis9w=="}],"memo":"Called through gno.studio"},"blockNum":"385140"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/test50/hello","func":"Test","args":[""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"GOsxxjFGmk5t+fkk7GUl4yO2FDKaF8b74M+jFs2LHA1pb8g7gs3XzCMMRt7RAhevVSRuFQzecSuo6v3Ujl4Fog=="}],"memo":"Called through gno.studio"},"blockNum":"385142"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/test50/hello","func":"Test","args":["23"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"YPwFmyHzuiENMbrgxzpnxBFRrxZtnzYEwMkvDOp+2yUE5e9R871he9O4RBtrjOeaGe1E8QnQz7lqVCzAN8lSdg=="}],"memo":"Called through gno.studio"},"blockNum":"385144"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jazghxvvgz3egnr2fc8uf72z4g0l03596y9ls7","send":"","pkg_path":"gno.land/r/gnostudio/feedback_v1","func":"SubmitFeedback","args":["Mobile design for Connect is not fully responsive - the main screen renders elements beyond the right border of the screen"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzFdv1Uf9hYAYGR/nDjpuWViwY6oujHVSjOHfnVPnW0a"},"signature":"7B05p0fjs7vZ8dBB0icpyUSh4fPxoqOuoXuZ0Q4d9mIXA1MPGfmStFTtBMH1mL1fTfHSKmNGyYCUg/kkVMOjBw=="}],"memo":"Called through gno.studio"},"blockNum":"385208"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jazghxvvgz3egnr2fc8uf72z4g0l03596y9ls7","send":"","pkg_path":"gno.land/r/gnostudio/feedback_v1","func":"SubmitFeedback","args":["Connect: On a 14in laptop with 1920x1080 screen and 150% scale (recommended) the footer elements (Contact, Feedback, etc.) are rendered beyond the view field, without a scroll bar."]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzFdv1Uf9hYAYGR/nDjpuWViwY6oujHVSjOHfnVPnW0a"},"signature":"Trxwt5jb8Lvubco74Aj2/Lki9iSJ4vm5zmlC1jrM4vYG5xfzz0xICDDGBJAM41Jsy0X5QsHPyyToJQ3/6A+8+A=="}],"memo":"Called through gno.studio"},"blockNum":"385214"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","send":"","pkg_path":"gno.land/r/jeronimoalbi/poll_v1","func":"Vote","args":["false","true","false","false"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvC68IPWD/o8iYM+et/K6YpBp4+m0hF3mLXIdFZnWH1Y"},"signature":"MAGT2LmL2nUTrJOBfQ3/crxvLUZXR6QDBnuJ9NJ1BXsHn84zdryoRxHGpFkkWzynuv4PbuxwUV3Bffr3naVGAQ=="}],"memo":"Called through gno.studio"},"blockNum":"385282"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","send":"","pkg_path":"gno.land/r/jeronimoalbi/poll_v1","func":"Vote","args":["false","true","false","false"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvC68IPWD/o8iYM+et/K6YpBp4+m0hF3mLXIdFZnWH1Y"},"signature":"qWTEL2Uta28gEGvtDMeaKYfMip0n/bFbSaJ/km7K3CAXbQVfY+16Gcik07c6OEv6gckH/rkFWetd6udiUwXyIg=="}],"memo":"Called through gno.studio"},"blockNum":"385285"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","send":"","pkg_path":"gno.land/r/jeronimoalbi/poll_v1","func":"Vote","args":["false","true","false","false"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvC68IPWD/o8iYM+et/K6YpBp4+m0hF3mLXIdFZnWH1Y"},"signature":"e/w0TgQ4srAJy4qE8066qbB6FgVjEU2oL+5GTx2A22cD8P5eWytkHwI0hBaTZR9sn6RnUFrz8CDbct1Y3DrvHw=="}],"memo":"Called through gno.studio"},"blockNum":"385299"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","send":"","pkg_path":"gno.land/r/jeronimoalbi/poll_v1","func":"Vote","args":["true","false","false","false"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvC68IPWD/o8iYM+et/K6YpBp4+m0hF3mLXIdFZnWH1Y"},"signature":"//grXOW+aD/x3QXtTMiCSMbAtcq56jbtcSbt119e5vIIY8MXP/DSEBStHFt4VTKfO9Eyxb3GbBfxcnHig0WBFA=="}],"memo":"Called through gno.studio"},"blockNum":"385302"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1dnllrdzwfhxv3evyk09y48mgn5phfjvtyrlzm7","package":{"Name":"hellotestfmt","Path":"gno.land/r/hellotestfmt/hellotestfmt","Files":[{"Name":"package.gno","Body":"package hellotestfmt\n\nimport (\n\n  \"fmt\"\n\n)\n\nfunc Render(path string) string {\n  return fmt.Sprintf(\"Hello, %s\", \"World!\")\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsGEi/6/N0zRtRCWxHb7KZ1Z/BTfZIc77fvtkSRJlmwQ"},"signature":"OxVPe8VXtD4zONmGxoYi1J2aMLPym9sX3zG/y530EcZIGQ8eeQmcXHOLZ8pAku/C48ZVdKmWSSOmPDswA7t/+A=="}],"memo":"Deployed through play.gno.land"},"blockNum":"385656"}
