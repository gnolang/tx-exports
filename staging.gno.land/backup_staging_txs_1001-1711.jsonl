{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1760346414"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1760346750"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"29999942ugnot"}],"fee":{"gas_wanted":"48155","gas_fee":"49ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"qpKqHjJwla8rE9ro8AQy1ZjV8oeBQnM0Mk3Sz2vQ41h2pHHbRHP8OaFH0iuLAAF2xbgC3uk1egbXIDXuFoJlDQ=="}],"memo":""},"metadata":{"timestamp":"1760346881"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1760404896"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"LuLpQWDQuNiqSFnMCH7eEfodeRecoXU0tp9P0qLAIwNLCgGEUepCPDffYiskeLj+XxR8VOl4o/f57QF5YKyIAA=="}],"memo":""},"metadata":{"timestamp":"1760405434"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"84F03cQ3IXT1mtfvsL5EFHoK9lpoLDhSszzh+Lf4jy55TVW9xDoEUcr0iONCLLx3G2HV5yUPGRKrQNO2iAFoCg=="}],"memo":""},"metadata":{"timestamp":"1760405439"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405444_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405444_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kDyrhb5O9JpW5QvweLpggaUxsGRBfaR8vTarYg0qPn+vuvsx2snUaeRsxv79XXPdX/HiyuqaYs+aodkzx9OaCA=="}],"memo":""},"metadata":{"timestamp":"1760405444"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405444_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405444_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"EGu01HgeaBz8DjpfJ55RG74uBWN9WnpO6TBiIH5bVfJ0SZohQx3vFuT/hQQJAoGmDJ5GOyF71WTe8y+NX7kCDA=="}],"memo":""},"metadata":{"timestamp":"1760405444"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405444_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405444_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"5ozRUjnzpd9aiEmVC/yNrGqgOBhQeDqXXiPvf5PXD9WBKZwCgVQEC7rdkp2d9IRUdyGvycLsM1RFOK1mABlaAA=="}],"memo":""},"metadata":{"timestamp":"1760405444"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405444_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405444_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Yqsj7wCq8QfPZ6lOpxFXUg+26NqtXUpMZ8V3J9KhvMFSwiQ2XE6JeU+ziTcwv4zOMO8gUZ0KwZPlNJLt6Ih1Ag=="}],"memo":""},"metadata":{"timestamp":"1760405444"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405444_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405444_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"oYi7uAwdVhuLhv3oUU8lyg+zR1jiwS9VryOjWD6Kc0PuomyC4Px/3oue4DRM87nmGa41ZTZfRkHarxfyCHvlBg=="}],"memo":""},"metadata":{"timestamp":"1760405444"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405444_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405444_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"C/c77riSeryl67uZeZmYj7cl0Rw84OqkzhRkkgaaCx37cVVkNafUf2+HZK0NX8Av5Gn8CfPwC81ML0s0BjA6AA=="}],"memo":""},"metadata":{"timestamp":"1760405444"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405444_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405444_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"udYWcnF8+H8i+l/5IkvnP0TBgdp61PJE60+slJYUqJVfTQcLzO8yQHeB2uiefwoiaPc5j2ZhabMUEvGyDCHsBw=="}],"memo":""},"metadata":{"timestamp":"1760405444"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405444_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405444_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"45fMimGQhA4m9cL6iFkp/p1VEo7JgW8tUje+dgihRoXFP4j6XxC/rJFUQlbzr0H0sFd4DKwIbIwcH/1FxJ/OAQ=="}],"memo":""},"metadata":{"timestamp":"1760405444"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405444_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405444_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Z42RWxv43ThyXEgePsTSG19pQomvS7pIrVj/kKuunP4dpCYu6x9DJdwqfbwVA3EegbxFCCeaBRsprGFtzrkHBw=="}],"memo":""},"metadata":{"timestamp":"1760405444"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405444_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405444_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"wPn4CWUop1PlHn7hH5fqVoJ0dqbao3WFkfyK0k4TCPM8Zp59pGC+O5zf7jO4+6lVbDX8Jq7djc5KsvH9V6VkDw=="}],"memo":""},"metadata":{"timestamp":"1760405444"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3PIEn1CnQ5rWfFPmTQDQouznT8Bn+IOf+WNpe/CQUEx1WkbyTL9rKRQPLH2JgJfvBKZZecaGL1vqbOYI1y8NAg=="}],"memo":""},"metadata":{"timestamp":"1760405529"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l/melcXkMbve2kw48m8kcwnIKY/OYVowcRJP7iSt64ePjeuuU9mYMNo6raAlQl5DmMw9565JJK9TF/MF4PHlAg=="}],"memo":""},"metadata":{"timestamp":"1760405534"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405540_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405540_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"hfdWWBHJfGi+YeQ8CFeCWKFVV+HnCfLVjnVK1gActOzCVMdqDRDAeTF3R+pF+B7BOZW2qgTyxTZphlDYLRPcBw=="}],"memo":""},"metadata":{"timestamp":"1760405539"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405540_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405540_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"LbBAtDTKzXrlCa40QnZboUqdNJNhD6Eo4Hy7IxTqykrvwWdmeF66TZndgABZrvCnfiXuc0obdPRL6voP6XvOAw=="}],"memo":""},"metadata":{"timestamp":"1760405539"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405540_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405540_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Ghd+qp6yM7fx+XcMAgcBEpKtFJTRrkCkIQEiEHm65Z6HueBIxVSeXd7kQbwS7HHpl8EM0FuMhi4YiWHLA3gwDg=="}],"memo":""},"metadata":{"timestamp":"1760405539"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405540_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405540_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Wgfx7J72yuBfeDfi56Uqd8O46+LYhFWAiLHOLx4G6Ix/A08OxE9WWGpu1XiqzU1S+P6/Gze8cUTxi/5ll1t8AA=="}],"memo":""},"metadata":{"timestamp":"1760405539"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405540_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405540_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"qxtbetIPlQsDeqtjCnmzI2YY86KlK1BAga1F4Gdlk89OdRuehazWg61UNWCwi0nhFRZqEwTAUxI89NY7CPDLAQ=="}],"memo":""},"metadata":{"timestamp":"1760405539"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405540_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405540_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Lb+7Hl9SWVe72uubbzIMWCrj2FPBLLgyzpzi5GY8npbnk2nwVq1WRI25yjS0dTqIm+Z+gjjsk9niIWcq6oipAg=="}],"memo":""},"metadata":{"timestamp":"1760405539"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405540_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405540_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WbztnLverU01QD6Eo4LuR2fKz04XQteoygYJau3iGJPODfoTwdr/CXvnlKv/v6wnd4deMEgAafw/++P0qAWwAg=="}],"memo":""},"metadata":{"timestamp":"1760405539"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405540_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405540_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"zv0G+m/vNYZT0eBf8a5aZjPMP5VAp5N3+yjt3EKeQunJQ8DcONMcCVPLsGWW88DP8JLN7kyccv7zqYpGJxk8DA=="}],"memo":""},"metadata":{"timestamp":"1760405539"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405540_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760405540_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"lphF3AGT4s9BFyl0i2I54FOC//hHJM7wDswHXwOV4pC9cb8khW4+c8n8Y/5o6uBdwkWvpvnS4ZAflLyxcWj5DA=="}],"memo":""},"metadata":{"timestamp":"1760405539"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405540_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760405540_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kmcivcPsUoziiWOc1KXjVTTqaihZcqOpp15Yb93ziIuu1TD1m4BoNWudh4W+8eL57XyEnfMCYY6+o5w6Q0jrCQ=="}],"memo":""},"metadata":{"timestamp":"1760405539"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760405631","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760405631\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598838","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"JfWq6ROsccuk4gQjVkCzGIeWjydV32oGx74/rZy/bJNj9ALeQCQx/tLBNGjr304FQIpLVQU5QWqnNbIH4XOjAQ=="}],"memo":""},"metadata":{"timestamp":"1760405630"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760405631","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Yu24IBOHg1yq0ymldb+PMiXdyOZ5sxcjW4FwN9UPCsp9J9RVjl3ptxLBcWG/0Gq7Q5Yam2Zoi94o7jc/nx10Bw=="}],"memo":""},"metadata":{"timestamp":"1760405635"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760405631","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"SCRhLcpPcyZf1QmoF/Wl1VuCsNI9/hNMZMa88ivsLH+vfswK63yXc5bfMIsfmWAYUpUackfzTVZW4r4GUh+HDQ=="}],"memo":""},"metadata":{"timestamp":"1760405635"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760405631","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"G3ASrNO9uF0ZotNJC0CsDCwxFBhd17XroM0eiglp2KJ5K/fHuzwaNBKPq5vVwwAxqMj+5S85S41J6FgfbI4oDA=="}],"memo":""},"metadata":{"timestamp":"1760405635"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760405631","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"CVre5WeL7ao2BFKXfRjfz/+N6mTh2Tp0u2KGUFwU0Qt7sy/IXdpW7dmiP5Ro54p5LhASgSNK+7iIh1C2Qy1/BQ=="}],"memo":""},"metadata":{"timestamp":"1760405635"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760405631","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"E2Sh3YFTta5VA4+rVNyrTXArVlvH8WPiztFsM+SdH6kYaS0oOtFRwSP3JlXZsYkyT/9Kk9aN5DYqEyrKizn2BQ=="}],"memo":""},"metadata":{"timestamp":"1760405635"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760405631","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l1nC+QwiCe++5VjQ4Yx+z4A5xQbqWLxP2uWN8ZChwWSzknJc5tr6cBRRUgsQEYaTUWoJvgLixAJ3GtDxUI7UCg=="}],"memo":""},"metadata":{"timestamp":"1760405635"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760405631","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7RNLSv/SycmH/02bCmi0VOP7h6m271oFfrOj1lH5Q3b1/koNrXEHjNtZzh9HuU19papY60B9cQO+Ht8dcp4pAQ=="}],"memo":""},"metadata":{"timestamp":"1760405635"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760405631","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"bYWC5JfXkF7ds7fcTQ5aD4gpdnFNeDaP+1s8BneSyDra7F8G0wBDXHQ33ZQj9Js0g392qjHchtmRD0q5lQ3xCQ=="}],"memo":""},"metadata":{"timestamp":"1760405635"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760405631","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"vRQUuVcSfffBdVszX99l1jskHpwJ4gaQtiKrlM8Tz0ORWyFbF4hSgNtfkI36VfzIBBB3XXsTXkfWgRBIFGjVAw=="}],"memo":""},"metadata":{"timestamp":"1760405635"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760405631","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"PdHxx/b+7aHDNLQc85TXVADeJI+hBQGz1HGbI3abpG/gydUc1nNJdkKQpgjhzCDSYGAtOYLiyoshwsR700gBBg=="}],"memo":""},"metadata":{"timestamp":"1760405635"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1u72w5pflnegza4akd2dpqmrmtf76xkp9q5gkkv","amount":"1000000ugnot"}],"fee":{"gas_wanted":"52246","gas_fee":"53ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ZHxlsgL0S6Xlp/A46S605PSW2OsWTW6b6nsmXrdLZdN259Ziaf7E+R+lbWngsdkM5R8bwTFn52pvggqrjKyuDw=="}],"memo":""},"metadata":{"timestamp":"1760428302"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","max_deposit":"","pkg_path":"gno.land/r/gnoland/wugnot","func":"Approve","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","100000"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"vDuphfeYp/WaOzwYdp3/7vSe/90tPZKJv/xi8o8i3Bt3il3w6hqoNJNhkbLELh5+teLIFHIYu50HFVweIIueAw=="}],"memo":""},"metadata":{"timestamp":"1760428814"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","max_deposit":"","pkg_path":"gno.land/r/gnoland/wugnot","func":"Approve","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","10000"]}],"fee":{"gas_wanted":"3955722","gas_fee":"3956ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"VaC3ZRUFh6xp+Rm77eiveT64A7ARkSN7vyCx3mO8Czjylj4VlTXEjdcBwO/tIrt5x8vsMc33fc9C9dZAWOSXCw=="}],"memo":"12313"},"metadata":{"timestamp":"1760432269"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","max_deposit":"","pkg_path":"gno.land/r/gnoland/wugnot","func":"Approve","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","10000"]}],"fee":{"gas_wanted":"3958632","gas_fee":"3959ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"0NWijOlViF3Zfl+1tyyTvzGPxMi3M9EK5+xe50bxYa7geAIPRHKNdDvx3oXLQJWAfIE4dieve0eR0xbWhSu0CA=="}],"memo":"12313"},"metadata":{"timestamp":"1760432355"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g1x4y78wwgyr944semqmzfqlv4ct49ajqpm6pv9r","amount":"10000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7bOjxKSYEG+TTk82vKzXH8zcUCKWS/h02shX3IgLkRZ9AgM3kpxce2WSKVsxayy9WxiaIxTlSyOo6c0lq8iIDw=="}],"memo":""},"metadata":{"timestamp":"1760448528"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"290880ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WNIXXzW8vkvxSMYXCK+sIvDFYrQcJ4nMi8ZLqs9qbJh7Zxi+LwzRWMgUGI+Yu2x9Tsvl5FBUXHbshkLCwplECA=="}],"memo":""},"metadata":{"timestamp":"1760491868"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"290880ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"uuvVfqKKxYRaw5Q9G/UA9GCtLmvhEHUH7u+cRN0xpMp4OfOSsgBvmUfDKwzp2OlSYceqwLJmmEp9vbmh8mn1Dw=="}],"memo":""},"metadata":{"timestamp":"1760491873"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491878_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491878_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"K2H416jsY45Ue7E/FML2DJr0fTRim9wTneXP33FjCcsCuEDquSKEQgTJlOJOtdKY8Hjdj21FRlryC3CfFnvCBQ=="}],"memo":""},"metadata":{"timestamp":"1760491878"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491878_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491878_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"9MNEHYVmdi1c7YC0AjU6c8MW5Ln8rtsAtGleA/50mBZOkHF9v+bBrEfLs+pQzfM0JSiRcMmrJFrHw9DRR+jJAw=="}],"memo":""},"metadata":{"timestamp":"1760491878"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491878_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491878_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"mxqyWtHdI3GPwgU1R7rVh248J98S1C9ASKdfb4iaiikJXFCCYezhmP3mkBOnDse5YTPFxsjuPD9dyXEPbeGbAA=="}],"memo":""},"metadata":{"timestamp":"1760491878"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491878_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491878_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"qOUsMj4XGIleP6hVqbKVYcl12R+gNtVBM5oYsh6n9nh59u3T8ygXjXem6CZx6SKGSrS1jiKkz3fjWCsA8/qWDQ=="}],"memo":""},"metadata":{"timestamp":"1760491878"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491878_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491878_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GGfXrJuv2hMPl+kGiz4M6KWcyQaZpvW2TzhFCwuPtCgnDM7BsrPfPu0ab50wQgHqTqTIE3XpxtqmOSuhggMFDA=="}],"memo":""},"metadata":{"timestamp":"1760491878"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491878_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491878_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"a8E05+AD5PYiukMxpJ2hGeSd01WD2TR1um4h1LnwZobfshCc82O6fCz9bN6y0vIVqi/MQuMbujTx0cQhaXtdAA=="}],"memo":""},"metadata":{"timestamp":"1760491878"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491878_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491878_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"hhfdBCaaIS101VbYbEVBj4xkERFhT9h1bkZQigj55d/st9KXsRtiplpiuFAG7AU9KpeXUv6Zxs9nkcuSg5j5Cw=="}],"memo":""},"metadata":{"timestamp":"1760491878"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491878_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491878_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"KR54N4bIIiG53r4U4edWiHYz4UtogWes1DvQY9GZNh2YjOeG0v4Zudf25OZ/m9shcjKLSh1NX8/RGKNQ+mNFBg=="}],"memo":""},"metadata":{"timestamp":"1760491878"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491878_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491878_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"jDxm2JTk+ZLgnDRSiqSVIr8WB3gapRFZEJaZNVT3Bh7fbmlvpobEXf/aYaXMtssNhYSLpRsXh+SgwPwNZMlwBg=="}],"memo":""},"metadata":{"timestamp":"1760491878"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491878_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491878_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"i8diZeA6oFiKM6hSdKKMVKZHgwdVEnZRiZDFbeWTeW0mXRaMU/FH3pKAMeFdCc+eB44BFpOWgiPMJEHADm9jCg=="}],"memo":""},"metadata":{"timestamp":"1760491878"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nh1hC8BDVB4nuyMnHZrOIdnkN9cj4wIWD879E/PMfUt2ldwvoQKNmSCXezTVJ0Dh28Vrg5HC7A74GhtMKFs9Aw=="}],"memo":""},"metadata":{"timestamp":"1760491968"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"obSxxgIRKpLzLO+6Rey6ugd4fqQIdw8bRE7RheB0Iu7EIimndBZF6WZ5lIRYluEjzll81EVxlcKeagZpp/2MAQ=="}],"memo":""},"metadata":{"timestamp":"1760491973"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491979_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491979_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"zaTL5iz+A9qKqnukbRYqwwLRBpiG0dUeXK6HEx9G522jWm3TphSskhXYHnEpURVauaoSQkanlm2/4+W7fmSPBQ=="}],"memo":""},"metadata":{"timestamp":"1760491978"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491979_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491979_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"EMBIIEP6IWwfBvH4KtjtBB9XguhsOwS6nR1ITuwfhRrxz3iYuQ6DFNx6wBPutmZM3F3dI4qMvA95LUHHIZm1Dg=="}],"memo":""},"metadata":{"timestamp":"1760491978"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491979_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491979_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"zmiFxlTH1Mso64/Ys6zqm5EW21mn9/TEw+EKvwN+CHWYKAwPjS05YkIqVQyyEzFSFCXE1E89YwC5ADfkrMQiAg=="}],"memo":""},"metadata":{"timestamp":"1760491978"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491979_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491979_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Hd90sLmX7Sr2dhb3+HQ+b5Xm34dUP6tF7KBnRq1NJhTXBbW8+i3gdGapagpXdpjza8dAOrbuWM30O9M5fDYaDQ=="}],"memo":""},"metadata":{"timestamp":"1760491978"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491979_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491979_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"rJvhMmpdWh+FFKKv26SKgn1FFJgghK/m0ZeZ4uEuWmgouelDUBx/3vHTIYP1d5T6PgeNNnTP2YKf2V6E5OGFAg=="}],"memo":""},"metadata":{"timestamp":"1760491978"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491979_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491979_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"d0Bs+MJTkFZKUy2A3d6Kpz8ob9p5anfEzjc7tzoYedrgH3HxlBRpci9ZfJU/y6fI6UzR8G7GlAxTGJqbso3zBA=="}],"memo":""},"metadata":{"timestamp":"1760491978"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491979_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491979_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"TOKRVGvN0AXLLAARKKE6zZ4PvlWfVqeUItmJLiE/ofaJNRc/ODqDTMm+YfHabgUkIXRvvO1XvwddS50Ld36VBQ=="}],"memo":""},"metadata":{"timestamp":"1760491978"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491979_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491979_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"mS6VVGgin/JyJbCKzsWj53lEsrV6eTiZg5Qw4MX/QxRdApsSNGr67YjYsoE6xBg1xSiTPNZwaATvxMvAhofsBQ=="}],"memo":""},"metadata":{"timestamp":"1760491978"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491979_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760491979_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3h+4CIFy5O8FfZzHEeN9AuHTCrJhM9rBQ8JEz0PYOU4R7+XfPjrQCpyKhZ5MQZ1OSxkGGr8ZiejvU+qi/bd4Dg=="}],"memo":""},"metadata":{"timestamp":"1760491978"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491979_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760491979_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"6mYHTKEKrX99ehYKMHmAmMv9/7POekGE/aq1Dl6Z8VDuCOxBfrBf3FEqGgLNqejcoG1DeyTyabqhThBPhBQIBg=="}],"memo":""},"metadata":{"timestamp":"1760491978"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760492067","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760492067\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598830","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nOmVqmYY0gFoEOr4ZGIor3AYdk1sUmDfnUpDPBfUd7p1df7XWLPp7qRns8SQcwbsf5hp1p5sjM2nTH4PSZaPCg=="}],"memo":""},"metadata":{"timestamp":"1760492064"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760492067","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"o56zGW2UTUMTh1ySXbKllDrYHYEO0O6ONeUljxA84bYQp7FI/5WgvOAHLnYFBhZn2Zhr8aYWOS0ad9e4rgkICQ=="}],"memo":""},"metadata":{"timestamp":"1760492069"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760492067","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"4YIwMDqCM6s7WC3qwfy82qY71+aCuakRLrpyPqhXT0maaJxo7dWn3j2dyhS8RgZEzRbsmRGsOie3OYPHWdhVCw=="}],"memo":""},"metadata":{"timestamp":"1760492069"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760492067","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ylWKCoUhWFuDlXMjmZcowXNabmArnABJNy25eahF0+cASqu0UCI2KfaC17m94XOXqr6Hoee4t37thJOXlgFTAw=="}],"memo":""},"metadata":{"timestamp":"1760492069"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760492067","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"1V35Ze/O0vFJQs+mTf1WZV8s062TVMxiWUSE8pk4EnlaOZkMGVC3zzMn/KsRaoAh3gdy3LZg0G0/S87QqScCAw=="}],"memo":""},"metadata":{"timestamp":"1760492069"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760492067","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"m5ErLPd5nRNOPwmOkyfxeqaYZ2f8xFA3TCFR3bC94bGfiX7cuUimtqcdbDlA5GSnnMgjFtDO48sdgcx7ofWRBg=="}],"memo":""},"metadata":{"timestamp":"1760492069"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760492067","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"9hkfTd8hUW1sLqDFQcLuktso199yzw95krCoXz1CP7tym5PaycPzN5P0zfU5Ckq8dH73DwtgjYrMRM5m8fzzCQ=="}],"memo":""},"metadata":{"timestamp":"1760492069"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760492067","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"4K0d1jasLBRnnsKbO/p/1QkkMQ2zwC0juQ8aNF5nNFBohgY2Cgi8N8MhTpOur3zc/lgPGYgjlPxUhd+ufUblCA=="}],"memo":""},"metadata":{"timestamp":"1760492069"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760492067","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"0td55jLRhfq9av+cBwZ2Bo/8GFz2OuE2cnqXuUUkJJSKbw9D7LonYoMA8P/1nVULPe31OSndKeudq4fR0E6EAA=="}],"memo":""},"metadata":{"timestamp":"1760492069"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760492067","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ktb9IoIIybc6JvO9WshC27loyO7ttP+6Jvhn4I57kRGX3tedvUFRBe+x6mv73zOz2LN1W8NpCs7K6PJnCymkDQ=="}],"memo":""},"metadata":{"timestamp":"1760492069"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760492067","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"etJAziBMGmzf1A0B1uWoZISQliLMvPe9TEVOixXy7B3co0l9Rq6J7nUSzAQekSZXwWVu+L2qo32f9EBCFMruDA=="}],"memo":""},"metadata":{"timestamp":"1760492069"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1760515664"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1760515891"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g108qs6x9zskcz60df6khr4y8488wvdnx8lc3h4u","amount":"10000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"T/ma0rlvZywpx25D9I+cGeRIDjFPPq6OsCkbZaxIGOM/3IBm0/+YPbOUF2PaoJvzsbsnFVF0IWuZr7sRtDxbAw=="}],"memo":""},"metadata":{"timestamp":"1760516795"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g108qs6x9zskcz60df6khr4y8488wvdnx8lc3h4u","package":{"name":"hello","path":"gno.land/r/testttt10/hello","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/testttt10/hello\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g108qs6x9zskcz60df6khr4y8488wvdnx8lc3h4u\"\n"},{"name":"gnostudio.gno","body":"// This file is automatically generated and contains metadata about this\n// package deployment. It serves as a marker that this package was deployed\n// using Gno Studio (or Gno Playground) and may be used by tools for analytics, verification,\n// and ecosystem features.\n//\n// This file does not affect package execution and should not be modified.\npackage hello"},{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello!!!!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"490265","gas_fee":"491ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"L/N6Q/mm76DfmxwvYKVaN5pHiE9YLSuKD0/E8z6/28VU3HrmnRDFzhg3LpnXbRrsk1JT22bplonOzzc3NdbaBw=="}],"memo":"Deployed through play.gno.land"},"metadata":{"timestamp":"1760516856"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","package":{"name":"hello","path":"gno.land/r/g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5/hello","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5/hello\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5\"\n"},{"name":"gnostudio.gno","body":"// This file is automatically generated and contains metadata about this\n// package deployment. It serves as a marker that this package was deployed\n// using Gno Studio (or Gno Playground) and may be used by tools for analytics, verification,\n// and ecosystem features.\n//\n// This file does not affect package execution and should not be modified.\npackage hello"},{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"584168","gas_fee":"585ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"h/4NIXNE96cmzoSGWVJ6SyWDN8zbghwaIXK9QBa8t4Vc8FUN4UL3YdOYm81bu71Xp5PFh1yY1Ek1aHyqTboCDQ=="}],"memo":"Deployed through play.gno.land"},"metadata":{"timestamp":"1760516916"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","package":{"name":"hello","path":"gno.land/r/meeshell222/hello","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/meeshell222/hello\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5\"\n"},{"name":"gnostudio.gno","body":"// This file is automatically generated and contains metadata about this\n// package deployment. It serves as a marker that this package was deployed\n// using Gno Studio (or Gno Playground) and may be used by tools for analytics, verification,\n// and ecosystem features.\n//\n// This file does not affect package execution and should not be modified.\npackage hello"},{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"499233","gas_fee":"500ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"XkeiVmxszVBUIycaYP18ELbbR8iSsa1IRSGIYP4jvVW/Z4UzbkL/rQ62ghvHnU711HrmlvnROvc0WovAVqAADQ=="}],"memo":"Deployed through play.gno.land"},"metadata":{"timestamp":"1760517122"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g108qs6x9zskcz60df6khr4y8488wvdnx8lc3h4u","package":{"name":"hello","path":"gno.land/r/test1010/hello","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/test1010/hello\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g108qs6x9zskcz60df6khr4y8488wvdnx8lc3h4u\"\n"},{"name":"gnostudio.gno","body":"// This file is automatically generated and contains metadata about this\n// package deployment. It serves as a marker that this package was deployed\n// using Gno Studio (or Gno Playground) and may be used by tools for analytics, verification,\n// and ecosystem features.\n//\n// This file does not affect package execution and should not be modified.\npackage hello"},{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"490152","gas_fee":"491ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kGpoAsocb8W9dm4w+Xd1x/JVOCDg2NHka51ECVaJpGU7jADHS1tOZfBrUxxZamiiy9ieBhIGH6wo6OZjnJlqBQ=="}],"memo":"Deployed through play.gno.land"},"metadata":{"timestamp":"1760517544"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g17tmq3z57754fmz8h9uatst2v0w4033pay8jset","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"aP6OHr9H4JXVdx+k3TfX8UFtwy0sHyysMkYdDQZpsvm8TQLh4Her3zgYdN793CO7PH7rDrYDtdHaE2lvYHiMCw=="}],"memo":""},"metadata":{"timestamp":"1760529721"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1vcwp9c4yqjxuxqtfaq3ehx8czrqam2k9c83w9d","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7ydRr0xgPuxVWLqNsmoY6DJvF+pl4qqxx6tiWIVwQiglcZRjiLK8qSBMrvVu+pOYiAvNO9DobTSMSHsnK9NzCA=="}],"memo":""},"metadata":{"timestamp":"1760549789"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g15nw3tn7623tr48j0awzhg2757lf5yf4mxf9htg","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"D2V2RG3wRCqzKSmNL/7QAo1yHDxO5E1GfNPXi23/1cDmQpUPdnuTMNiWqYlZvnQ7mZbyiUCxHFMgjFhRs37eAA=="}],"memo":""},"metadata":{"timestamp":"1760553046"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g182ytx8sp0le92sarsh3ta9eh8m4as82mvukfrl","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"F6RGXbBEmB5jb8fKg6oeqt3HOwmkoZgQs3idNclKg+JhTCwWOSoB/4UUcofFkA4fg6CyhiKd7wc65y6Uk4UgAQ=="}],"memo":""},"metadata":{"timestamp":"1760556559"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1sdwy44t4x5reumf9fkudqjktm4kchfcr0dcrhz","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"QMeM5T1ESUYc4hcuiJ9V6pNzKzjriu9KF/N22YYgUu0T6q2EnSJqf/qlJTLYcyTpF/Q1c5ivZ8b8W0/6jGGqBg=="}],"memo":""},"metadata":{"timestamp":"1760556680"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1u456gqvs5uly2hm5f7z8fnncdvwn49xxj8xfth","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"EWiVqOo7Fxo0ldvJ1N3Rl0pLwNQCc3vsdDZtsirgRMGh46546TUE8PXtETE9Sd1JfIttxPB3ag3dvlwzc0dWDQ=="}],"memo":""},"metadata":{"timestamp":"1760556876"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1sazc3lwtc4qmu8t53k4w8d2srlzhll47c4zykm","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"2w5v29PwUlJMCu36oAXWCG37EXp2P1ojvFRIYaAxnLii58LsE1L/CmZJc2f2yhpvYyclLhQBz7Y+lmnVvNAfBA=="}],"memo":""},"metadata":{"timestamp":"1760557110"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g16nfscmu478ctds9qhm9vs4grxy2r6ln0s6r0qn","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"pmAZWObnuLkAB3yRkGmgMi+pvxPcajXs955CQeZAeDJNX3NiSjM1JdHxUbHXyuOkw/SgGskaUqZdSFeQrLRODg=="}],"memo":""},"metadata":{"timestamp":"1760557291"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g10rukqft6ge5qtzlsc3t07dqkqqju5n6pdynuqg","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"NbQNRxNcQ7eUylt/3JVQDD4wm70D8oBSWCQe7YicXNUZLtLDjafT0I8tjikf6C+cuTqJm0TJAUDi5A6NZRSJAw=="}],"memo":""},"metadata":{"timestamp":"1760557472"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"290960ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"XsW7PHATaiDeSMyEP/jw7KqqzkIki3PPxWBoZWtWARK2Z+8gU0My32koDazYUBk9N6wWUAFYYBl4PtmGbbqIDw=="}],"memo":""},"metadata":{"timestamp":"1760574836"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"290960ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7QGgOIWIZ1j8K9nKi74Jx5L7RDfLCR7e6nu5Z1mqlFeTAj7CcY0/iFLIh/cun6pefV7KKLgvHKq+FcVXn9AiDg=="}],"memo":""},"metadata":{"timestamp":"1760574841"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574846_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574846_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"9zUvi4o3PIIs1ZieI4z0WOs9vGarRUC8OpKujoZ/a2q9bVR5L842msNKGNBpOhLjiISOJcluCYbOX1XzC3F/Ag=="}],"memo":""},"metadata":{"timestamp":"1760574846"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574846_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574846_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/Vr+bWKTLDWfOq2VuEuHmrPHwTC0HyPLllSn5LViNZKLVbpipknvegJ/vAOoo7EmBhIqNDcgoxAfFFbA3MUSCA=="}],"memo":""},"metadata":{"timestamp":"1760574846"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574846_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574846_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"YWc+qtuqCED0NWkx2jUqGelaNZ1N+9hqsGLD/g6zMfhRRmC57V4DK7MCmdwrZGTMixrRWJX/vjU3Ada+QrmUBg=="}],"memo":""},"metadata":{"timestamp":"1760574846"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574846_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574846_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"quWnu0QpegMeaThvzIrW8Isu8+Nioud3ej5rJAWVJQLpDRoLE5hjwSTm5hNXVHst3c+kCm3S7ilUoeK8/LUACw=="}],"memo":""},"metadata":{"timestamp":"1760574846"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574846_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574846_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GSgTO7pNGYmo3OHrKR3MfbgEMqEgh9iNC14xyPJceLkvZ15Vx6aPeE8az/PWAuzqlZfJYx+mScxtj5oah4IqBQ=="}],"memo":""},"metadata":{"timestamp":"1760574846"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574846_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574846_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kbFbpZksz9JJsb+7gPGuTerWQSIWwhWdfmMFYYWLC5iLZK1axe5gyUf0ERtUpC5dxr1TTWxIS9u3zwXp8cp7DA=="}],"memo":""},"metadata":{"timestamp":"1760574846"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574846_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574846_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"paQNPCtQhFafDfyBVLALQ7q/wmGcxjBCtcISXF6LIRIwf18iVaevXa/kI4EdRjWteGMrajZpoJ1qgMYDr8xBCw=="}],"memo":""},"metadata":{"timestamp":"1760574846"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574846_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574846_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"SRJ7KhJGAFv2I4kVraq63ee0jj37m/kMweao9IZbJbahsweOMgE8gjRYpp3Ilbx+DQc65wZFh8LdtxMmM6iEBg=="}],"memo":""},"metadata":{"timestamp":"1760574846"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574846_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574846_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"T6MppmzrxWTSE8aYhWLz8MfIZJsu/zQW3eA+Nem3p5BCTOVjkm1G9z2d7HTJI7f/hmqn/JowOQeDeMB3ltHSDQ=="}],"memo":""},"metadata":{"timestamp":"1760574846"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574846_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574846_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"PzFroDuAraq0x2R61zZDPxdjD/tRgPWt/ODeOxmi1kGw0KsmloVkaVWCrvflYbP65p1CpoVLP91m5v3uqAyiDw=="}],"memo":""},"metadata":{"timestamp":"1760574846"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nh1hC8BDVB4nuyMnHZrOIdnkN9cj4wIWD879E/PMfUt2ldwvoQKNmSCXezTVJ0Dh28Vrg5HC7A74GhtMKFs9Aw=="}],"memo":""},"metadata":{"timestamp":"1760574926"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"obSxxgIRKpLzLO+6Rey6ugd4fqQIdw8bRE7RheB0Iu7EIimndBZF6WZ5lIRYluEjzll81EVxlcKeagZpp/2MAQ=="}],"memo":""},"metadata":{"timestamp":"1760574931"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574937_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574937_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"U/TCfrjcPkGlPsTFv1WBWViFLELCR3OMmat8mbMWzo6L7J0VEWvGHN3i+nfeaiioRtDicuPfaXle7AzjdO1/BQ=="}],"memo":""},"metadata":{"timestamp":"1760574936"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574937_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574937_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"wzitWvw/aty5nRq7qEI0twRZy83I2UatvNlmeVzR6QDMgMzCKCs3nlhGUFq5iHjKbbTZab2nIwRHIk8O4GIrBQ=="}],"memo":""},"metadata":{"timestamp":"1760574936"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574937_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574937_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"acnwrrja8wSzT2vVAvv/HXk/YhOIlF4W9xdM/T39ljiVxgeExuJo0lvkdecaE/QdL16wUW1cYrSjxJhGdzORBw=="}],"memo":""},"metadata":{"timestamp":"1760574936"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574937_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574937_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/wveQwBQnJg/jM/nXsbxXTn5GXLh0AzdyIpuQqgB+Vu/8yyf8FdZAfYHrp9JwcwRSIddalQ+mhUAGP3D+pnzDw=="}],"memo":""},"metadata":{"timestamp":"1760574936"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574937_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574937_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7OmwUfu5bEhQyuYNoW2mMRBPu0aWCqtu/VuamCrfzapGQD+RgN2eYr0qlEtSRGCim8lkIPySpvXmezgvTsgMAA=="}],"memo":""},"metadata":{"timestamp":"1760574936"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574937_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574937_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"IrHL1Xlc5/zf/JTcDofGSDMWcCS9ZIxXr/jcZOaRDuPzY220dmbFgxvUAkY/jzvbB5yBtlUBeQI5PA/Q22ySCg=="}],"memo":""},"metadata":{"timestamp":"1760574936"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574937_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574937_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ncnX64W5P06oGfCGomyfCKseqfYwkMzdxRerfLvJcdLYqeCm8KZdtZbGKO+2R/LBoRI9qxazzZV3xCHVuiKPCw=="}],"memo":""},"metadata":{"timestamp":"1760574936"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574937_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574937_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"bBXSyNQVFpDxkHSfY+hbvaLjIPX7NWlOZEjaMExgQ3kINpqggqwkuRLnmXbVJUxAxnF05xWGAdLMB1HxhjZNCg=="}],"memo":""},"metadata":{"timestamp":"1760574936"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574937_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760574937_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"TnMi9kCefZsr1ccnYSnubleDlyoHzQeqGhq0cNJ4oGbWSPLUqKZiQlN50FxeJhCiVg3Wv7/AH6I+GLtRX9h2BA=="}],"memo":""},"metadata":{"timestamp":"1760574936"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574937_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760574937_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"CWSkkf65H8oT/WqvKlwYy2hwYW4/wnhcZ04lDqW6aiK6bTIM7hFrRwfInWotFZsb7yokJ3IOA+OGz4MM/eFIDQ=="}],"memo":""},"metadata":{"timestamp":"1760574936"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760575032","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760575032\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598830","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"r00xsqWIEjyoH0p7Ym1f5/dHHVLZ/jSuXc5jpG6mq0070XDqyassfs3e7A4MasarC30yBKqTSn758O/mHxPSAA=="}],"memo":""},"metadata":{"timestamp":"1760575032"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760575032","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kUkn8PGk0HFx63sHBAq7GdM2X7z719EUGgicD+jTP4I0fHbdkjEbOXs0pa3iPEt/CkjpKDpMP7wqoTiU+kCICA=="}],"memo":""},"metadata":{"timestamp":"1760575037"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760575032","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"p51Y5iuXTlXk9rPA4PgM2pAVVvpiUpfLpj5i2CTTdg0XQjQVynrwmw+bP8Y9TgESCWAymVUYwCnytTfoEWrxDQ=="}],"memo":""},"metadata":{"timestamp":"1760575037"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760575032","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Es0/9XRtUmgqP2DsNzTz07qtokKokcJO3O/eujSnj+bsz096FeGoXxwJDCsEofvRQfbJztp/8/FFzzjJ2DGXAA=="}],"memo":""},"metadata":{"timestamp":"1760575037"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760575032","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"xL0Jk+5JjXEyMXsFZ1dXYyNf8FCdXkRoOuOVIzBPxwQWFz2QLK5fVajaTkJTHN0XAFJTCOwnKEg/252fGcZGAw=="}],"memo":""},"metadata":{"timestamp":"1760575037"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760575032","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"tZCz2KGsUMWPK9vGAwifDRLQryfmKSvcM+2DkKKnJZxXvg3/BY/p7XjTA1u5KJ9jODDXZoIJ1cjguHKCM2qaAQ=="}],"memo":""},"metadata":{"timestamp":"1760575037"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760575032","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GC5Vt0yVFwqeT0vzFla870JvWtV4u9nxa4WfRx4ltVo4B12QUZPXUbkHX9SBPBq1GWVKKMZe2/FXkMjrXBP/Aw=="}],"memo":""},"metadata":{"timestamp":"1760575037"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760575032","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ZU8M+iz2yKCA6wUQVoBaHtimUKdzF1N0WFxkTyQ5oX9/rCHzetVNdNPB7EGFc+dKZZxUslqVD632QIwOlIUkAQ=="}],"memo":""},"metadata":{"timestamp":"1760575037"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760575032","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"TYglrbEMxy4XW4Z4hKdaaHhPCyoSa8GhzjKlvAUnIrFBM70CE25LDd+Dp+8FzrKdorIVbZ39tZpOYnnT48lqAQ=="}],"memo":""},"metadata":{"timestamp":"1760575037"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760575032","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WM40La+m7LgKN9F9NOtRZet1dNqS8FSD4SqiPPR30m7IwOpz91aHRglaX2Xv8UHY7WryEQRDq+o7xrREr4nhDQ=="}],"memo":""},"metadata":{"timestamp":"1760575037"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760575032","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"cgG6G38o8PZ5FJ9ldot9D/MpmrPZdI+Q3qBZ45Ds5P+T8uoJpAoYAYgM//P5llRXYBLYWjAePddwAiRMbSV4BA=="}],"memo":""},"metadata":{"timestamp":"1760575037"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1760575233"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1760575625"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"LuLpQWDQuNiqSFnMCH7eEfodeRecoXU0tp9P0qLAIwNLCgGEUepCPDffYiskeLj+XxR8VOl4o/f57QF5YKyIAA=="}],"memo":""},"metadata":{"timestamp":"1760578264"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"84F03cQ3IXT1mtfvsL5EFHoK9lpoLDhSszzh+Lf4jy55TVW9xDoEUcr0iONCLLx3G2HV5yUPGRKrQNO2iAFoCg=="}],"memo":""},"metadata":{"timestamp":"1760578269"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578274_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578274_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"mVhD/vBmSrDZ+SfPDoYE6qkG2tpWHkF+xr2MjaP0LEN+C0sCTPoLWMx3PBqH4PzIeb+TfzNFoXjTXMyP8rsXCw=="}],"memo":""},"metadata":{"timestamp":"1760578274"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578274_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578274_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"MnDB7DhEgT/IbXoJdJ++ZalAGydwfJO7/w8WtuAT+RZR02RT6e+y9vV/h2crRJhw0qkf6kcw5ILQoS7B0wN3Cg=="}],"memo":""},"metadata":{"timestamp":"1760578274"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578274_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578274_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"jRvn/5jtTN1jzz5LFejmTwwS3EwShRE1jeWFjcNdvj8jL1wAsj54fEc0CLi1V+j4FnAAJSWJ02GrP85tzFPgDA=="}],"memo":""},"metadata":{"timestamp":"1760578274"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578274_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578274_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"tb6udoGvIDnZQO4IiT0MXtUgcgsBHuS0e67kN/qvh3YrVPVn05HShGjXn8mWp10KNOHV3abZeyi00ei0ltTmBw=="}],"memo":""},"metadata":{"timestamp":"1760578274"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578274_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578274_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"EBfXxa0J9dVSfnf/Ov2ScL+MyDDq5dRzylrkosjpw+DtczApfxEgOkz/hZG7yDeKINpuj844tyCGw5FroN3FAg=="}],"memo":""},"metadata":{"timestamp":"1760578274"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578274_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578274_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"zHWa/BlBuescyc7KkmCwVtjj4/0hP4AF3c9lUSJAokQ12nOt+hY287cSdE+iGr53p/2xRzXcU0Wc/RkeYWUVAQ=="}],"memo":""},"metadata":{"timestamp":"1760578274"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578274_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578274_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WKdhrvSCWJvoLX0z7NkkLceb7MirviOGFUNEvAfpDv1RTTxfioiiTd5wvSbXj7m4yD3E31iTmuNw2Sh+y7IFCg=="}],"memo":""},"metadata":{"timestamp":"1760578274"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578274_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578274_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"5IuOqPRnQ/c4G6K8OXTaWmK8mGgEShOS5guRYkgPfKlbb2wRQQz66rAWuGvjqcZyC2doTrreIlT81RDeFqo4Bw=="}],"memo":""},"metadata":{"timestamp":"1760578274"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578274_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578274_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"2hwPrTi1NUhtwBKLxIbByf+RyUHZ2euWWgK4CbJ58q1zUcsl08GcHaIVmbT9j4kszK3/Yjq5JnZBtQvze6QUBg=="}],"memo":""},"metadata":{"timestamp":"1760578274"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578274_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578274_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"axVWGExMC4SeneFAfTob695wWZW11/480S//XGqqAyfiuomnPKinxUMh12THq74YC6WFsl9RvUeAdYYYm2ldBQ=="}],"memo":""},"metadata":{"timestamp":"1760578274"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3PIEn1CnQ5rWfFPmTQDQouznT8Bn+IOf+WNpe/CQUEx1WkbyTL9rKRQPLH2JgJfvBKZZecaGL1vqbOYI1y8NAg=="}],"memo":""},"metadata":{"timestamp":"1760578364"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l/melcXkMbve2kw48m8kcwnIKY/OYVowcRJP7iSt64ePjeuuU9mYMNo6raAlQl5DmMw9565JJK9TF/MF4PHlAg=="}],"memo":""},"metadata":{"timestamp":"1760578369"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578375_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578375_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"qIhSMh3hQcf8FHl7CaTS4lrmlmc0g8lnUwSDK1tIM28+pUj2z8DfEoeGWRLX+XE8qAHSAiRMkjQOf1vpqh5ZAA=="}],"memo":""},"metadata":{"timestamp":"1760578374"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578375_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578375_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Nmay7JI5cUd+ERuruS61aiiPQx8EKIeecGPG7St0n525LMJWx8lh+SrFS3gf54z1fBKgMSINeFDIHdEKslqsDg=="}],"memo":""},"metadata":{"timestamp":"1760578374"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578375_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578375_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"o3n7BJZZYaVf2HhbVYWn6AXIUyYK5shvbkedawPl0KqqRAQ23UPSyTxqVjjIOM4Y6ODa6Qni5gk9lLGhaR8TDQ=="}],"memo":""},"metadata":{"timestamp":"1760578374"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578375_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578375_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"HBXP0N9Fcun4Z2DzMnSzM5AdqqraBuLxJAYLXaUzZEfC+gY1jFx6ly6Q55d2HYc4fIsZ6NT5XETXLD5YTgrRCw=="}],"memo":""},"metadata":{"timestamp":"1760578374"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578375_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578375_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"s0Iss6cRHxTIBXS4WgUFCmkfiwmFpjUn02GsIyMYKkixuwbyXjMTulpLDqpIOqtcK+Iz+8t8aJtmJEFIub8QDA=="}],"memo":""},"metadata":{"timestamp":"1760578374"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578375_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578375_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"M2cNWut4riWZk+PGKXtc4LX5KFMYB4QJppRTKiCp3H9K12sWRt/ptYtv8FukqzAEQYROfl0Ut3r6kCYRFH2PAA=="}],"memo":""},"metadata":{"timestamp":"1760578374"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578375_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578375_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"w/jMbEKiTlGkEhwVzQAgbKTRUI0SAM2PIk8iuEjrlF3nVfP41hmOQLn4tW398aCcEjY5A8o0tibWOfPsOsc8Ag=="}],"memo":""},"metadata":{"timestamp":"1760578374"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578375_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578375_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"HOxFjm6xWayTXPRP8pvT+woV4+ZLTs0VLi0r6T58p7dqlYHA59bsrfme1wqw3HnN5C24PB0ftbxadwi2lkr4AA=="}],"memo":""},"metadata":{"timestamp":"1760578374"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578375_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760578375_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"F2EkDkFFlK5pq0YBIM1t5dQrclVTqzNODhR43GDjBGNVsgfvmJRRU8rpJVz3LdnWmqWYJy2Xs379JR/nrtKdAw=="}],"memo":""},"metadata":{"timestamp":"1760578374"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578375_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760578375_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nRBhXG3srx8XoMLw0p/ZBeaVKzQYZq36rRWPN/cH0ugcOPXX3rk4e9g/92KDMTsdXr8p2nOmzc5+zDmIhhBBAg=="}],"memo":""},"metadata":{"timestamp":"1760578374"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760578465","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760578465\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598830","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"xV8kB9NZDkHgznRgVhDoi8XsZkjbfHXqEHtLPJVPLWFcvk+5YjNRE0a8JzqPYcn2/DFvlBdNBDUpKqAPOYImAQ=="}],"memo":""},"metadata":{"timestamp":"1760578465"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760578465","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"V4xfrB9JbMRGeiVuEa73rjk9Nongals84JQ8fOY3HprHvOn9l+4oDwaxL7X8JbejKUMdZxAVQjTZ2EyiMGwOAw=="}],"memo":""},"metadata":{"timestamp":"1760578470"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760578465","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"BIdgCSwLd7nGi4d/PHQ5lgxjJXVcn0yfknTe7x+anIzm9OOK7kTQmM4mJPPATKCZcScj6fvZXsGP3POtP1tbDg=="}],"memo":""},"metadata":{"timestamp":"1760578470"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760578465","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GxvddIHWvQpfYcvo0iC+sevEiw1xQMg7aW3pdovJAeBz4bB6fAp+pWpGoDD0D6dTWq18ZSy6Zv30IUU6gZGUDQ=="}],"memo":""},"metadata":{"timestamp":"1760578470"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760578465","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"6qF4G/oYOwrv+AhdRhFk/1RBRcX8vaRnRaxYD9VC9jq43QKTuk7ArhUmx0oT0GgMb3FqiSsGsD8s6NjRXUjkAQ=="}],"memo":""},"metadata":{"timestamp":"1760578470"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760578465","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"N8DSJc1CIL4kBBvXzk2GKpi58ZQvSV1V3I4f/H44nl6LYLyAI86TrjenpzrBOMrCV5kFEX7yHIosx8yRkFUUCw=="}],"memo":""},"metadata":{"timestamp":"1760578470"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760578465","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"iuxcLp64C+9yFw+4yNHXAeS8Hx15ZhiFMwm2J82i2tFkLUBG4Ss08Xx11kRsF8Hn303WW8O2UwAV3UN95rLTDQ=="}],"memo":""},"metadata":{"timestamp":"1760578470"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760578465","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"71DGJvos9olkemJJJg4h4NWV5QTn0BMk0akMrJE9NZeJokgqh2cJn6snC1ba/4qtjbURXsvwQV5qaALaTk6GDA=="}],"memo":""},"metadata":{"timestamp":"1760578470"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760578465","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"jSXzL66oq8jnSWryNembQZx7txDb6gTGD1AUG1ZNXMxwq5jFn70IbnS2elQQnAKAeY09BG0sZqrbePm2Q/SSAA=="}],"memo":""},"metadata":{"timestamp":"1760578470"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760578465","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"4StJxuxWVdqPPOt63nEf8jKjW6cZ3rGhVYIaxyf6cH1sLYKGgbb+FWOCFtYgvEgOAEsypTeWOEHbq24LAhTOBQ=="}],"memo":""},"metadata":{"timestamp":"1760578470"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760578465","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"C2W57sX4zj6lvARD/MDO4J4U39m2bcFrZmvBlGUgC2NfiMZO8oCpcqKVGvFKvkskFmGU+Sl/zhHctiX6X/5SBw=="}],"memo":""},"metadata":{"timestamp":"1760578470"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"hoho","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/hoho","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/hoho\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"gnostudio.gno","body":"// This file is automatically generated and contains metadata about this\n// package deployment. It serves as a marker that this package was deployed\n// using Gno Studio (or Gno Playground) and may be used by tools for analytics, verification,\n// and ecosystem features.\n//\n// This file does not affect package execution and should not be modified.\npackage hoho"},{"name":"package.gno","body":"package hoho\n\nimport \"chain/runtime\"\n\nfunc GetCurrentPath() address {\n\treturn runtime.CurrentRealm().Address()\n}\n\nfunc Render(path string) string {\n\treturn \"Hello World!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"819753","gas_fee":"820ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"BC8oyz5NGOCCpmqCXUyJa+or3NgmpbzFwvclPgOcAjbaC0ySBJsTku7j3LXhQEQ7rgmDF6icHjyvvItuDd1ECw=="}],"memo":"Deployed through play.gno.land"},"metadata":{"timestamp":"1760607598"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"290960ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"XsW7PHATaiDeSMyEP/jw7KqqzkIki3PPxWBoZWtWARK2Z+8gU0My32koDazYUBk9N6wWUAFYYBl4PtmGbbqIDw=="}],"memo":""},"metadata":{"timestamp":"1760659732"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"290960ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7QGgOIWIZ1j8K9nKi74Jx5L7RDfLCR7e6nu5Z1mqlFeTAj7CcY0/iFLIh/cun6pefV7KKLgvHKq+FcVXn9AiDg=="}],"memo":""},"metadata":{"timestamp":"1760659737"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659742_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659742_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7OddmwXtRv83SVpJP3u9w7q1OYZZLV8aGGLR5qZQGmcRcJn68iae535NdzV4ybP/UVdVFr5Fs8YtDlXeypkpCw=="}],"memo":""},"metadata":{"timestamp":"1760659742"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659742_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659742_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"HzTNVd7YdVJhjBnMZZ9zJk3aDHfB6Zyx7NioQ8PssPjf+a0v2jx1opDQ9YqrfEqo+865+ARy0O95EHMYryemDA=="}],"memo":""},"metadata":{"timestamp":"1760659742"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659742_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659742_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"aa7/JIeGGhxlJ3of6jombsnIkLliSVfmzrHgrF7gKbE5eGc5iy0laOrifd1/JMU5SJForKxwj2T3FIk23dezAA=="}],"memo":""},"metadata":{"timestamp":"1760659742"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659742_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659742_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"70fDoppVgkDf+BiELq9wyS6BIHcMc15m51SNJ6PT4EhGDJ82oTko/T2n7oQtXIaZwrg0PJZa+xs/IyMLhgqQBQ=="}],"memo":""},"metadata":{"timestamp":"1760659742"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659742_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659742_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"rI3KfaFBeM4bK7E8KPrCKHT7am6BSwglJfNvQTPsrM9N6eruG9rT796+z63Z+HVqu5p058jGyK8lBhdsuL7zCw=="}],"memo":""},"metadata":{"timestamp":"1760659742"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659742_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659742_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"YDGhA5Cx93F+HYCKWYOilZLus3UuCQflrS3R8rmCVpAWcgQkNZs4XbTcSlCwa2OMjnp7J2dYgKBN7kTdoIpqDA=="}],"memo":""},"metadata":{"timestamp":"1760659742"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659742_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659742_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"mB/vz6sJuq9oi9ev0PXE3uh6DSnZBIcSzp2pB0rRA3WrUUX8Js+ynv2BxJkCKN7eCRrlM1U1zFIz4rhxxDjCCQ=="}],"memo":""},"metadata":{"timestamp":"1760659742"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659742_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659742_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"dpiyp03kCuz1QZFY3fxKHEqO8gZyjaHCi78Z61GFNYLaoV3xz9kIvnI5tF6aUcEvSeSsoLhpD5SlRgmwoAuoDw=="}],"memo":""},"metadata":{"timestamp":"1760659742"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659742_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659742_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"F+rGTixKQHkcpNqIO7bSnvoEXKxHBOvn54W2rDtiWwglMLeU57pSyJCrJ2ucF/R4PHxwWxydqZH36fY906/cAg=="}],"memo":""},"metadata":{"timestamp":"1760659742"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659742_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659742_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"u5xVwvzBzmivWXOO5IegH9BwKGMhFag3IFKin7O9AVoK3r6tAvZ0AZCRZJ6nxrUa2biTHHkSw9s/xNS6wqwqAw=="}],"memo":""},"metadata":{"timestamp":"1760659742"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"26460ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"g+5q8Bne94mCh2VTGpl+j1LgtBrIdt+Z/425LBZf65nYW1R3cccsHn8rvu0hFvU/YFV6+pNRXAUraQMPxN+IBw=="}],"memo":""},"metadata":{"timestamp":"1760659742"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"26460ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Y+2fZW79saihtZ62LDy3JUSxxVfgqqg8zkDYEPy4PKa3IBbUpW7neoRKDlg6UVuhSyCxnuH2NOi2pf2roHHWCg=="}],"memo":""},"metadata":{"timestamp":"1760659747"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2816835ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ibKTtfbf1ve14bo7hOaPeDGsHY0U9urlJaiKJeqIyl+BpbO/bxVzhlK6K/wXPzTNVAxjo41YiWRU6wQN9++fCA=="}],"memo":""},"metadata":{"timestamp":"1760659823"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2816835ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"uKYxjwAEYUcS8oFeff42XudDFsiHDYQ8wqPi5IyvgI2Xy1OAq0L+xLRnMKwfhij6n1Rssoxrn2+FcBc+gsXFBw=="}],"memo":""},"metadata":{"timestamp":"1760659828"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659833_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659833_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"T9LkaNH/Q3zyODcA9agqdWrtuZQnEyozgknqT9s6ZUsJlVb+7evFKOPpzwrUwuuWrCJ/XSC4ejN6v6eUfDNmBA=="}],"memo":""},"metadata":{"timestamp":"1760659833"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659833_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659833_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"+jXefcJzty7hPS1G3cq70hweTHV+2t4GK+L0xd9nrYI1C6Y3sO1Dr0GPpRcnMUy0w1X0fAfWJRNMTzUwxYBCDA=="}],"memo":""},"metadata":{"timestamp":"1760659833"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659833_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659833_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"AbAmC/ESkdMoJJyFelB+bpgujtS6enQ9L8lz5U4tLCjphKCuljxDfeB/dNYkm8CnlfniiStg/9Zux/YUhiOTDA=="}],"memo":""},"metadata":{"timestamp":"1760659833"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659833_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659833_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"XYTS9aLq3nLxy41bv+RBm7OpdddyZ4jxIjEJ8/ZqIXH0WVEduQxlvwcqfaEbkx/xJpDXyY6w6jBkpkKwUjBsDw=="}],"memo":""},"metadata":{"timestamp":"1760659833"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659833_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659833_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WYXF6yibUBBvxcHc35ZHiNVss3CdUKTALlD1Bx4v13smlLYjilNdxMPaBGB7RvDHmLH/88kPFny0VHeNSNxeDg=="}],"memo":""},"metadata":{"timestamp":"1760659833"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659833_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659833_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"8gVQQUMSjNRPxXwlqBrJizj1GsDOhdsUcZ1tsg3NAiczFp+RqRuQ74rqBKm/HeXKnGEHo0qa/xGIi8H8W0bWAg=="}],"memo":""},"metadata":{"timestamp":"1760659833"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659833_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659833_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"2OkSCE/WibAzwPdazVYsnEBnzn5fQ1/+4G7XJrgIvOG9tzt3Pi/dO17eyYSyaW0NpIonPx1pBQBcO0bk0pkKCQ=="}],"memo":""},"metadata":{"timestamp":"1760659833"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659833_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659833_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"lCJeGrrorcwdVJbkFKAbS/w3teNJYqjmy91CHCLqcWJd0ylqZ1ypt+FKXUg5CtdDGWHjpQ91cTegDI2umRTZAw=="}],"memo":""},"metadata":{"timestamp":"1760659833"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659833_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760659833_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Egte51XZjaMbNYESgCXiFw/Mu2YsUfilAXSivNDXO9E1HbWtC8jbroaHMm/lVLxTGLZ3WlzKBiK/ZjKipiHRBQ=="}],"memo":""},"metadata":{"timestamp":"1760659833"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659833_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760659833_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"TMVjUoh0hRlCOpJOiRi3isNaYsvoDJHQWkcBICBDLVeBN9PXzeP2PA/c5jqj/mnv1fHwCj0qoahfagDKoYsmDA=="}],"memo":""},"metadata":{"timestamp":"1760659833"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760659923","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760659923\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598830","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"KPZu+DX5dGLQWxI1ANZbQfqqxqcECDOvlMdWfX5G7cP1pJVo2PSNhRuaysRfHCidalcU2JLKFa9ZMQYOp/Q4Ag=="}],"memo":""},"metadata":{"timestamp":"1760659923"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760659923","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"diAwqk4W9cHIC6aGjJcdfVj5aO2Cenu7GQx2txmCpeNTL7X+UZJ/uzNREZSOClKw3hPaUxOBLPiWddXc+6qqDg=="}],"memo":""},"metadata":{"timestamp":"1760659928"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760659923","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Xc6cix2NNkM7QfJpEGMhqXKvgvcp8V4LfVom8+B+Hr8RdDXC2av9vV5t7enfIbLPZ4p1/eQDljW6OowdZZ6HDw=="}],"memo":""},"metadata":{"timestamp":"1760659928"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760659923","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"my5Gg4tIX37upcTyxedajNHLcLM1ZlnZ4CmR1pLm8vyeT4uZpPqf70BgOE5iNv5yTq2Ki/Tj0jQQ92bdguGuDQ=="}],"memo":""},"metadata":{"timestamp":"1760659928"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760659923","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"BGzTnZwwJ/RS1ZiFq6fWBptPZNk580ewyPSFHvjkXA6KUcQaU3qra8pgkiibZE9pVpZKmxdfnDOUjBNnYUQAAA=="}],"memo":""},"metadata":{"timestamp":"1760659928"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760659923","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Zkrqkcw3krGyXHbh1W/Q5xT+8yxcOgrlb4MjnwEMJRakK8j0P1yyU73G2plBh5hk8ZwApqo5U7ozOeCgPASwDQ=="}],"memo":""},"metadata":{"timestamp":"1760659928"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760659923","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"joep5lYRVcW5IepRxs/mJaIGRnX05qU6hmU29qNpjmhOd757ZtsjKbNljg8yXFG3+XSC1y9gmxDD9dj/l1ZxDw=="}],"memo":""},"metadata":{"timestamp":"1760659928"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760659923","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"fUkuYjpJQgukqOp1mJxQyU75VyltsGlQKBjv05iga3ZJA43bJFixqV4LV/2ZrmxEWnfval/ow/TtnpI1RqyDDQ=="}],"memo":""},"metadata":{"timestamp":"1760659928"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760659923","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"mpCfhnBtMO5jF9oVTTWIz5QIS29YGZAQQi6/WcbOkaIafl5NB+x3jQOWFHmdjHD4GsswpPhcB70fV9bSEXjEAg=="}],"memo":""},"metadata":{"timestamp":"1760659928"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760659923","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"MtwQVHqy5ZtML6jMGietfBXFGm3WQjJGJFHd82kXrqUO96DyAGLrA3fnhfTltt7A7vHwVP1V2zVKzJV86JgaDA=="}],"memo":""},"metadata":{"timestamp":"1760659928"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760659923","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"oTPOOn1YRZw7eVgiwZLaNeXvTrWcERZCz75xMitr4LXMF9XuNTV4cjaY0MzHoeXUwz5pQdH5qYqe50V8zy8uDw=="}],"memo":""},"metadata":{"timestamp":"1760659928"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1760661144"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1760661180"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"LuLpQWDQuNiqSFnMCH7eEfodeRecoXU0tp9P0qLAIwNLCgGEUepCPDffYiskeLj+XxR8VOl4o/f57QF5YKyIAA=="}],"memo":""},"metadata":{"timestamp":"1760664658"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"84F03cQ3IXT1mtfvsL5EFHoK9lpoLDhSszzh+Lf4jy55TVW9xDoEUcr0iONCLLx3G2HV5yUPGRKrQNO2iAFoCg=="}],"memo":""},"metadata":{"timestamp":"1760664663"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664668_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664668_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kJDARfskIvNf/yip73mFg1adD7NiAJ90tvl+21hQ/dvo3PLLX8wZptpa/eQXEJoDm33mIN6BBYdEtvAZWQqHAw=="}],"memo":""},"metadata":{"timestamp":"1760664668"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664668_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664668_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"YQQ2C6b6ZV9e/ypKrN2WTfzSTiladYIIdYjvwshNs9QmNMdcluQUs2H2ntTFjNi0Zz7YAOmbIKw2mFBx62YJBA=="}],"memo":""},"metadata":{"timestamp":"1760664668"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664668_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664668_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"SWg20vbKFpzLc1XMAua2GZyy3qwvrIk30PQb4L+vc0OGnm7A10SrecM5PMgZaEzeohqWCezntLsQEpuGMILZAA=="}],"memo":""},"metadata":{"timestamp":"1760664668"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664668_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664668_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"mPnYhWKw6mw2SrpREGEU+8xu0Z6xN3SI219rHzCcM+zNkTbjQ2L6mDKmLHImhnkEEWy0N4w1eiT0wdpte2TLCA=="}],"memo":""},"metadata":{"timestamp":"1760664668"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664668_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664668_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"fHmehbqs/tcSsSyRqSxnt0LyfAVP8TJeq8jdvn7iRu71mCtPTU8Qnaiu76fq3+c0tTS6WAeGHCKL+7hJolAsAA=="}],"memo":""},"metadata":{"timestamp":"1760664668"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664668_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664668_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"RKZunTaEP3zZMSY5cp0iqR/yCODqet+7MXE3eztadjRhzVR8McpMvopX2sxmvBAEvJxjFmR/bmz8z/0Pe0m9Bw=="}],"memo":""},"metadata":{"timestamp":"1760664668"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664668_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664668_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"hErSlBLdM9GJrcRvj3pK0QEKQ7gd5Y5e/o4b1g3j4ZGPJVp6pAcMExhOV6BVy9qgb4bUQCI/e/gwp4SXyoX3DQ=="}],"memo":""},"metadata":{"timestamp":"1760664668"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664668_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664668_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WiFwLuDQJXvmJPf6PGgM3UHWjvUqp9O0qASyNNAWI6jejMP0IU+a+OqJTJ6eUqshf/sDjoJOrLRGqbnLSQ7nAA=="}],"memo":""},"metadata":{"timestamp":"1760664668"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664668_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664668_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"t2zfoM/dFSS3OCiXXjejoeRATc1s5mnTbn+hfBfCf1HK+Ux4qkTB9zYSfclwZOytcbT4BJ3bgrkmBo4KX6+wDA=="}],"memo":""},"metadata":{"timestamp":"1760664668"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664668_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664668_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480952","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"CIVeYh7NZtt1LhCDDbsrVs3C+aHFTWaygDBLCeJK95diD4D8uMb+eGMPnb4wnCsAQ33/o2ZpV2anZzs5ZuS1DQ=="}],"memo":""},"metadata":{"timestamp":"1760664668"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3PIEn1CnQ5rWfFPmTQDQouznT8Bn+IOf+WNpe/CQUEx1WkbyTL9rKRQPLH2JgJfvBKZZecaGL1vqbOYI1y8NAg=="}],"memo":""},"metadata":{"timestamp":"1760664753"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l/melcXkMbve2kw48m8kcwnIKY/OYVowcRJP7iSt64ePjeuuU9mYMNo6raAlQl5DmMw9565JJK9TF/MF4PHlAg=="}],"memo":""},"metadata":{"timestamp":"1760664758"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664763_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664763_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"1xXaOUBPPXx8ZaJq0l/jobwM2ScXOnZ6zjOhcu0ylaIYgaXjpp2URF2jqPmtRf/2ShX/ICl4GaJU9G1ZPFTPAA=="}],"memo":""},"metadata":{"timestamp":"1760664763"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664763_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664763_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"LZsX3WVXPdDb4QBF3raEmgSUVZqu7vazi/6WPsM8ZCW3wA9AW7ohmjdzsHcGgTfTJ7vUv/VlLXtTaXd47naYCA=="}],"memo":""},"metadata":{"timestamp":"1760664763"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664763_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664763_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3sayPsQWMg0VL6hQw0JfGri0Osa4KEIYaipCVDHv2wt3qp0oUyRpIPpKa28jJFb1aIVUU9+X3r2/zA0vWmEIAA=="}],"memo":""},"metadata":{"timestamp":"1760664763"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664763_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664763_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"bfAacsCbrMOHmMiBbbnh4cSr/CrLjY1KsGFS7lCO4Vj9BJd/jm2pX6Ih+2hwO1ToqSVf9QooLzahKepqHuVjDw=="}],"memo":""},"metadata":{"timestamp":"1760664763"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664763_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664763_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"4HQSSWbFN251FQSzQ38xkNMGp+n6lJRDYjPWQgxn35aAH3b/SS0/P5SRtlwVKKM8GoUBnJpwPBngIk02v03wAQ=="}],"memo":""},"metadata":{"timestamp":"1760664763"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664763_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664763_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/B552Gc+ZdpA4afLH7U/emgMKPa0ED79Hw4isnfL4aTL4Q60efR6337kgNgdspBggZg8aF0RxUTs2BYQoLFhAw=="}],"memo":""},"metadata":{"timestamp":"1760664763"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664763_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664763_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"F7eLaBMsq41+bZ7Eeqdlblw3SAfGmlB276Na0fKMQ98SwiVKIwm2EhPFDQQ/fr72lHV5gu3N9QmJzW9GVBqiAA=="}],"memo":""},"metadata":{"timestamp":"1760664763"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664763_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664763_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GX9vW4vaVNtupQxdOZcNR7WCZe20EArtBa/vV16UdCePX8w+Kp6WCR03HNZ0zqeKN26mMMEQ9D2ZK2Kwl+bmCQ=="}],"memo":""},"metadata":{"timestamp":"1760664763"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664763_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760664763_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ZTrXQKYhIGo0iz8axVRm1hzYDL/DNcpVu94q0GN/EjNqgbT6hgNwHCEuDvC1HLwxqwtcjQLjGjG8KJ26/wKiAw=="}],"memo":""},"metadata":{"timestamp":"1760664763"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664763_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760664763_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kTo+0m7mEhww2JABYXLDwF5IwkRz38tHAFnNAIWiAXLOEX15WjyoumVB0E8fXgoeNBkoAnyFmG2UbxbpneafCg=="}],"memo":""},"metadata":{"timestamp":"1760664763"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760664864","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760664864\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598830","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"8wGZUIBsCvmmpSU5/1Io374KoBiB7zkcqxlUozVgsWNPM6z8VPwdioIywtXZJYVTpeeKMPUnsjJa1dIcpYWmBw=="}],"memo":""},"metadata":{"timestamp":"1760664864"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760664864","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"teGMEhzKUZQtrkElL9+c1KJHrqfCMVSxQEcA1V9CSox9doDIDEhniuk+UdEL3gPzM1pgTymxR59A3tWlm5WCAw=="}],"memo":""},"metadata":{"timestamp":"1760664869"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760664864","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"5ZK0cG52w8cUeLlcA3uKl7zjVCqNOyEURPBf94j+DPnbFDIWT1rI+jGEGONNktit4x9f94rI3MhhR2FIjb8YAw=="}],"memo":""},"metadata":{"timestamp":"1760664869"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760664864","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kyZYqFvo/63sSOe2t5yspWfVZDBfodGjPsunlRTsAlUAxjm8/PM8t1gM7KDul/TzHjCUaXvoNSyPg0ISO516Bg=="}],"memo":""},"metadata":{"timestamp":"1760664869"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760664864","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"+umeyzaLQTC0mKGeNHlzNqH1lCRBJBsb/FArHtsmrU0k0tx+HtuhGZ+IST7vopfT6aB0sDZj8SZaQqscMfBlAg=="}],"memo":""},"metadata":{"timestamp":"1760664869"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760664864","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"G603hV6ZWOh6bt/vCGDjQodz26fY8gCQfAoQcctUqXyYSmxYtFmMunpfXpfsG8nf3MJfOiN2krKCLDNF2Bk7Dw=="}],"memo":""},"metadata":{"timestamp":"1760664869"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760664864","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Ffmd8vg/hWumOvoLjnvhwbTyuFHvYOmKvFpx+LznQ9Vr7hwNQx68WFb2r90kfmzDrBzv4hm6z96k1cbZ6pevDQ=="}],"memo":""},"metadata":{"timestamp":"1760664869"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760664864","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"BhIYRRI1vWJsNKPjRNtXyZ6Qyd2+nkMSiguVCUjd7dTKIV+UWYxjl9eMk3B6Jejm2OKKQ5uOQGHHohqVanjsCw=="}],"memo":""},"metadata":{"timestamp":"1760664869"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760664864","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Q5r1TF6sO9L9f43ku2Wo1yDtaimls8GdO/xgQhBOamDSNwJw4RCQ9xnVhBjHqmrJ52uBcGUYJ48E7pWxl8swBg=="}],"memo":""},"metadata":{"timestamp":"1760664869"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760664864","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"hy1lzvZ5gR8WodE7kx+OfGbGx6GsXnBP7c43/4TgSvAWOQO1JpEP4bpc1nrb1Vmz5XQ8r6yNLAHwlFMs5XKLDg=="}],"memo":""},"metadata":{"timestamp":"1760664869"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760664864","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"C60+ZoCyh/W0p+pcKouIBqt1I0idIutAEFyBQU5GQ6bvWk3KymWmTzVKj+8uPCl1Ne8OXklvw/dcIl7qdS7iDQ=="}],"memo":""},"metadata":{"timestamp":"1760664869"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1760666085"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1tkp4cf7rcy35s759sq8d9j8c3v0q67u6utpvwy","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"xwPtGKztisOmDjij33H8Fbn5r3NxrFvY6HgBie/lzNYAQxl5okU9hN2/+vJ+zd/8GBlnjJfL+MS/oywr8XHgDQ=="}],"memo":""},"metadata":{"timestamp":"1760688902"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1tkp4cf7rcy35s759sq8d9j8c3v0q67u6utpvwy","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"xwPtGKztisOmDjij33H8Fbn5r3NxrFvY6HgBie/lzNYAQxl5okU9hN2/+vJ+zd/8GBlnjJfL+MS/oywr8XHgDQ=="}],"memo":""},"metadata":{"timestamp":"1760688917"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1tkp4cf7rcy35s759sq8d9j8c3v0q67u6utpvwy","send":"1000000ugnot","max_deposit":"","pkg_path":"gno.land/r/gnoland/users/v1","func":"Register","args":["testdb111"]}],"fee":{"gas_wanted":"20000000","gas_fee":"10000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ISVBSuTkIIvBgzmyZFZ57Nwk1zG0rjmWxYZ7Hsnd9drZK1yCXZp7J5c3kGdlqjoFVYdrUE7unnBtOVYKd3F3DQ=="}],"memo":""},"metadata":{"timestamp":"1760688927"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g10jgx07n78mk550dgfm70yk53p27ly8hqdaspfm","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"OdgXT8vzolbPB8O+pGBsUwbmhgNh09Y3nfDgD2YsFJTfMASLueHsNl17cMSgMcG0W2NPs6+0+fbKjzU4sDgRBQ=="}],"memo":""},"metadata":{"timestamp":"1760689168"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g10jgx07n78mk550dgfm70yk53p27ly8hqdaspfm","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"OdgXT8vzolbPB8O+pGBsUwbmhgNh09Y3nfDgD2YsFJTfMASLueHsNl17cMSgMcG0W2NPs6+0+fbKjzU4sDgRBQ=="}],"memo":""},"metadata":{"timestamp":"1760689178"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g10jgx07n78mk550dgfm70yk53p27ly8hqdaspfm","send":"1000000ugnot","max_deposit":"","pkg_path":"gno.land/r/gnoland/users/v1","func":"Register","args":["testdb222"]}],"fee":{"gas_wanted":"20000000","gas_fee":"10000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"eIsiIfvVz8aXC979dAb05ckDwBN0t65R/2j6axDJS7XYhnbcM42TM6JR7Ic2ZwezMZ/l+U4g6/KS9jDgVT2jBQ=="}],"memo":""},"metadata":{"timestamp":"1760689188"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1adqw2x04svqujmr3enphma96rsq5ss4cafdlcv","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"wF93ti+u6hWIPhpF4nkW+cZo9pcRcWDgDGSF4ImEojACFuAT5M455D9WvvqDFS7nrqQ1MoZ08YLoF9tWZiAlBg=="}],"memo":""},"metadata":{"timestamp":"1760706652"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1adqw2x04svqujmr3enphma96rsq5ss4cafdlcv","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"wF93ti+u6hWIPhpF4nkW+cZo9pcRcWDgDGSF4ImEojACFuAT5M455D9WvvqDFS7nrqQ1MoZ08YLoF9tWZiAlBg=="}],"memo":""},"metadata":{"timestamp":"1760706672"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1adqw2x04svqujmr3enphma96rsq5ss4cafdlcv","send":"1000000ugnot","max_deposit":"","pkg_path":"gno.land/r/gnoland/users/v1","func":"Register","args":["asd9988"]}],"fee":{"gas_wanted":"20000000","gas_fee":"10000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"RWwQYxGtji7gOS2iznrohNzpS3EfT+zuGSTJRvKz2m/qpr5ZoU3P4+HBm9G+zwqj3DjZ9xxuqNoQIL6ciLaUBw=="}],"memo":""},"metadata":{"timestamp":"1760706687"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1at2h7kdhz2m9lv6azn54mwu4wl95k94wu90uwj","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"b4QQUX2rdff5PgnlVVUZDuuSurClPh/PjYsA64xr8qZ3YKqhKnZGco4mIVXvUIWHeC0MksknvZQGv1GE3K5OCg=="}],"memo":""},"metadata":{"timestamp":"1760726657"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"290960ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"XsW7PHATaiDeSMyEP/jw7KqqzkIki3PPxWBoZWtWARK2Z+8gU0My32koDazYUBk9N6wWUAFYYBl4PtmGbbqIDw=="}],"memo":""},"metadata":{"timestamp":"1760751032"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"290960ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7QGgOIWIZ1j8K9nKi74Jx5L7RDfLCR7e6nu5Z1mqlFeTAj7CcY0/iFLIh/cun6pefV7KKLgvHKq+FcVXn9AiDg=="}],"memo":""},"metadata":{"timestamp":"1760751037"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751043_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751043_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"as6Ix8q6zngKMeAqoEsXKeMspSZ9InoXY3aA3FPsfAoTtHsKCzi6Qfx51O21XYSE7wPTbgI5keSDp/26cZ0IDA=="}],"memo":""},"metadata":{"timestamp":"1760751042"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751043_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751043_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"v0TUxPFlfawigne6VyhsqCDA79SP1VV8ujpTcmi8pwx5TQ99WDIQ+L1G7AylOMS7nNqo+9ptI0YP5+UD8yumBw=="}],"memo":""},"metadata":{"timestamp":"1760751042"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751043_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751043_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"jn7apfshXmcvXBezGmpW6l3FGhT5NFonlEDJhK8vZm8ZaIPDtks2q+bkh5UBy6jcyV5XdIYREp/hqhPXMSZKAw=="}],"memo":""},"metadata":{"timestamp":"1760751042"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751043_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751043_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"0WWUJcov0uE8upxrfJAxCN9ld71GhdQYMW/Qt9i1QxAwJnVKBt5uJc4n4jdSV2xuGye+9JtnoJSDl0dYOdBPAQ=="}],"memo":""},"metadata":{"timestamp":"1760751042"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751043_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751043_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"cVJhGaTlKD11RKzzeEz0dT5uRC/j0oncIkUflghvKXBCkUBU5dQqz3IbLLh6J0yEMVhMiDUlX4kpEAthI4ObDg=="}],"memo":""},"metadata":{"timestamp":"1760751042"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751043_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751043_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"cAMVPpI9SlzYa6trzdm5IGvjJHdR5nfUksRyFQn1DJxTEyNyL+LZrUzbl/cBSqiffzU76R0uT6TBZLm4F2kqBA=="}],"memo":""},"metadata":{"timestamp":"1760751042"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751043_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751043_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"W3DqeLKft/X3z1dWfe2PkDNg8Yqnxkgn8zrKqz7ieBodjoYotgYgFtsCyBsPgyWxm5nNOvmX4dudMmAf4+RQAw=="}],"memo":""},"metadata":{"timestamp":"1760751042"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751043_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751043_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"orY9zOSMqvHznydy55KxrBq84RlgWr9l2KnRPqmdyxdppMo+nf8XNGMK+Sa847cTcY/ZWsqRjqeiCkePBNVxAw=="}],"memo":""},"metadata":{"timestamp":"1760751042"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751043_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751043_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"AQsXS9R/huaqIHpvWItCO4Qi8uCZNdgG6hY+sxkTfJTzqnwIU1Zd0jWxM9Dz9fWMe1DlguV1589Laz34qypjAw=="}],"memo":""},"metadata":{"timestamp":"1760751042"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751043_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751043_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3hh2qb56ADTABX+vG5Wki+9nlM4yxFU7gfiQzrfy46ek6zPUn0mr01AUMKOg8IyHuj9jFwvvRr9XtA2JCDE4CA=="}],"memo":""},"metadata":{"timestamp":"1760751042"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nh1hC8BDVB4nuyMnHZrOIdnkN9cj4wIWD879E/PMfUt2ldwvoQKNmSCXezTVJ0Dh28Vrg5HC7A74GhtMKFs9Aw=="}],"memo":""},"metadata":{"timestamp":"1760751138"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"obSxxgIRKpLzLO+6Rey6ugd4fqQIdw8bRE7RheB0Iu7EIimndBZF6WZ5lIRYluEjzll81EVxlcKeagZpp/2MAQ=="}],"memo":""},"metadata":{"timestamp":"1760751143"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751148_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751148_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kXQMtGxq6RfXcMPdO2kiKG7/wILNyqKIJQ2tbdHhQts51j1VemQrjylE7PwXZvKL+LE868bmZubGqgSc1oKmBA=="}],"memo":""},"metadata":{"timestamp":"1760751148"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751148_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751148_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Ump1DM4vajqKOzwBmKBAIgoa05w8d4RBmBlvXK3+Xi73saoVoayzU/QbSrg9bCOgkFkuRD8jrt5Tan7pAQjqDg=="}],"memo":""},"metadata":{"timestamp":"1760751148"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751148_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751148_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l7mv2Z0vK9aUN00ZbCQlzEIs96XTE7nfzCwhyMuZWlxtR10eGFe7ZQongKW3LxtcwYgcReD4EEq2CatumX3jCw=="}],"memo":""},"metadata":{"timestamp":"1760751148"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751148_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751148_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"JRBb3pnLy2Ii4PSDmUSeiPbze8TKfSQBOZqe4ExZxikKoFM9+0abZOkSdSUXCn/xntOcvg4cg2d7US3OGmJdBQ=="}],"memo":""},"metadata":{"timestamp":"1760751148"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751148_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751148_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"cjScJuwZyYJnqmOS2dpMvyVLEZ/xIJ81Rj8oe4QbjyERM3oOm+lTUl8Qv64YxJ9VK4m9j2VBGDA8tv4J/ZvJDQ=="}],"memo":""},"metadata":{"timestamp":"1760751148"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751148_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751148_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"iTnd3iYjfIN87NHvObSxutkrHEelndLAHQJhwFxs+v5AIBpkSoGrWs2Ffnv/xXdMy4aY31eoDg5Pyhh9LvCxAQ=="}],"memo":""},"metadata":{"timestamp":"1760751148"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751148_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751148_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"cFLW2lfOPcTb7pkR7yGR5kh6XXOTFe2ZWmOMJKntych9eG9sMXgkpi1FE5a3TQyOnkS76fOk60xlz9zio1xZBw=="}],"memo":""},"metadata":{"timestamp":"1760751148"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751148_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751148_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"HRvCtbyKrqHNrMyM93kH4Z7rIwedxFtsPcZVwz2y8V28toxLIUFp4kiAVB0jvZ6yChpM91+9R4vwWjGVlkEsDw=="}],"memo":""},"metadata":{"timestamp":"1760751148"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751148_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760751148_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l6V+hd1CS7iatHXluJMGO1uAV5scMs2h1wDpQgtJP07u4mMwzIgqxesJ7g6n9em5uDtMJd0/DvmZZTwzZE3CBA=="}],"memo":""},"metadata":{"timestamp":"1760751148"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751148_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760751148_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"U4hF3q9x1LNEleCl8/2jnMwe6YB4iCQVG4ZpfK2xax0wk4958CjTxnqpx4mNBZEXFIdMc9cV8q9Qv1/8zihVDQ=="}],"memo":""},"metadata":{"timestamp":"1760751148"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760751238","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760751238\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598830","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ZTOAgVEZV4dr5KupD3zyNdG4r8R1NQiKJUe+Q9U50QwLjcoXhPWbFiW/GWx1EXiHHXLCi9ZlIMAe6AiPgKgdCA=="}],"memo":""},"metadata":{"timestamp":"1760751238"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760751238","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"lmbCOz0NglRT6BSHrMRa+FMHombEVrry5UB6FnfHo/gCSEbh3Bdv6obE6vtCCwyUFANmJUemnyjZikLl80iuAA=="}],"memo":""},"metadata":{"timestamp":"1760751243"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760751238","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Wf/+aJl/4Z072aGeDohAdQ1lpiX+9aza47Jkbk3HzmSX9lNMwDb3nwoafwT5A7ANqEesP+7+yguYYQgyyFisAw=="}],"memo":""},"metadata":{"timestamp":"1760751243"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760751238","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"N0JU49F1aI2s2fSvT3HYNJynbPdUGp16Na3fzOwM7Lmv8rJUK9JXE9vQf7IfN52JBAOuFARXYkywHimtEtlpCA=="}],"memo":""},"metadata":{"timestamp":"1760751243"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760751238","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"4VFDpdKx7/e4inIxszR+svUfO4ceJHm0DgBunqJF9i1qkKngTp4nRR5Uwij3+vmwplWJUYqId9x+oUfJkRo1Aw=="}],"memo":""},"metadata":{"timestamp":"1760751243"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760751238","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kd3PJ+sxhpP1ho+FfHTLLFwWqL3MefARn1G0duFH443ZFdv4ZH7cquzuTihiqykkb9DV3EDDpheehuc7k/1UDw=="}],"memo":""},"metadata":{"timestamp":"1760751243"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760751238","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"wAFCm3KfrMlY/UKbhZ2w/57hDvqWguwerYQve6EO2X1PykfsFGzG98fvMkWrrazcPgPnLA4JxUf4bGdFg7eyBQ=="}],"memo":""},"metadata":{"timestamp":"1760751243"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760751238","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"o2a+J19GSt7JHxr0M9a3rUj+/Z7EchJ3aWkJsYp0ivLsyGuk2NUoDNx6a/u+bZ5kJ+8xLLifiwl59C3dXXLJDg=="}],"memo":""},"metadata":{"timestamp":"1760751243"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760751238","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"RgmPK88+vutxa/1/7iJYsEb3QoCk7y0FRmVtlbk1DYPNpbaUaWF24Ieb32/EtqHHKgUOG2CQiwvYucAOx2NXCg=="}],"memo":""},"metadata":{"timestamp":"1760751243"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760751238","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"D/YhzaH0Ax9IliDvGaFfQGWKLWsyorovmV7w1GskZmkseE92kuVAnft3+7QqMdD9FZLy/sT6eDqz6+dd7hg2AQ=="}],"memo":""},"metadata":{"timestamp":"1760751243"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760751238","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ppC9xmOis2fJ4A+BC2xQkT7y2NBOyNF9KaoOujwdsSI9aR4zbHI95XiDoUYgehCdvlNuhVA48cfA9sGSSJBmAw=="}],"memo":""},"metadata":{"timestamp":"1760751243"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g12f402wmfqzmsrxrp9me9n8tacyke6g7swshpeg","amount":"1000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"FWMtrk+K12026KwsHjVUjd0GBZAS1Iqjfnq32TmYPK2Z5+Yt+Jjz4IxEGNsGviFn0K7gsd1NWIb+vTAkVeY7Cg=="}],"memo":""},"metadata":{"timestamp":"1760762662"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g12f402wmfqzmsrxrp9me9n8tacyke6g7swshpeg","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/bof/uynyDkMSNciIHJzDvgosHUUyce2ZufsSOxobBY1Twn7jyNfzyIVuZxCOULdte3xUdIlZ4D1KRJ+nQYiBw=="}],"memo":""},"metadata":{"timestamp":"1760762727"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g12f402wmfqzmsrxrp9me9n8tacyke6g7swshpeg","send":"1000000ugnot","max_deposit":"","pkg_path":"gno.land/r/gnoland/users/v1","func":"Register","args":["lordg420"]}],"fee":{"gas_wanted":"11234582","gas_fee":"11235ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"MKEInEYW4Ew4pxAvMY7BGtXFlCAJ7FpNOjbg8tQjVJcE52OTAriEZFOMimomtqYsQAcVrscQraTQIkPu6RXDAA=="}],"memo":""},"metadata":{"timestamp":"1760762783"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1n3var8cxgquqga65u3ylccst0dc7r5wclhc8vc","amount":"1000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"JhSZxVOFOzkMOsQAbd22WBfV1fp+019F1uvjd1SFKwZhaQpMUxCa5IKvyMUVmqapYGF4AhZ0wqLL1wAbKdhvDA=="}],"memo":""},"metadata":{"timestamp":"1760774938"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1n3var8cxgquqga65u3ylccst0dc7r5wclhc8vc","amount":"1000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"JhSZxVOFOzkMOsQAbd22WBfV1fp+019F1uvjd1SFKwZhaQpMUxCa5IKvyMUVmqapYGF4AhZ0wqLL1wAbKdhvDA=="}],"memo":""},"metadata":{"timestamp":"1760775220"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1n3var8cxgquqga65u3ylccst0dc7r5wclhc8vc","send":"1000000ugnot","max_deposit":"","pkg_path":"gno.land/r/gnoland/users/v1","func":"Register","args":["bee123"]}],"fee":{"gas_wanted":"10735426","gas_fee":"10736ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"KNMxwdfmv4cU68lmX5rkWNJI3wJbGbJ6QRmNV9c5N3MmF220LfOHjXqIE/Piiqg5ulu2J5YWrZ3e9gVeLOWYAg=="}],"memo":""},"metadata":{"timestamp":"1760775270"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1n3var8cxgquqga65u3ylccst0dc7r5wclhc8vc","send":"100000ugnot","max_deposit":"","pkg_path":"gno.land/r/leon/home","func":"Donate"}],"fee":{"gas_wanted":"3530254","gas_fee":"3531ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"1DnDR0CPxubWwG6cZGgvQL+Hdn1uaq3mnDtkEXnIBIsu5r2vpQWK1LBhxdsiGfa7VOgJ8ItRxtI360YRm1gGDw=="}],"memo":""},"metadata":{"timestamp":"1760775587"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1anajhdr28jlh4dd6dz5pzdjk0dsyqvc4ayk0aa","send":"1000000ugnot","max_deposit":"","pkg_path":"gno.land/r/gnoland/users/v1","func":"Register","args":["horus101"]}],"fee":{"gas_wanted":"11303173","gas_fee":"11304ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"KRXxx2ZQU13kE57IFCa7PEU8uDAqPEbsKqIUyI0C+wsup0a/ZaIekI36KPv472NJM0umsnEIvjszdnGpHxv4Ag=="}],"memo":""},"metadata":{"timestamp":"1760783281"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1anajhdr28jlh4dd6dz5pzdjk0dsyqvc4ayk0aa","send":"","max_deposit":"","pkg_path":"gno.land/r/demo/profile","func":"SetStringField","args":["DisplayName",""]}],"fee":{"gas_wanted":"1922816","gas_fee":"1923ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WviNPU6pZWrEbKoSF+A17DuEtr0eH/lqkIIOxSLQt7NcWDaawoPW1uDXq89IjaFnQWntWyLuTOzvIu/zqaE/CA=="}],"memo":""},"metadata":{"timestamp":"1760785126"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1anajhdr28jlh4dd6dz5pzdjk0dsyqvc4ayk0aa","send":"","max_deposit":"","pkg_path":"gno.land/r/demo/profile","func":"SetStringField","args":["DisplayName","horus101"]}],"fee":{"gas_wanted":"1786479","gas_fee":"1787ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"tcDmQ0488YdQn5FfesFx76TsNP2E7vHCz4l5kx9bqTopOAC5/A1kzcBDOcbnuIYmpVy3RWyw4BBMJXL9pa0NDQ=="}],"memo":""},"metadata":{"timestamp":"1760785216"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"291040ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nBLnL+NA/LKyCtUh5CNCdfsWCCxdUl+nH1LqpLZLaiM5e7rS0nvVVsPg+VNdhFIhXBaWpN0hgCPZoXdeSAYcBA=="}],"memo":""},"metadata":{"timestamp":"1760837479"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"291040ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"NgTyOqVJZaDEWo/4PSe5FKk45QgrT+erngGYxAklfPnKGo6VHQFntOsHIepRYLE8FetvWqZnfPu7nib+Bgt6CQ=="}],"memo":""},"metadata":{"timestamp":"1760837484"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837490_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837490_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"b+zQKui9BmOe8YFt6KOeEF5NmM22IMdTANK2w34QDa9tHlsdJWYVly1JnlaEiolppkR+Oxu1jQv0mjam0vnvBA=="}],"memo":""},"metadata":{"timestamp":"1760837489"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837490_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837490_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"pX+b5q61I5RxDx48kvznVz5BuRU0cSzMXFOR8A4Y8brW5z8nyqbNizA36jYL24hUOEjeQlHvEMPbPLaUvmwgDA=="}],"memo":""},"metadata":{"timestamp":"1760837489"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837490_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837490_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"yISnH7OObg3Ww4Ll8i0RMCWfKa6CFEbbc67U+XND3qlwYBzLjnGSw0odW4hB3zRGJ/DfnNv5GE3WHNVeGljmDg=="}],"memo":""},"metadata":{"timestamp":"1760837489"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837490_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837490_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Pio6rjxMd3fNlbvTaqk1j+JBqPaHLOPGVS+tKlAKL55lyGTuFYHVugJPV5JBJZMyhdmSfUao/IbkrqvEfYazBw=="}],"memo":""},"metadata":{"timestamp":"1760837489"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837490_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837490_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"U/iqss1DJ1gdodySOmZnBhJxgMDw3ycQQD9RnYPDRRIu+vRVXLSYJAyfmjIPTho77FdwNFAQCn0zOGRAkrAmDA=="}],"memo":""},"metadata":{"timestamp":"1760837489"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837490_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837490_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"cyDzzvORtJwZyd2Dp+qRjHNuvb1+IFQR7JQ3CuM4jS0Tn3pUZivCBkzDMD/IqSfIXubDpQzmS5DVvJxOxrEvCA=="}],"memo":""},"metadata":{"timestamp":"1760837489"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837490_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837490_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"yquLseCFXLpEKOO/FzC/UVPw2N/60liiNgwWFESwxhMg1Zt51uqIQKjfo4OFahWmoaQAEnSfBcEDdGJx8HPVDQ=="}],"memo":""},"metadata":{"timestamp":"1760837489"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837490_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837490_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"OD3q19PBpkOMQ+cELFR6uO309VQTAh8h0jJEZm+fsUmEsA0Anck5XjDPffYhydCfNUrmcrCQYoce7GE9HUd0CA=="}],"memo":""},"metadata":{"timestamp":"1760837489"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837490_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837490_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"92aquLySr8nGLxdv3U5CU99syns7RcfPqYKUnsVJl5BWinVkp8KByS1ng/H/tTvSMghLg5uZrOcEhxtMkDtXDA=="}],"memo":""},"metadata":{"timestamp":"1760837489"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837490_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837490_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"norgHUodJWqHHSQDKz0n4glcHAxck9JeaiJ7eLtLDMO7ncKl2UisBumziGsDD+HR0P+PhYVpLa9s/41RwExrBw=="}],"memo":""},"metadata":{"timestamp":"1760837489"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nh1hC8BDVB4nuyMnHZrOIdnkN9cj4wIWD879E/PMfUt2ldwvoQKNmSCXezTVJ0Dh28Vrg5HC7A74GhtMKFs9Aw=="}],"memo":""},"metadata":{"timestamp":"1760837565"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"obSxxgIRKpLzLO+6Rey6ugd4fqQIdw8bRE7RheB0Iu7EIimndBZF6WZ5lIRYluEjzll81EVxlcKeagZpp/2MAQ=="}],"memo":""},"metadata":{"timestamp":"1760837570"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837575_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837575_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"fdvjdKSwAd+gV7mPg0CuhAjwhd/9qqNEk74Wv2P8v8PYr4k2K65XLoXRHeKOKa6Sg4+K528IgKJfKqxmKrSoCg=="}],"memo":""},"metadata":{"timestamp":"1760837575"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837575_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837575_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"2k1ZYubb6+ySWllELAH8XppUOLcPTk/1Rkkm4YBL7tVfpHfVdknDysdyHKQrU9r8zrlPUR/ka5dTh7ENibInBQ=="}],"memo":""},"metadata":{"timestamp":"1760837575"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837575_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837575_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"DXxpKG4QnQxBPetzJ4NntaI8rfUrdcof/EH5Zwc9roFjy+OX1aCzvTbh95Hw1c5CaB2himAqcGYFU2ReCCO5DA=="}],"memo":""},"metadata":{"timestamp":"1760837575"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837575_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837575_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"dx9nLwMeT1u6rhGm9XzH+Es9dcRY7ZVzMiJIhr0aHVWp/xXejdF+DE2x8jnQ5v12DTHXrpnXBQF5C0NiHlewAg=="}],"memo":""},"metadata":{"timestamp":"1760837575"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837575_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837575_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"CBS7QPe15quFOxVj4zX56do/GXLrbHZzidvMwoXQxOrtYOwavG6q/qXMVXr99YuA7/X4Il2XIt6mS4QuDdN6AA=="}],"memo":""},"metadata":{"timestamp":"1760837575"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837575_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837575_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"SKBq3aQLvJ2dKjsoMLp5BnI44Yt10jGRVfi5w83JM7rVQGdxt0WN+2jvPMQ3wh6WrZeSjyIkI7kxLR+YMfElCg=="}],"memo":""},"metadata":{"timestamp":"1760837575"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837575_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837575_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"utlHuUohp57CRGcFSikM2Tghd7ahJtov58HZWYP5m/uQx20+rwlkHcOZs6Nkt3O3/3e6DYNQlp16u36IvKuiDg=="}],"memo":""},"metadata":{"timestamp":"1760837575"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837575_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837575_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"9MhFM81qS9zA6iQmyn/QSI5ULUCUpHTvppltsf2ZYzHOloOeMJ2cjUZms+jJEh3PliRrg+8F7Yp77YXcBUVOBQ=="}],"memo":""},"metadata":{"timestamp":"1760837575"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837575_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760837575_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"08W8D+3QwNqfi0RNj/IusZuQTMicDshR06t9zuU8MzbDCWcwmaq+gVsIYOpZysQaZrdaJg+IudxSArTV2WNxDA=="}],"memo":""},"metadata":{"timestamp":"1760837575"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837575_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760837575_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"bQkJPHEQ+cfmt7cQ8TQoJedPiRHC8IgZFEYG4E6IWJh/Lz1swG/9In+pCtHsecKTDVVyvxk1eoXoYR9KriqSDw=="}],"memo":""},"metadata":{"timestamp":"1760837575"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760837665","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760837665\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598838","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"8PcuaRc+N9yGWNi5cfPYxfxm/HYkOHOUdZwRFKUHswNOKEaBoXClCv0o81GJMIcC1/ZgoUZgSORNsTg7syXbBg=="}],"memo":""},"metadata":{"timestamp":"1760837660"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760837665","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"sAmzUbloOEdN8GuM64QqK2+PzwwGh8eruc2zUPXVYnu2fsZrTRq4E/18f1SeEHoCWj1qOjmRww4rP0ADz3TNDQ=="}],"memo":""},"metadata":{"timestamp":"1760837665"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760837665","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"66N4+ap0tOF2gO69JB6EFfgLxlO2uQvNar3u/odynYCT1K+v4kRXSCTqyb3FgqveIb7szYWcSuyidXE+HRkeAg=="}],"memo":""},"metadata":{"timestamp":"1760837665"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760837665","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"q0imHQMKWWrxy/g3JLukcRdOqfnI5d7HKp9W2Grxa1mZbE8gx807c9QCxopqT1uaVmQcqRZgW+iNg5Qwza7jDg=="}],"memo":""},"metadata":{"timestamp":"1760837665"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760837665","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"HS7DhJcxxTN7ME3m1U3Wrg9rBQvT5OkKnN4+V2gu5Q1SQB7NO4rS5t1LyMDnqdtL23bH5RZ6kJMajHapLRWxAA=="}],"memo":""},"metadata":{"timestamp":"1760837665"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760837665","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Rj8jxSrgii0SOtGjBYyzpSYTizwBMHaEsUvXV1ZeDIre3A0VZTaln4tnHxJeREhu9trn5y0SPZh09BSCbRcxDQ=="}],"memo":""},"metadata":{"timestamp":"1760837665"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760837665","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7j2XoTHRmPv3OWPKhYYZz1+1gFCWy2aQcA4nK/YBV8+wdI1XPLFcHCvM+sQ3xrDvP0ljte2m8oITBdSAyrQUAg=="}],"memo":""},"metadata":{"timestamp":"1760837665"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760837665","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"4RfXGx009l6MbFJ3T5TreqJHwzAvnbrsJaMz5Lpz9RJeSqZGWUMyjcPSPAnuhiOuqBjiJc6HnIenqSDUYHEYDw=="}],"memo":""},"metadata":{"timestamp":"1760837665"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760837665","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ET854o5z2yYl5Dd6scuLpcvJjNFOKX6YbNQwjmp77DlQkmOKAawro6WChPJrL4vhbMLEzu8qDj/pYTbzYrYuCw=="}],"memo":""},"metadata":{"timestamp":"1760837665"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760837665","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"EGdGJUhvPLiMjGuI3iGCF0ywKZrPP++N35vqRQdn/kxR53lCUmFPFfy8laV3l6QQnXES7d39kyp+CDn9ofacDg=="}],"memo":""},"metadata":{"timestamp":"1760837665"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760837665","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Ao9p+OY44bqOqMS3y+b3PoLT2Aw4/xGxPF1sOk+ma9mt/N7qousMhUosSeKY3lY3bYDAmYoangGmp0aZEM4CDA=="}],"memo":""},"metadata":{"timestamp":"1760837665"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"LuLpQWDQuNiqSFnMCH7eEfodeRecoXU0tp9P0qLAIwNLCgGEUepCPDffYiskeLj+XxR8VOl4o/f57QF5YKyIAA=="}],"memo":""},"metadata":{"timestamp":"1760923889"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"84F03cQ3IXT1mtfvsL5EFHoK9lpoLDhSszzh+Lf4jy55TVW9xDoEUcr0iONCLLx3G2HV5yUPGRKrQNO2iAFoCg=="}],"memo":""},"metadata":{"timestamp":"1760923894"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923900_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923900_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"QYDmi4Yh8dlQNhjsYIKlMolDqi1CFd2mSYIo6J0M8Q4YiVFy2r/TQpMExRt/LHqU25iZaOcfPoGppUdKwpBnCg=="}],"memo":""},"metadata":{"timestamp":"1760923899"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923900_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923900_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"oD2u7a1uiLWtZ3qTq9MbRmgWCcIG0keFGqYTHpr58hhOwRtQvt4T6Cnp6X926MxBJ2pPJE6REnXVLVTpN3kRAg=="}],"memo":""},"metadata":{"timestamp":"1760923899"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923900_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923900_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"NXiauSv/W1Rrg3iXFiW0Z+arxfRGbAwq7RE2V/cbYDIIF+BXl8NFwhxFnqjd93wxuufS5U54I514nJCtpOhdBQ=="}],"memo":""},"metadata":{"timestamp":"1760923899"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923900_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923900_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"4c5uRW+GRM8LJDav0zeDe8yWF3gBVpyIspdJFMNa51PJXAbAY9NPJyjrBfswPPbLXQJi4gMOSTBTmCfDPYS9AQ=="}],"memo":""},"metadata":{"timestamp":"1760923899"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923900_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923900_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"5BglUNrbXbxwDCHzo/H81B6ub1kOg5pWVzag7eH6kvdrZj+DbtpXQUAYvkPE5zBOx3iiRDzT1b0Um5pXYAGRDg=="}],"memo":""},"metadata":{"timestamp":"1760923899"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923900_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923900_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"k8GPXAWoYPzbn1tfm6TOLbyPqj8lGiUH3pY2bxXddPdiTEEyJwvmWknyQFSQmnheZkm8AgH6IGeNFC0tcw+RCQ=="}],"memo":""},"metadata":{"timestamp":"1760923899"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923900_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923900_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"qReSW6fwSwVa3jH9K7i/+cqnqtPwgP9tb/W5Yg/RjCF2EPg00x6D/GEPXQgGzIiWRKsTDLSBz5yBK05NLYKqBw=="}],"memo":""},"metadata":{"timestamp":"1760923899"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923900_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923900_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"XdSmYkjV7pRykAkRXsKBuiOLxedq1TK+69+XhsXCg5YlFzFglrWkTcZ4C8H5404sZkqUfG7pt2hMOyQTe2frBg=="}],"memo":""},"metadata":{"timestamp":"1760923899"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923900_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923900_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ph3SZMmRNyXjyLPVxFrv132G870NGJTvRCwd2G18Zj8zx9u9DJRZVPBGneByHdrGzFpWKLFYtia+u4Hbrz8XBw=="}],"memo":""},"metadata":{"timestamp":"1760923899"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923900_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923900_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"aOyhTNUUJ3xp5Pq6aPzXbWFGG2s5bwe4i5tWrniSWtTFkGJ5E8pyaUxcmsM6jO4GWBZ9n9PlkK78mYmfsX4OBw=="}],"memo":""},"metadata":{"timestamp":"1760923899"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3PIEn1CnQ5rWfFPmTQDQouznT8Bn+IOf+WNpe/CQUEx1WkbyTL9rKRQPLH2JgJfvBKZZecaGL1vqbOYI1y8NAg=="}],"memo":""},"metadata":{"timestamp":"1760923975"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l/melcXkMbve2kw48m8kcwnIKY/OYVowcRJP7iSt64ePjeuuU9mYMNo6raAlQl5DmMw9565JJK9TF/MF4PHlAg=="}],"memo":""},"metadata":{"timestamp":"1760923980"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923985_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923985_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nuECJUnAgKrXobo6PCb8xvU6wkaWl/K0MmSelHdid2cJCMR35+zVWgBD2YxC1HW4jituzA1f17aViYWIc/QQCA=="}],"memo":""},"metadata":{"timestamp":"1760923985"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923985_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923985_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"X2+27tOphK+lrZVG3bGF7yQnxrKwzkuRjUKZTHuHu4u//wlI7eZy7zFJyBJkDNmtr4VYZiSNZURcFXaaLE5dBg=="}],"memo":""},"metadata":{"timestamp":"1760923985"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923985_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923985_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"xWCPt+yGqRUe2/P5Rz9nAG3699WoMeQW5PMeS4JiLTJXlxTXJqQ22k9HRRudHrlMTuaFCKQk574t7dTsy2oaDA=="}],"memo":""},"metadata":{"timestamp":"1760923985"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923985_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923985_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"LwocFqmC61WRDzmre0NBKtdDZGAd7OWojPpfDBh8i7quY+DLJjtjK1yNdF/HPpxMZyqYHc7LCVVVSeTKR8hdAg=="}],"memo":""},"metadata":{"timestamp":"1760923985"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923985_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923985_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"likAmpIHGj4o6SMCS2H7Idzk4SIjGKI+X8mGPP9DLjkNI2wECMFB5xMWbFrmPOzRhBE2or2HRXO6vTaRnz0sBg=="}],"memo":""},"metadata":{"timestamp":"1760923985"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923985_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923985_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"p5JzTVQkl/RPWxiozhBXzIcNdXuS8JwSf7AaIVFA707Cuw/quxaS/VzWOyGWOIonCv+lYC+XLHrlevhOyZ1iCA=="}],"memo":""},"metadata":{"timestamp":"1760923985"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923985_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923985_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"n1EyOXnTzA3zC2M67HVszF/yMGcShAJpqjPv4RxU7xkXfLpbVqdlGAhFy/VMPjOxIlIz71W5ckDAAIq+pffOCQ=="}],"memo":""},"metadata":{"timestamp":"1760923985"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923985_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923985_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"QgHiot2w2vZSVcfOKth+vhZM08kXT6aSknc27nnZgRdY1vgJ88+lMUcD9NVF+CbPFfbXSo1o7hdSYaF+MnLkAw=="}],"memo":""},"metadata":{"timestamp":"1760923985"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923985_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1760923985_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/EI5eFkrmI1jl2nyCOXiaCZFLCrnWiA8LjXI1MwxNjzsILhOgqjAjCOaOzaX9ute5dNOKdImxgfStX/IRWesBg=="}],"memo":""},"metadata":{"timestamp":"1760923985"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923985_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1760923985_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GOjgt1cDw74RuQJgpW4te/qXNTMmKo3leMIGCmsF9jO5Sx+r5G5kATVuh9j7i/jle45XIrlUGqnOxphooMSwBw=="}],"memo":""},"metadata":{"timestamp":"1760923985"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760924067","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760924067\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598838","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"g/l8Ekc0d7EZJS+D6S2h0RS8xZ0pZp7vJMZNaRim8Lkt9J7RH3XFHja9+y+25m7PemnV/BJdbmpAmlBnHpHhDA=="}],"memo":""},"metadata":{"timestamp":"1760924065"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760924067","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kx3hoWrefrA9NPk1c3gargSE2hUkSyVX0MhrKPBdne7S02fxAJZ5+skvgHEHNC822NggUALFq0/3nRFFI5vjAA=="}],"memo":""},"metadata":{"timestamp":"1760924070"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760924067","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"fhiU9ChLPkx9xjBUm6tu9vg504meXlpK4gr+u8tqu3BV3Ue1IalcXRYwO31uKlHguz5iTcB+jaDz8e+tkEIbBQ=="}],"memo":""},"metadata":{"timestamp":"1760924070"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760924067","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"NJyjcybFquOEs4L1SXcDincs5SOhm0LdrjGRE6Yc+Cx4iy9Pr3Kp5EJzdyMh+lpMRPWQNp0Y/DDxfu6npKONCw=="}],"memo":""},"metadata":{"timestamp":"1760924070"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760924067","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"aOEm0uAsjmWS2lUwvmP9xeeZYSrbb+SxV+ASxozaYL4xfzEgn54eEohGdPE22fFrTH3GbijVfDHhUgmXSGVwAA=="}],"memo":""},"metadata":{"timestamp":"1760924070"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760924067","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"IfP2tCT3Z87CtoK8sYFwCp3Zm8Rhcm2f65pm/An+oNX5dPAgiC8FRxdAlEfQsev1MYeMRweqWhyri80IzA22Cw=="}],"memo":""},"metadata":{"timestamp":"1760924070"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760924067","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"uOyFC2R/UNkzUUNP0ApXhInX6EpyXyjFZB7K375L8jk0NWsvY/RQERb68icK82FuLEqJlr3DIDKEU3pHnb+FAw=="}],"memo":""},"metadata":{"timestamp":"1760924070"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760924067","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/WR/Fbs7ptgSQeu7Ol6cC405WsVSLb2O0uDl5b4I6JqYIfvL1k+Cum076y/bFmfIf6ScrBa5ZVa1E0WAnOYPAw=="}],"memo":""},"metadata":{"timestamp":"1760924070"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760924067","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"lueUroZ1mhUnruhkuhtCumskwXdDTpp+C9nkAia+0wIwk+8gHiDAVr5rmE7d52nkMgwJ5dtvnxRdn70EYImeCg=="}],"memo":""},"metadata":{"timestamp":"1760924070"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760924067","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"KQe5Pmlac2/bKMo7mnVH314koX+T3fA1EIF1vAAELxxhejApLtCWUtLuf9dmlVctHFhX8oDsJBvuWkuRaKsECg=="}],"memo":""},"metadata":{"timestamp":"1760924070"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1760924067","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"aH+KAkjilCTxhZPf+IkX3juqIUVkVr9nWaarlY3U8IDg5M2zg9zisr3SYAGz1duemsJmgzWQzEdRIwAbbdBIDA=="}],"memo":""},"metadata":{"timestamp":"1760924070"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g1m6y3zt3cu8rka86cczw4vtcp7fvu4z46tj0wqj","amount":"10000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"MvAPNwdofTtsPj29B1dgM6XF+WFRHeLZybTGEMAIZI9yemHv5DCXcIBKMI/O23hwvp5uSF0TUUctNH9sEKwkBQ=="}],"memo":""},"metadata":{"timestamp":"1760951547"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g13kytw9mpyutwmyg5eq7arqxqcszfl6uq4p89zg","send":"","max_deposit":"","pkg_path":"gno.land/r/demo/counter","func":"Increment"}],"fee":{"gas_wanted":"144685","gas_fee":"145ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"09zFgRvQpaA5FtofaCiuvSlp2s2DTqR4+X2fTcekHTmjCLbOmrMDUxjGO8FuaP5BtL373RWRcBEH5DwGn1DWBA=="}],"memo":""},"metadata":{"timestamp":"1760972574"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g13kytw9mpyutwmyg5eq7arqxqcszfl6uq4p89zg","send":"","max_deposit":"","pkg_path":"gno.land/r/demo/counter","func":"Increment"}],"fee":{"gas_wanted":"147549","gas_fee":"148ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ZLvpzAiFNspe/F+QPpRJKFdF/J8MP60BB7aSzoD42JsgedW4m32Wsde+6RwMixfXw1VIylhNJRdSP2Zp9hloDA=="}],"memo":""},"metadata":{"timestamp":"1760972584"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g13kytw9mpyutwmyg5eq7arqxqcszfl6uq4p89zg","send":"","max_deposit":"","pkg_path":"gno.land/r/demo/counter","func":"Increment"}],"fee":{"gas_wanted":"147549","gas_fee":"148ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ZLvpzAiFNspe/F+QPpRJKFdF/J8MP60BB7aSzoD42JsgedW4m32Wsde+6RwMixfXw1VIylhNJRdSP2Zp9hloDA=="}],"memo":""},"metadata":{"timestamp":"1760973640"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1mx4pum9976th863jgry4sdjzfwu03qan5w2v9j","amount":"1000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"mM/JP7+hoONlIxIyFs4M29qAixalW232JYyKnv5HvhTDqrWAEXpT8EHMEGPtC6YFIe2UgG+eot0ocnlrjGkYDg=="}],"memo":""},"metadata":{"timestamp":"1760993377"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1761009751"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1761009776"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1761009791"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"LuLpQWDQuNiqSFnMCH7eEfodeRecoXU0tp9P0qLAIwNLCgGEUepCPDffYiskeLj+XxR8VOl4o/f57QF5YKyIAA=="}],"memo":""},"metadata":{"timestamp":"1761010268"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"84F03cQ3IXT1mtfvsL5EFHoK9lpoLDhSszzh+Lf4jy55TVW9xDoEUcr0iONCLLx3G2HV5yUPGRKrQNO2iAFoCg=="}],"memo":""},"metadata":{"timestamp":"1761010273"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010279_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010279_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"OMQaWjtbahYHcT9OizMVfy/oG8X2yfeAknfynJldjmXyvAgr84zycN5urJsjE9py3wl4ajaP63aTg/xoX2WXCg=="}],"memo":""},"metadata":{"timestamp":"1761010278"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010279_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010279_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/Rey9ZUiNVqF6dAI0UqmMqBY1ttQs8p1t7ErqstZJ39aRGAxeWaPq7/agFPL5hje2mla7BfzWNtVoEJaYhtwDQ=="}],"memo":""},"metadata":{"timestamp":"1761010278"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010279_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010279_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"YZSp4k62Koyl5zmlGWSB9KB9f2zQYBeS0aoyJEpu6Vbqen3G5++YowNH6O0AbqRgBrQCl9PiEig5ImldVYCyBg=="}],"memo":""},"metadata":{"timestamp":"1761010278"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010279_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010279_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GnHhXigD53htHdx3YFbOGaVeCV995rzkjk7o6zvXqMFZAADZkeWp1ALt70HyRlSI87ZBlZr10xPkJUGjf3E8CQ=="}],"memo":""},"metadata":{"timestamp":"1761010278"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010279_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010279_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"fVcTslYxgdPvEJyXMyS7ETiU0KiWCWl2Sor4eNwx70XGKjtLRVhheEVJtlgeLUGmAd61e2d2zFiSTJAgYTTjBA=="}],"memo":""},"metadata":{"timestamp":"1761010278"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010279_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010279_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"8ZOhJ7TRCkgQ9q1F1wT5ST7nDCNhhq4p10etPjcpQcmVmEZBht4pmp3bvxcNGFplRKUvFeFkUg8YhIp+IbLCAg=="}],"memo":""},"metadata":{"timestamp":"1761010278"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010279_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010279_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"VJyYFkZD8yzdAdnawcqkusfE1OUHmlw58tNN4f5d5/f3ZfH/+ovNtMnn2PrzSQkAX5+ULwZKDbLitEbG5z1jCg=="}],"memo":""},"metadata":{"timestamp":"1761010278"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010279_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010279_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l6xsRhRH4qDc5GoxTzGbusY0BJKr6EimllH+e4ph1h98RocG2BWeUlrgzC1LB5eYU0fvfT5yw7n5/ibSMv/5BA=="}],"memo":""},"metadata":{"timestamp":"1761010278"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010279_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010279_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"w+exdjV57Icbai+OIAhVWKD1yqfJncBMrjuDB5hZsWGInzmCNd/ymh+tOWJ+jPPMxFMvQ5NZ111R5W8e23g+BA=="}],"memo":""},"metadata":{"timestamp":"1761010278"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010279_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010279_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"oWmIeqc2ZM5iE5vRmWSWQvaz1yoA9Wd589UiheoM5UHVjbnuHVFjGyYcoWOBWInG5YvTEWqoSJt2p/qqMmoZBg=="}],"memo":""},"metadata":{"timestamp":"1761010278"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3PIEn1CnQ5rWfFPmTQDQouznT8Bn+IOf+WNpe/CQUEx1WkbyTL9rKRQPLH2JgJfvBKZZecaGL1vqbOYI1y8NAg=="}],"memo":""},"metadata":{"timestamp":"1761010369"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l/melcXkMbve2kw48m8kcwnIKY/OYVowcRJP7iSt64ePjeuuU9mYMNo6raAlQl5DmMw9565JJK9TF/MF4PHlAg=="}],"memo":""},"metadata":{"timestamp":"1761010374"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010379_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010379_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"YHm1D7V1J8S5FQy7SOcJkoBMgnxVMWYUziSv0Ji6nqNBECwwpXo6rgnfvF4a71A5sr0SGdpCCJQwDKYsEwB7BA=="}],"memo":""},"metadata":{"timestamp":"1761010379"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010379_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010379_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"9Jv2qjDODxUDXshZmjF0Thxs7nYGfL1rRhs5k4G5gdcsLOH1bWmflt1t/wHWN76lB4a9/WUb729zFf5MJ2WRAw=="}],"memo":""},"metadata":{"timestamp":"1761010379"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010379_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010379_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"xBAlQjL6SN33MxtzVr3x24CxcFL1ytb8yOGMBHC3W4xzTdtkI1tPqhKTXiN9QymBUtY29FYln887DKk6eap7AA=="}],"memo":""},"metadata":{"timestamp":"1761010379"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010379_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010379_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"vEvjTW6T/YX+zqoRVEgCYFmXaCKhJWYCtxCuwFja0jdyCFms94zS24k4Oo5B5BbzU5dxmJyLrD4C2dXIntCnBQ=="}],"memo":""},"metadata":{"timestamp":"1761010379"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010379_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010379_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"jQ00OUtVaLR9kj+nKRlOaAL/4sl33recuGz8/JkZSpf9g02m5JLkCqb+PhQW+e816DXxnSaMut/24AWD20rxDw=="}],"memo":""},"metadata":{"timestamp":"1761010379"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010379_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010379_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"eKj2p/mNMZ75o95aUjd03uxcSRGWkYg0T0+yG2ojdOAbFXLo3nrA428L6O/Rc2uNOPinBVqSx52uHmPoAmo0Dw=="}],"memo":""},"metadata":{"timestamp":"1761010379"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010379_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010379_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"N0G9aIllEk1oH/U8NAqRAAU/4oICuYoLO60EcUQ7o2xDHOb1btBEgFGiVB8EiIQY0dfFrx2PTgDI0CrkKZ4WBw=="}],"memo":""},"metadata":{"timestamp":"1761010379"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010379_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010379_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ai8WAV1yUhquuGB/6APJh3X6osQdU5jyIdtbWBnL9BeeiNjzIxf+jEsLvXtcdxf4uh8bJ9qQF/6YM+Q2lm1HCA=="}],"memo":""},"metadata":{"timestamp":"1761010379"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010379_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761010379_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"n19u+FSzsh9zYwSg7ZSo/1j1y4jV8W5lfJRhaH60ksXE9pFN5QZT4IEQRcwswt8in2sXqF2sXuFDoPYaCkfmCw=="}],"memo":""},"metadata":{"timestamp":"1761010379"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010379_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761010379_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"0Boy54RmrYsw09oNiY1+e8uVkqkpY5oN1LwghtnbbRWCOzFgAbgAsNW38ib5nzAnAEmiMYpGJcMGe5kIQK9nCA=="}],"memo":""},"metadata":{"timestamp":"1761010379"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761010481","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761010481\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598838","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"C+DBya8dsMeLa7Z9jSBrvCkQUaHhO7rVS6pOgYsn+u4CH4gkFbbOqjV+cS39mCb/Kb3WcUiGrKvjmo9OG0x+Dg=="}],"memo":""},"metadata":{"timestamp":"1761010480"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761010481","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ii3ElvK2nA+dplr7LpZfmdMDhsocGbNWMDD5IiEDBpQHjsx8FIyLeTydCIJVXp8tHQxUXfUFP14d9r7NyjUKCg=="}],"memo":""},"metadata":{"timestamp":"1761010485"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761010481","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ubrqd1pS2LD442op+74SVl5qBNPfAGpuwE9c3exHy89+uM1Bte42yXYKhhXOPGy9kW/kOuMWBDokAlLsPNWKDw=="}],"memo":""},"metadata":{"timestamp":"1761010485"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761010481","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"bCsRVzaH6yMdXBXx8SI3vFwb6Qt54Yq0jnUlzwqMcnLExtf+yO56gVF/4ZB9rCovjZDvLRozebXoOpi3/uA8Bg=="}],"memo":""},"metadata":{"timestamp":"1761010485"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761010481","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"NJc9SuV0JJI/VvtE03XAvMOQtOhiWNAfgMh/uHtX28AMPtxH1NF3i5xPSJHz2ZW6XoIygPD3VVytYFhrV0T+BA=="}],"memo":""},"metadata":{"timestamp":"1761010485"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761010481","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"p3234mtjz5h5dfIKl8lugZdxzefRqwqjTRU/WFCfYKfwrxuRPEPV7A73uY40EiJMgdbcBIlfO6/opEE2RPHTAg=="}],"memo":""},"metadata":{"timestamp":"1761010485"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761010481","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"uXJs8D8wffUwSe5/cyH9Kbpe3xqRVEqX+RzaYdaP7a3F7NM7WmV4R0RjwPTxc6QV/6vZB06vlbLnSbNNwuj2DQ=="}],"memo":""},"metadata":{"timestamp":"1761010485"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761010481","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Cuk6hcpI7gaAmaHUe0AwPD3DJlSRi2MXXptsclT6rygIgwFK75twTdLLaMqqlG1rfotycQXp17aact9YEOnMCg=="}],"memo":""},"metadata":{"timestamp":"1761010485"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761010481","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"YAT1Odmjo5KHxv3XXTaC5zUERkdu7DxdfONSr547zpIq9g7WEYXgG4VRevTFHbt0w+q+EQeBCRcmBXHLOVv/Dg=="}],"memo":""},"metadata":{"timestamp":"1761010485"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761010481","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"6dPY4QvjIYQKYm9j3omz2hAK6t9Gdcxaor25ugORslaiJQVhbDBfZ5PuW5odaFCRzfCPpmZLumkX5GfTjJiODw=="}],"memo":""},"metadata":{"timestamp":"1761010485"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761010481","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/g5ziBHp+hKkcmJ/WhelniN4soWwf6LCHvnC23+Flt9POhm+mNuYntksQgXK8UdSIgDwFlegCY/SbJToOcGbAg=="}],"memo":""},"metadata":{"timestamp":"1761010485"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1761013952"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1761014033"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19vdcfp0pal5tcyz0ys4jtjhgkt9hsfrah8vrw2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3LtrIfvICWUL2gOzYe1YYLVlUqBraZjibF0E1hXvRzSYjg7R0dpxock0LmEchNGcQofUGGQg6uUcnJq/cdKrAw=="}],"memo":""},"metadata":{"timestamp":"1761014118"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g13kytw9mpyutwmyg5eq7arqxqcszfl6uq4p89zg","send":"1000000ugnot","max_deposit":"","pkg_path":"gno.land/r/gnoland/users/v1","func":"Register","args":["vik000"]}],"fee":{"gas_wanted":"10828809","gas_fee":"10829ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"yvwDcQYBUrsXUNiWJgiAattMLp0Tt+muFyMSRxy11Rv/QxnL1bLqnHcg+kUwfFjx1mD+oZelHu/PgsAkc8fsAg=="}],"memo":""},"metadata":{"timestamp":"1761061862"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"290960ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"XsW7PHATaiDeSMyEP/jw7KqqzkIki3PPxWBoZWtWARK2Z+8gU0My32koDazYUBk9N6wWUAFYYBl4PtmGbbqIDw=="}],"memo":""},"metadata":{"timestamp":"1761096662"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"290960ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7QGgOIWIZ1j8K9nKi74Jx5L7RDfLCR7e6nu5Z1mqlFeTAj7CcY0/iFLIh/cun6pefV7KKLgvHKq+FcVXn9AiDg=="}],"memo":""},"metadata":{"timestamp":"1761096667"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096672_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096672_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"fnr22iZZSNAR1aqEg3izJJKEMH5g6EMy5YlIxj0jX9dlvI3MDAriklh/nZpquHJm6dKpSlbminNV2NTdfxkGBQ=="}],"memo":""},"metadata":{"timestamp":"1761096672"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096672_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096672_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"uK4PTGwhmmRFXYb4/omdzzObD6dcLIH4Z5ivvfGGKC8k+XFRi1WeiBXdslVepZNvN50OjeYYAQyWjq/qbT+ZCQ=="}],"memo":""},"metadata":{"timestamp":"1761096672"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096672_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096672_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"AvAGppG0yXn76wHtQQwblyiZNsE2XcNR4GBrGtnPJ1wuwXs6FxA5RKNViHKLHDabwWyUAow0bTTQMh8s049VAQ=="}],"memo":""},"metadata":{"timestamp":"1761096672"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096672_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096672_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"490iFHrbPyazqF6YR7Cs8g8E/YsRLQSJ0gp+r7irDL0SJMkbws/EjD000raQH/hWod8wVnV9qAtu+2QA69W/Dg=="}],"memo":""},"metadata":{"timestamp":"1761096672"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096672_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096672_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"CZsRf5whMNKD8nNd/+S9lym0DUl8Nf+C1dfdUkKjrnbktY6501HZ2nplTT7W+UtYVh6KWPq48rRyJLG73lCCCg=="}],"memo":""},"metadata":{"timestamp":"1761096672"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096672_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096672_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"b8lOHhlJcqGGjng1KTWp3o6EKm9ZIB+TI2nLK+rrpjBYnZjOQws4+GRlOWjwaQlhrMzCg3TnQTHNgMFkS7d7Bg=="}],"memo":""},"metadata":{"timestamp":"1761096672"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096672_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096672_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"r8JXYc8Cx3i9fASa/5bTqR9tN8EmfI6hxfM3TyK9mTxrafle3xZVvyWEEp1hYYtxKFSs+vDBdTrGXBfiIugBCw=="}],"memo":""},"metadata":{"timestamp":"1761096672"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096672_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096672_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"N1jPrGKolLiEpwqoEZ/mwAt59GTOwIIe8HiEI2UELWWG/alcBNDIxsN6Yn4RXsrjpot/x3Smil1/GgAX1EUQBA=="}],"memo":""},"metadata":{"timestamp":"1761096672"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096672_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096672_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"I965tIva2Y726vNli17ZoOuq1g0NSabAHlHNbtW32NVUButKrV1yKcPf3T4oR8csu6hDJjdyhcTt+8mBEOToDg=="}],"memo":""},"metadata":{"timestamp":"1761096672"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096672_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096672_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"0opspC3V+JQbWZYVEq03VKFB3l5sPdF/BTlmZwSeGfCFhnWOOaAGT+kpxRaWTzI1vPB2TDtKtatuMSO1DLnKAg=="}],"memo":""},"metadata":{"timestamp":"1761096672"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nh1hC8BDVB4nuyMnHZrOIdnkN9cj4wIWD879E/PMfUt2ldwvoQKNmSCXezTVJ0Dh28Vrg5HC7A74GhtMKFs9Aw=="}],"memo":""},"metadata":{"timestamp":"1761096762"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"obSxxgIRKpLzLO+6Rey6ugd4fqQIdw8bRE7RheB0Iu7EIimndBZF6WZ5lIRYluEjzll81EVxlcKeagZpp/2MAQ=="}],"memo":""},"metadata":{"timestamp":"1761096767"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096772_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096772_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"dzQegbYkwBr4uiffSv4diMMHdP6gO5rvQCBhMQRNs85qAxHtQ7mRlXIS4BDLth9DpfjX1Q0I8EXHNHmxMnLxCQ=="}],"memo":""},"metadata":{"timestamp":"1761096772"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096772_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096772_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"fzHWbaQkzDCKy+7mrtaLHzCcjPBZySgYxVZXXgV32boWnig94MMFx1UpA/MY0re0I9bC5UuhLkzoqxmRy0XjBQ=="}],"memo":""},"metadata":{"timestamp":"1761096772"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096772_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096772_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GbdxdMIqPUwqSWkY5DmMGDq0NVD8Jp/B04aekGJKBsZ0qy+8AlhzjAu14nvL9pJokiiqIvqhD1/LgbcWMWM/Ag=="}],"memo":""},"metadata":{"timestamp":"1761096772"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096772_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096772_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"elwhQQ4KrIWAv9yZgIimzOtXAlZ1VzVuoLGeQONmf5XgVsjnqcmBrcoE0Gmj3wjgWxCOz0rtZI/tb+456SnWBA=="}],"memo":""},"metadata":{"timestamp":"1761096772"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096772_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096772_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kQUnQghvIzqeiTvX7Colt7JuIt8++Rx+FdY9DPZO+a7DIyMIgrxNSQo38L1Ks6AMSQKz6ucBkhiBy9WsrXpkBQ=="}],"memo":""},"metadata":{"timestamp":"1761096772"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096772_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096772_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"4j26xEAjmpYqwIey1i8Jw5NhQSCagxKcytDCUhq9x++mqpgSHC7ohLtFDV0jq/vEjeTWtrbAivPYK10qTGAQAQ=="}],"memo":""},"metadata":{"timestamp":"1761096772"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096772_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096772_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WYGm/uSIVzmVWwH4mpHG+46NK4L4SIvBjWO5+/POwGFW+KJgz/ArAiwNKnvdchPK0SwLfBA82SmtRSPRqQTzCA=="}],"memo":""},"metadata":{"timestamp":"1761096772"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096772_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096772_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Lwf0r4BClMATqTOkNE15CGbfxbOmgdY890TJnD5G5sAzvETU7sOAFNgztA/IwUuPaXlYMjs8L1Th1unh0yZSCg=="}],"memo":""},"metadata":{"timestamp":"1761096772"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096772_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761096772_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"xyrykFnEtmuWfTUHjTjMLBCJI7qPJlCpVzqLhkLw6ge85MVW1B6SUF2hFye7t1JUSCiMO8YU4oKX9KGx6DwdCg=="}],"memo":""},"metadata":{"timestamp":"1761096772"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096772_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761096772_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"6UcYw8BGA6QWKADd7hAOB90HxuTSNJzbg/3VBboqzzQLo9SoNnfm1fbAub+/PwaN0sV4gy0hpFrMno16oxFpDQ=="}],"memo":""},"metadata":{"timestamp":"1761096772"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761096865","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761096865\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598838","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"q47rTOwL2iiGhQDszPNgjNYRNxyimduunL/v+TpZckLH5X6yUT5vgdSvzUANQgvSETfTuRjCnHmCOmnNqkkNDA=="}],"memo":""},"metadata":{"timestamp":"1761096863"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761096865","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Jogmh1aWKC07htJeyNI+spGGOg45D+WGnIbLsj1C+czE74/IizCFTc/ZXtglErQH4Idhx5fMU2AK+P+F/yLOBQ=="}],"memo":""},"metadata":{"timestamp":"1761096868"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761096865","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"LRyUFk7dJNHRG/5hW/042+8f8pmRxkHVWzXIk5VkmxTtdQ3v1sLaBbNAXL0epNTzbNy1/klzd8PaoGqzO2GAAw=="}],"memo":""},"metadata":{"timestamp":"1761096868"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761096865","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"0U1X8YEyM0ybPAgxbfzpYy/av/elnx+owU48kem0pw4nFILTF/R+oLX3cHs+5AfrPogGS4F2DgR4LZ8jjq9SDg=="}],"memo":""},"metadata":{"timestamp":"1761096868"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761096865","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"SBcLmy3W1Q2WdbMhn3yHKmFtbKklylTfbW6Zj/KMI6IKcUU3d7otjvRn1X15ErkV1KGsVUWC77Dut+tM+5m7DQ=="}],"memo":""},"metadata":{"timestamp":"1761096868"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761096865","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Cl/jHopy53zvorS/kJ7xlyknDhlUhfiS1NA1Ll3LtISu2AvSlNBYxMkUU60/XPIh/rqfL0GL7e2I++IXTN/PBg=="}],"memo":""},"metadata":{"timestamp":"1761096868"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761096865","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ipJBjNRHIAMBYetT0xMGU7O1YNDuQCA9IbQHHwT7mxvWtGfe9YdaONM+f5fSiEnMQoJZRaJAsuNvFizH6yv6Bg=="}],"memo":""},"metadata":{"timestamp":"1761096868"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761096865","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"sRqJ/22GO+Pqsv2uxqGPViYZ+sDf17WH8aIM/+Sm+XPq+PMndlM7yVxj5s5teInahDl+kZezTZ7h4c+VW5MaAg=="}],"memo":""},"metadata":{"timestamp":"1761096868"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761096865","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"o96hbkNZOJDwhCTv/xd3CupfHYRBsK+1H+JAEzDrcDGpqe21n5m2N9gbYw7Psra/Au6xLKLvJIcMCcxQBiYbBw=="}],"memo":""},"metadata":{"timestamp":"1761096868"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761096865","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ijbIyMtrGycRpYylgFrVPCQNr6WPIFjwMNZW5HyUt5a5ehKJM12mRph3tGcA6hIbSO6RNDZjRg+eRFnuQtBjCA=="}],"memo":""},"metadata":{"timestamp":"1761096868"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761096865","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"wW4ciIGJC9qALAHrodWzbP3+/8WPjw5bOnpQpcc4msLkY5o3NORn83+nq+kB1MtajIY9XiEVGppX2LG/m+BbAw=="}],"memo":""},"metadata":{"timestamp":"1761096868"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19cv3ly67zrhk606n2235rdj624tmjxnshd2ntq","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"QJy9bkDKoAqmaWQFnbqFwj3RbzHXh5dUxE3LUkDNbZ+flx4H/9m1F6/ZhFtjBdvPWwAza79HUU3UMKE9IlY2DA=="}],"memo":""},"metadata":{"timestamp":"1761108718"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1jwx7myd8cvtsjcxp8wx9670608rcxrsnq8502a","amount":"1000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"8fq0WX5blt0beJM18IQtQ7fQQGsfw6wnLD7cj/w99F6nvix2ejrDUmvS5msiaznlRFxszDTI9RSZHLOH986eCg=="}],"memo":""},"metadata":{"timestamp":"1761110186"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g1jwx7myd8cvtsjcxp8wx9670608rcxrsnq8502a","amount":"10000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"vFcu5a0i04MVGJEdOZewNQKfGnrkPY4BBYyiM60qjEe226jlCPJCvJF+7wHXPnbLrg7eKoK4+xlYFxg5zg8bAQ=="}],"memo":""},"metadata":{"timestamp":"1761111306"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g13kytw9mpyutwmyg5eq7arqxqcszfl6uq4p89zg","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"k78w9NszrzHzl1B6bb7Sjcm9qqfOhnqfOHqle9zagF4r2FrgKIB5KumJVWQYt8zJixtfqIx6kh8qJL7+Ex2dBA=="}],"memo":""},"metadata":{"timestamp":"1761120303"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1z360harzpshhdnlrdgj5ljkx2aeckzavkyl9g0","amount":"1000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"FpIcme6OTGaDwNDBDhi4ucafbs22+YYXo3sqSAOu25HcKdWNcxJsSM2H6FNuwP+yIWOlstJLu4scfH8RpgmqDw=="}],"memo":""},"metadata":{"timestamp":"1761124288"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"290880ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WNIXXzW8vkvxSMYXCK+sIvDFYrQcJ4nMi8ZLqs9qbJh7Zxi+LwzRWMgUGI+Yu2x9Tsvl5FBUXHbshkLCwplECA=="}],"memo":""},"metadata":{"timestamp":"1761183070"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"290880ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"uuvVfqKKxYRaw5Q9G/UA9GCtLmvhEHUH7u+cRN0xpMp4OfOSsgBvmUfDKwzp2OlSYceqwLJmmEp9vbmh8mn1Dw=="}],"memo":""},"metadata":{"timestamp":"1761183075"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183081_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183081_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"K0+dX++MkVPwJ1E7T/ZtX8i53SfPvbNPBnc1oM5mPee/lpLNm9WHfwgwP+NlRo+Cxg28I+/vX1wEpOJ1FpF5Dw=="}],"memo":""},"metadata":{"timestamp":"1761183080"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183081_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183081_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"gMxXBLFSxpF4gxEn5cW3XaszgHZgAWYP/EEfhUqH1xf67q8DrxJ+JPXoAKDtzQTBQvBWdnmQ+uePIS+OTPHWDQ=="}],"memo":""},"metadata":{"timestamp":"1761183080"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183081_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183081_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"QTixRZO1omKY7Or/nZx//epvV5DTa+u06OarIVvfeipsluEd89Uu0u5wAU9+CL4HagGnZOsqA3PgikQHqr3aBg=="}],"memo":""},"metadata":{"timestamp":"1761183080"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183081_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183081_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"hneoECkZsdlwJw6vGpXWe+DmmBSyEfItZtYl3+auX8MvnyO4/n1BrcqKACbpKaoMt0OXVE8B9oTa/k212SouBw=="}],"memo":""},"metadata":{"timestamp":"1761183080"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183081_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183081_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Vi/douM/434aKErKarWpfJ7e0BXslNJP8/hmjnoyuJA3RxluvB5bDxMJWMJ0E1BYJjI21JxTaSJiV1hO0bjhBQ=="}],"memo":""},"metadata":{"timestamp":"1761183080"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183081_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183081_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"oO4e7ebTiHsiR6qaRxXtn8Y8XHofRa8ZPO9akkdNy44RWgQipbKNQXH712GRIARjYKjaIiBvV5O2tGOoVIjoAA=="}],"memo":""},"metadata":{"timestamp":"1761183080"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183081_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183081_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GJvW0YqNmvd7hn1xk3qgqlnYG9SUJQ2H6hZ0LdUKFFA/dHimeJdKQBxBJpehp/mc9wyP9Grj3shM1EJSJFYBDA=="}],"memo":""},"metadata":{"timestamp":"1761183080"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183081_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183081_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"8RH0ZXi/z2NRvgAnE7hIlt7KFlfKAKkI88rwt4nV1+MZ/WkaE2ddY/9MkUXS6VFmrqH0asLeky1NhjkJFpNbBQ=="}],"memo":""},"metadata":{"timestamp":"1761183080"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183081_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183081_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"QvK3DpbOL3L33Q5CumMwNTvf2UIn82VUqIz5fT3IJjZO6YHG+cHQgEkWzQhYklmC1nArZN6X+J84hOslXJynDg=="}],"memo":""},"metadata":{"timestamp":"1761183080"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183081_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183081_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478348","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"E3ARBryW10aHcEVyoFjQSyPYK/8xUyJZdQT5qao9IRqM/oZ6F4xMN6s91JBqMWtviUPKS2FFlthcvdEKLAtjAA=="}],"memo":""},"metadata":{"timestamp":"1761183080"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nh1hC8BDVB4nuyMnHZrOIdnkN9cj4wIWD879E/PMfUt2ldwvoQKNmSCXezTVJ0Dh28Vrg5HC7A74GhtMKFs9Aw=="}],"memo":""},"metadata":{"timestamp":"1761183176"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"obSxxgIRKpLzLO+6Rey6ugd4fqQIdw8bRE7RheB0Iu7EIimndBZF6WZ5lIRYluEjzll81EVxlcKeagZpp/2MAQ=="}],"memo":""},"metadata":{"timestamp":"1761183181"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183186_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183186_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"gh9EA180PNJxiTA5Sf/jQyHlXHHM4gMvC/RMKTj3KuCZRD9H0+xORr3VFaHOniSaLp5n0L4k8Z+kyseY9okBBA=="}],"memo":""},"metadata":{"timestamp":"1761183186"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183186_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183186_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"JWH5KwRRuKynQemPQbA39h4DBvH1Ss3gUMHhqFFZk8iyYPD5drsbe6bzYM+4w1D3K24hncUcxhh0tiI0Pp8BCw=="}],"memo":""},"metadata":{"timestamp":"1761183186"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183186_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183186_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"adJ3gEJj93yFRvrELUnfvFSa6KRrJPghhQpmLgvF08oRJng0RMY2LZsygAXEqCepeC7bVK0zIfv9tPq2VMexDA=="}],"memo":""},"metadata":{"timestamp":"1761183186"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183186_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183186_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"+cgvSIHD69Ih1eBSmz57FLP/8a8USy2kKthpYXr/tJrO1vPhuF0k16cPwtCGCNrCWCagPCBJ6CARaSNX/z43AA=="}],"memo":""},"metadata":{"timestamp":"1761183186"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183186_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183186_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"6xSWBfgtLRSSF2TAJq7m12PXxNMi8FmbJDLfVmT+2La70wDFKcRkA4PHT8o1aO73bgNTiBUQgmy+5ZftiA8nAA=="}],"memo":""},"metadata":{"timestamp":"1761183186"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183186_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183186_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/7CNh36DTCEibGljHiJyj0U7F3sOsW5zjEWrxswYs3NFiuNiqiKUSIUqxYcuQ6htTDEJKRHvMxF1auA/nog7Cw=="}],"memo":""},"metadata":{"timestamp":"1761183186"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183186_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183186_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"DWGEN8ngoIQXqVmiLy/vE4OA04QMr5C4AMzELMryJfNuIYAoPHiW2J5psJBN3DA0DUz16FEn4Dom3s4BKM9YDQ=="}],"memo":""},"metadata":{"timestamp":"1761183186"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183186_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183186_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"8aLXx7/HzfECsPG42RY2Es0llronJDIUYcQuhtVY25KsbCEvI2gXr9yiLdGpAfW1mj0x3AMmOVLxnGwzJVXzCQ=="}],"memo":""},"metadata":{"timestamp":"1761183186"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183186_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761183186_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"TdL84qXg2FU+M1ZRODnUi4qxIMx4k+kpID4Thf6JWZLWuWvIkTlBjqesFHjMeUnJ5XmgyNcgqCXX34XKqEkpAQ=="}],"memo":""},"metadata":{"timestamp":"1761183186"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183186_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761183186_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603496","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GhY3RWWZ8elj3VizF6AFan1lQS3yE1u2Kq2ZPPQEYz1r7v5eB2TzmsArgQ15lAbwmhFn/RyxFriJxJLVl2heAw=="}],"memo":""},"metadata":{"timestamp":"1761183186"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761183275","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761183275\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598830","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"b7Hu+Nn1V3nStMc93iBc1xrRd2NTyQG7Lu8Ns7M1BGn9eYSAn5dRGRRbvREG27aO9LCl4HN08isdP8ghmLutCg=="}],"memo":""},"metadata":{"timestamp":"1761183271"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761183275","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"PlK+/6GGZ7z5mZEa+Puqhl/pM2xTVTHxps3RvguajSKm86tNM7SOx9BUD19KMRKoOTF05TP/fA79LvvvYBpqBA=="}],"memo":""},"metadata":{"timestamp":"1761183276"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761183275","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"SKkYe0jYIhfbI7Xd/M38w+6EzfoijD/i9BkehJqxMnFolhg3+JBiTmJ3Cah9I+/dn9v16xadkc7LoE3KXSw9Cg=="}],"memo":""},"metadata":{"timestamp":"1761183276"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761183275","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"XgQNvvgcSlBhZ786eVe0uayO2FGZODedHn2LgSR6ZI1Z34poqKOvmRJp8bDQ/JhoQdrSw+jsKh1kr6DtB3DnAw=="}],"memo":""},"metadata":{"timestamp":"1761183276"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761183275","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"g7hf/uyz/5kVS4QqFp4fer0LlpBde27rzBFJ3jvJ1iLQ98sURAQDIYQJvhL0EPUZTwe1hTK7GjLm0t/UIuVUCg=="}],"memo":""},"metadata":{"timestamp":"1761183276"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761183275","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"MaObsEx1LcRn+o4FWulNWmY8GZy+7GR3PKKIsWHfFPBJg8tLxt+TddbNo6waY6z+M0zMpTSy6RUhIjKC8J72AA=="}],"memo":""},"metadata":{"timestamp":"1761183276"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761183275","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"qvxtrb9/CoRhvBhfxyR5/xP+AY1qnxv2p4HW3zO7pxPDXh0c0jvbIrerBUJy5HICaQpWv2Yfj+5Rkap0cr0PDg=="}],"memo":""},"metadata":{"timestamp":"1761183276"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761183275","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nRlvRPD1/osqwV/8Gp3tZshRJZaGn60CI0StevPVoDBDLlKnok20xJsHwiMDM/6WJ3CBq2zo8yTD0/o4li/fDQ=="}],"memo":""},"metadata":{"timestamp":"1761183276"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761183275","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GNyV3dXfojvPNdLYW6q7lB4emByDufw6YncyUzwnPwtWSaNt5yReBZwA3A43oim+R4sSFw4m/K0iTJfXNq7MAA=="}],"memo":""},"metadata":{"timestamp":"1761183276"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761183275","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ZDTRrhUBVtS3DqirkHau0muYWPyVzTSXCj6C2hu0YvFV/gXm+llA0EDauARnbNJxy9nfGqZ62xq6OMMz3GSnCg=="}],"memo":""},"metadata":{"timestamp":"1761183276"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761183275","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"vSxcasI5D4ms1VT1hHU6M5azNwDzlugBRQdXnsYujS0M3S5pNPVuLbp3PcTcvbd6wWo5MEpAXP86LfNsmsOtBQ=="}],"memo":""},"metadata":{"timestamp":"1761183276"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1rmk0ztuhd7txscp7jr2srfjn5vvsdw2574dzdv","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WMqP6EYPuVTTJbYp23U2OuE8K0Fn+nfKdm9oqR++yc5p0wKhP7ABIFVBsTBUjaCvVz5xDTIWl2F9nA+4lBsFCA=="}],"memo":""},"metadata":{"timestamp":"1761187307"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1rmk0ztuhd7txscp7jr2srfjn5vvsdw2574dzdv","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WMqP6EYPuVTTJbYp23U2OuE8K0Fn+nfKdm9oqR++yc5p0wKhP7ABIFVBsTBUjaCvVz5xDTIWl2F9nA+4lBsFCA=="}],"memo":""},"metadata":{"timestamp":"1761187383"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1rmk0ztuhd7txscp7jr2srfjn5vvsdw2574dzdv","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WMqP6EYPuVTTJbYp23U2OuE8K0Fn+nfKdm9oqR++yc5p0wKhP7ABIFVBsTBUjaCvVz5xDTIWl2F9nA+4lBsFCA=="}],"memo":""},"metadata":{"timestamp":"1761187418"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1rmk0ztuhd7txscp7jr2srfjn5vvsdw2574dzdv","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"WMqP6EYPuVTTJbYp23U2OuE8K0Fn+nfKdm9oqR++yc5p0wKhP7ABIFVBsTBUjaCvVz5xDTIWl2F9nA+4lBsFCA=="}],"memo":""},"metadata":{"timestamp":"1761187448"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1c2ykpvz674tsntz4uv63jsrywhlllyydujefep","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"KWSSF2UzAX7Fxam1IBdzaNmC4XK0nJeTE+QZ1p5PFtfQn069fFXaHrW4s2b2B6l9g5tP9Z7bxYjtCwzRek9WBQ=="}],"memo":""},"metadata":{"timestamp":"1761205125"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1c2ykpvz674tsntz4uv63jsrywhlllyydujefep","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"KWSSF2UzAX7Fxam1IBdzaNmC4XK0nJeTE+QZ1p5PFtfQn069fFXaHrW4s2b2B6l9g5tP9Z7bxYjtCwzRek9WBQ=="}],"memo":""},"metadata":{"timestamp":"1761205431"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1jl646dwfc609eny806ya2g6r8me8tgtyhrlh0a","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"E7+ghtBb8pWI2D+0t+FIdvXyCdVqA9Ed0myxiKmO8NXd97ZnlUM6RTEbmUKkZSasFiKcx6OgwWLiE4DSrWyNDw=="}],"memo":""},"metadata":{"timestamp":"1761207447"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1jl646dwfc609eny806ya2g6r8me8tgtyhrlh0a","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"E7+ghtBb8pWI2D+0t+FIdvXyCdVqA9Ed0myxiKmO8NXd97ZnlUM6RTEbmUKkZSasFiKcx6OgwWLiE4DSrWyNDw=="}],"memo":""},"metadata":{"timestamp":"1761207457"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1jl646dwfc609eny806ya2g6r8me8tgtyhrlh0a","send":"1000000ugnot","max_deposit":"","pkg_path":"gno.land/r/gnoland/users/v1","func":"Register","args":["asd1233"]}],"fee":{"gas_wanted":"20000000","gas_fee":"10000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Jy97REtNlgs4jkTLcBGbGj0hpITJZXGKJFxm8sgzumyaT7sNMBsKnxqv5tuQeBRuC6xk/i9HK1i6GzjxFEFRBg=="}],"memo":""},"metadata":{"timestamp":"1761207467"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g128rcgqd84f6rznx3k3azqdd0v95hkpe6xnzsgw","amount":"10000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"JVGTVdk7N8+3tr4w0Ewl1Hu7/wsQpT4EkQrNCW2c21pmx3IcugupJu1A61oFCQDcTqOfIBPN9cZ/41UpsckMBA=="}],"memo":""},"metadata":{"timestamp":"1761216951"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g128rcgqd84f6rznx3k3azqdd0v95hkpe6xnzsgw","package":{"name":"hello","path":"gno.land/r/g128rcgqd84f6rznx3k3azqdd0v95hkpe6xnzsgw/hello","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g128rcgqd84f6rznx3k3azqdd0v95hkpe6xnzsgw/hello\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g128rcgqd84f6rznx3k3azqdd0v95hkpe6xnzsgw\"\n"},{"name":"gnostudio.gno","body":"// This file is automatically generated and contains metadata about this\n// package deployment. It serves as a marker that this package was deployed\n// using Gno Studio (or Gno Playground) and may be used by tools for analytics, verification,\n// and ecosystem features.\n//\n// This file does not affect package execution and should not be modified.\npackage hello"},{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"584168","gas_fee":"585ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"OACK9/8zgvG4B4sl159L8ZigtrLfs++nBWOEpma2uez02vg8QbUvKu82C+9y2+SmKn+Is1dtaM4oLOz6/gZbAg=="}],"memo":"Deployed through play.gno.land"},"metadata":{"timestamp":"1761217122"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g128rcgqd84f6rznx3k3azqdd0v95hkpe6xnzsgw","send":"1000000ugnot","max_deposit":"","pkg_path":"gno.land/r/gnoland/users/v1","func":"Register","args":["crabe954"]}],"fee":{"gas_wanted":"11303939","gas_fee":"11304ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"pGkOOIzWtMATJ9dXolMAyE1koj1fvr459t2PEExDW+C77kQkARnWee7lklXvOTa9xkNuaP7nh/drZuDTxa/KDg=="}],"memo":""},"metadata":{"timestamp":"1761217710"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g10y2y4l4g7cx23tkl9jy5u638lw5aykvx7upqaz","amount":"5000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"RZYpYeGUoL5EqXNzPal0QfsiQipMT4gayTE9i+VPwgbDlOAsdAaIZLhoi6eWdpbwgm+B4tZwOH/6jbRUVM9LAg=="}],"memo":""},"metadata":{"timestamp":"1761224269"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g19cv3ly67zrhk606n2235rdj624tmjxnshd2ntq","amount":"1000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"1jDDabb5oDBmoogODDn1/CHByJGku1Z+j8/8zypIsCzin5gBnSaPHbxT4gdwuvop5Glb2mFJKplxDijQaEPgAw=="}],"memo":""},"metadata":{"timestamp":"1761239688"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"317500ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7dGs+Rfkhn0mdsVN4Ow8yQI2/GTmZm6tamrdF/hW963rEoq/3zdtegbFdhriICjatkPnIqF1mlW7Y7cRvY4LAA=="}],"memo":""},"metadata":{"timestamp":"1761264517"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"317500ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"2gu5wGvmLkZs0PdnCyWx+zoMyIeWZmk/fCs4npNlBNZVEWz/XXVA9PgIAzJmyoUDYPJlVpR4VXwajpxx57xYAQ=="}],"memo":""},"metadata":{"timestamp":"1761264522"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264527_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264527_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"frLQQi5LqcylCIGMMTs4WWQrHzyfZTUN3ufjlko8aYEKTmqwzpmrPrZfCaleg35SJ++PE+BNbF4cyIMKvM0sBA=="}],"memo":""},"metadata":{"timestamp":"1761264527"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264527_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264527_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"uves0DHimUV+2zfp0SJJPURxKviad5l7Sog6C0az0U6FFSX9iWcK2z9L8Mb7r+IMegqH5pqFje7uFoaLHE5aCQ=="}],"memo":""},"metadata":{"timestamp":"1761264527"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264527_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264527_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"QPtUQvNnAEVl+0WxvDM3iue+CcmoAYL2Ny/Gq2XASYGgLLgLAhNIhmN+lsed1lgDRU8xey9ZEd2mTz0hS3saBQ=="}],"memo":""},"metadata":{"timestamp":"1761264527"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264527_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264527_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"VpOU8tet5mPSqDta9L3OzGDWqburZ6ItZ5K27b40UJX2Qyn5Q6c46HAbLv2LTpkcUrWEkRatHvDyfXEvQNAhAA=="}],"memo":""},"metadata":{"timestamp":"1761264527"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264527_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264527_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"wVhwtgjh7c1cmhwZBj/cRhVJ5rJ1yKfPNJzIGtJRu2bzErrspUeqwRi5HNJ8b8WaiZ7iyyYo4NjRp5+CMZqsAQ=="}],"memo":""},"metadata":{"timestamp":"1761264527"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264527_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264527_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"667d2SwS5nkqI/FJETzkWQRaEkAlWZjnP8ZZnGB7ivJg18TUM/Ogzu7dPLd1uFt+k/RZOac+Ns3uP06wN2OjAQ=="}],"memo":""},"metadata":{"timestamp":"1761264527"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264527_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264527_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"8IxF1zX7Y12Me/OUZrMmSlNt0k/2gEEBuaS5mpwuS8y5mmD51wBkhJMgBKsLG9HxSabD88WWEAHtMM5r/qmlDg=="}],"memo":""},"metadata":{"timestamp":"1761264527"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264527_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264527_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"W29NtMJgRCO5lnzNBVmCtxOaYfPZ8+ClnzntoGofmR2iFESAUf8FU3hv1OVElmzCG269RD+ZUzp1hnj5B6uBDQ=="}],"memo":""},"metadata":{"timestamp":"1761264527"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264527_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264527_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"iz0Q/pSCF6ofSeU5Z6bJSsII1f+P+QRSSVLm42hBMd60InI1d1Yrx3sVGy3235+PNnQ5fQ4fUuUK4nuBN4wgDw=="}],"memo":""},"metadata":{"timestamp":"1761264527"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264527_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264527_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"sq5ULGBmomsAhTOKasC3UqmRI7X84d3yRpKOPm1b8MqNeWTE2jR6CIJrzXP17YYSNapihP3jx67dDwQmeY1ADA=="}],"memo":""},"metadata":{"timestamp":"1761264527"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3PIEn1CnQ5rWfFPmTQDQouznT8Bn+IOf+WNpe/CQUEx1WkbyTL9rKRQPLH2JgJfvBKZZecaGL1vqbOYI1y8NAg=="}],"memo":""},"metadata":{"timestamp":"1761264622"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l/melcXkMbve2kw48m8kcwnIKY/OYVowcRJP7iSt64ePjeuuU9mYMNo6raAlQl5DmMw9565JJK9TF/MF4PHlAg=="}],"memo":""},"metadata":{"timestamp":"1761264627"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264632_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264632_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"HP0xFOARZyqiucC0SL0gVOVjkBTFoFWV7bAyefUt+PwN9iC2NafSXb7nLlLWso31ewAFe5JfP347r7PwRLMpDg=="}],"memo":""},"metadata":{"timestamp":"1761264632"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264632_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264632_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"tDl3yXUUEPHWKagtFzCT7IbCwspto0MdvrhcocS7c4L3xc4W0T0EIw/r/ZhS9n1jGg9c42JkA544wvge1HMEDw=="}],"memo":""},"metadata":{"timestamp":"1761264632"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264632_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264632_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"VT5WvjDQqpPa6wh8kbF+zjO85eWaAd2WSVdjGaDiobHy/52nrEmbpBa7L1J+SyZJbAXWFzHkkbX5c5dVboG6Bw=="}],"memo":""},"metadata":{"timestamp":"1761264632"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264632_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264632_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Gm0YMCU40WOyY0TAx2g628TEsngYkqk2D2/dqy+acnTaUdkVck6kwFpDcwOLKq2UwYSEev+Sm3d2t/Bb1YZJCg=="}],"memo":""},"metadata":{"timestamp":"1761264632"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264632_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264632_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"92nSiofydx7JLVNQ0r9zLHoL83agf5ryTuD4hOEa4AfdNQ08S9tBNdQRS7warvA2xyGUH38qhlZtoP8z9lmzAg=="}],"memo":""},"metadata":{"timestamp":"1761264632"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264632_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264632_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"6qO1QPs2yK7FafuTm+LttcaFCm8+nVfrIV5GXZ8Owd4Of/oglA/7NgrMyWuCuzuqPXfFXWosMpjoCsHZURLrBg=="}],"memo":""},"metadata":{"timestamp":"1761264632"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264632_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264632_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"UnQckxwBF0PvYKEAyKdIerXWF55nXC3cQplmDe4wLUoyowZqbWzsCwzACqRRBVk+8Oub14YCjYuLr4CZVCKFCg=="}],"memo":""},"metadata":{"timestamp":"1761264632"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264632_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264632_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"DOhzyMwRXZ74EYDw7pcdSeAUelV9m1kuyk1bKunfXbKhJYGkQVRR+LJIVA7JjBDSq25vTR+HQ8NQoRN+ugzUAA=="}],"memo":""},"metadata":{"timestamp":"1761264632"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264632_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761264632_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"2BZtyWDWHvThmWFhYlmiQPSVS0ZEYonHwz61FEE1/7RGFW3Q6Zogv2DPGwUU++0JbxkN4cyvAfyCJT2fWdxpDQ=="}],"memo":""},"metadata":{"timestamp":"1761264632"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264632_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761264632_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"rPXmW/8QuK3d1cH3elbMHsm1CDbHG0FawFWJR5NwOxRivMPeu/23qmN2v/u6AAVN0JHIb3OfUae+NHWWwf8yDQ=="}],"memo":""},"metadata":{"timestamp":"1761264632"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761264726","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761264726\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598838","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"IAQiWmUYKvbq3cNAXXnpQadOdmmpsiq1LDm9LGxjFGSes+CMBkRFkqBIe3IqOrKrTjR2fIfczu7bohELfAyrBQ=="}],"memo":""},"metadata":{"timestamp":"1761264723"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761264726","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"zK+QTz6QHAhcr7gkQyHsm1aE14ujYfW0Kk4PKG/g27vMka/yqiOaH54JHb8LFbdx9xzY9p8lbpeMmWzYYdcWAg=="}],"memo":""},"metadata":{"timestamp":"1761264728"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761264726","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"HHxsMK3jxkvb0c7C4UK4yi32ovH0SN/D99P/WnrZjGyaWIcUMsdYWHeBw0C/EEWoBOpMZ4JA7v4LOhTwk7M8Dg=="}],"memo":""},"metadata":{"timestamp":"1761264728"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761264726","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nse8/pfgYtEAssLPb5BHuzmacTnivGodusfi6IcW8rBiuFWH+Bx8QlX9kW8RBMT6cGPxkHWEpQYYexQJ39auDg=="}],"memo":""},"metadata":{"timestamp":"1761264728"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761264726","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ngk92JfJQusaZOQHpyKG89T8IBdty2RNo07ovu1EZWb8CLTvqOPYS1CMC0m4J4anzAF0atMuFx30OSQZm7X5BQ=="}],"memo":""},"metadata":{"timestamp":"1761264728"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761264726","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"yKhKdN9fTwUxgKRDEoFufC/fldXQ/xVr3MXQIzY3bG7TAdHFMH+Se5VP7TmIg6eGADfD4Kxj+MtCtdLfBFXqBA=="}],"memo":""},"metadata":{"timestamp":"1761264728"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761264726","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"zIvFyUzIqqS/NLh3/t0cviXWP7ElQDZkYWRmglAWsZOIgG5w+0uPguhvBT5FtwYY2IXsnxlVZo+C2MZJ3A1kCQ=="}],"memo":""},"metadata":{"timestamp":"1761264728"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761264726","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"QVqGfURCPlu8YQsnCZtGaflIZ5fxFMsp6U3wFsc+2QbW/bOI18oDHVRSLL2+ra5zdH7So+er+74XkcJ/GDAzBw=="}],"memo":""},"metadata":{"timestamp":"1761264728"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761264726","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"eAtJ/1UdsNsJkPhr2xN+LVgbIIvffje7hgnD3Lyte2GZbidYPs+Mz5sTiFSWftNbFU+fpXgEoku7+EROb91BAw=="}],"memo":""},"metadata":{"timestamp":"1761264728"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761264726","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"gk9vD3YVroHk/uyjdNV1juHaYCcuALo/C2X1kU5627M5aHx53xyX25amoiMue79BVr4NrT6IPastUym0IUZqBA=="}],"memo":""},"metadata":{"timestamp":"1761264728"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761264726","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"PHvnU4U6JZpuEHfVWaPxUYl3xMwOodTA8NCJj7O+doVzXRxTZX1TOHJrrpAiHAFcVNtpbEL7XGVYs7vcKsnHBA=="}],"memo":""},"metadata":{"timestamp":"1761264728"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g150gdvn780ws7a3s9qpdvv7h4d9hq6vh672ely0","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"mSytaJGwlg1SYXI7PAf1RedIwBjLXjpHCr8K84wUX2oW6Vr4InjgDjBivBKpfsJ+vRHLU3XIfqFMDr5hBiupAg=="}],"memo":""},"metadata":{"timestamp":"1761268110"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"LuLpQWDQuNiqSFnMCH7eEfodeRecoXU0tp9P0qLAIwNLCgGEUepCPDffYiskeLj+XxR8VOl4o/f57QF5YKyIAA=="}],"memo":""},"metadata":{"timestamp":"1761269447"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"84F03cQ3IXT1mtfvsL5EFHoK9lpoLDhSszzh+Lf4jy55TVW9xDoEUcr0iONCLLx3G2HV5yUPGRKrQNO2iAFoCg=="}],"memo":""},"metadata":{"timestamp":"1761269452"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269457_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269457_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Pu6JHWgRMotCWGFZsYAFHlremc9EfxGUhpMQIQfBwWIjHrx/6XSPyd/Dm8J0vPyNsc9idCSwoivSfwtASwYbCg=="}],"memo":""},"metadata":{"timestamp":"1761269457"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269457_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269457_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"rG1cUoFgmuPunzINAOchbr3bzQt0K8zUN72lv5pbLX+BC7PPzqUwhYq2LIDUpU3RieTVMUhltKzpJLI/O0fwCA=="}],"memo":""},"metadata":{"timestamp":"1761269457"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269457_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269457_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Mu89w0RTIBnKsJL7UTlK189yL+8lwDnHr9jxX8UE0v0PKvxG8+fPbyfGqpBLUcHKyhLe1kva/HcgEGGuFi95Bg=="}],"memo":""},"metadata":{"timestamp":"1761269457"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269457_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269457_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"TBYnVI71RMsFtKJIeKLowqusKguA5RrWQmefBaYDOznqLt/hUC4jvKZ/0nlYVLv720x7xvqeDTvirXzbrwhPDA=="}],"memo":""},"metadata":{"timestamp":"1761269457"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269457_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269457_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/V+IzBE3sR1Fj4PpOjhZoNBJXaiqXuSVeM1l6YgT3H3rwOJcXmD7L0i6RSL5UUc0krCVuTLx2i9r7sc5mikaAA=="}],"memo":""},"metadata":{"timestamp":"1761269457"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269457_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269457_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"RSxdajGUbTYUI+WcrR2mPCNvTyz9cIE1leo0cOdQrbeSSSaB+/uC44CwG99Y6fv7Vo5HqHAwIFxZIm76CWJqAQ=="}],"memo":""},"metadata":{"timestamp":"1761269457"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269457_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269457_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"vR3gquZpYRBsjWGz2rhiLrLF0M6sEDlcxcyB8K2cl2pTLaWcrX1C30SSqM5vXXzGaswtwv8lc9U0QIT7lMjkCg=="}],"memo":""},"metadata":{"timestamp":"1761269457"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269457_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269457_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"E6yFWV+JElu5CyaeNrZwPJ7SMz/SKqqWFkSqbhPxq6gvD+nLC+BwWk17VB3eyLWKYER4wyNQ6lTwktV/Xdu9CQ=="}],"memo":""},"metadata":{"timestamp":"1761269457"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269457_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269457_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/KOkFOpqL3XqyJuq6WBoZcbkSftbKdZQGBd6XIcg9uu5v+lZhceLD/O9QzI5/Wief6PLckmJJeKVh6h/xnoEAA=="}],"memo":""},"metadata":{"timestamp":"1761269457"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269457_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269457_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"VPTdFQaTXiuol8bcQbdcUk+KormMzgOhxJSZKa3hfkU/renhyiOl7vSEqc6EdE3xLsn5lgRu63WS56Cay0HuAA=="}],"memo":""},"metadata":{"timestamp":"1761269457"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3PIEn1CnQ5rWfFPmTQDQouznT8Bn+IOf+WNpe/CQUEx1WkbyTL9rKRQPLH2JgJfvBKZZecaGL1vqbOYI1y8NAg=="}],"memo":""},"metadata":{"timestamp":"1761269542"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l/melcXkMbve2kw48m8kcwnIKY/OYVowcRJP7iSt64ePjeuuU9mYMNo6raAlQl5DmMw9565JJK9TF/MF4PHlAg=="}],"memo":""},"metadata":{"timestamp":"1761269547"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269553_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269553_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Wl/dcq/YU+sJJ7IMQrEgnw8IDCZ84sqABFMMlTxrJc/Bb/C6DrL7AL5r9Hi4tg0k2OVBRIhencujtWc6xOLIDA=="}],"memo":""},"metadata":{"timestamp":"1761269553"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269553_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269553_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"j3ycrxmBoVo2+WjWdgDbClxgHphXWfQM6wpnYg3Unn6VWopWsnoGm5+KGkKSmQjxUBiOAUc+9tsEmbGEUZMpAg=="}],"memo":""},"metadata":{"timestamp":"1761269553"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269553_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269553_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kuL8uDfkzan5booI6fBQGP4cfnM3xx3zD9KyBwjIzEdnhcgf9lxn9BIwOn6z7ktvOEy0gMJPCTxH4T5eE802AQ=="}],"memo":""},"metadata":{"timestamp":"1761269553"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269553_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269553_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Oq5Bq4GHT8dtzf/fPgOvSHgfn3I6BJGMXI+B0g6YoLwjlPvZhIO/NFcpsduHxty1A81TiyimZphycI+itJmZAA=="}],"memo":""},"metadata":{"timestamp":"1761269553"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269553_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269553_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"J9PF3jTGc+Vly5VtD5eNfybm+KLVxkGlhE2UuC2UFi6TZ6PAL39xf2oYEV1nemIrOtRRv2mi6592svlmBcGUCw=="}],"memo":""},"metadata":{"timestamp":"1761269553"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269553_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269553_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"2LCZhcgHOQu2RoyaGTIyJo8FMYctoE7RXtdCDhsj4IPCnE8y0KbYa58ZxiRzEWN87r8jGFovynR0xAwFxYJ4Dw=="}],"memo":""},"metadata":{"timestamp":"1761269553"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269553_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269553_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"xjL12CTCt49lztQ5P1qegpgtf2dI2Hkung44w0h6gTkL1sXsVXWRilLgObbPjIsCmrur3Rfu0sE85SiEBK7cBQ=="}],"memo":""},"metadata":{"timestamp":"1761269553"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269553_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269553_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"mfEcnhaAUg0uD04Gk+m4/RBQMUFlwcWag46dkZVVqCFpIezJR+uT9M0nnLaTKlnd/feXkZC0hAdzCoCZUz9dCg=="}],"memo":""},"metadata":{"timestamp":"1761269553"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269553_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761269553_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"9vcnmoLN77Wf731fzPTRsyw+f8aRewomKc6F8eGyH9m3EYq2LiyZBrPjXPVlJbOLTRkvMNBCimJavCK4UvdUAA=="}],"memo":""},"metadata":{"timestamp":"1761269553"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269553_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761269553_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ue+BzNoMmA+QK70oA1bq4qvo2OwOvDWD0a1rTiQYf34kBITh57x5+fcVrijh8jL6UxuXHV46DogZttGU7MRpDA=="}],"memo":""},"metadata":{"timestamp":"1761269553"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761269639","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761269639\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598838","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"khh4eh5WgQKkDCxbYDIrZBj4rYhMI5WfPs5X4AtcWyWkFElyxR9aJpkGSmwARBwelekoWQ2XO4Wr+F5BFZL6AA=="}],"memo":""},"metadata":{"timestamp":"1761269638"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761269639","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"a37BV1cOVIeB5D6a0dzKP1ehlK1ksTsMlzSEm0v2vnDYv3180QfVOVFyWm4kpfnTGJGb2k+vF3nDTCcEV0d3Ag=="}],"memo":""},"metadata":{"timestamp":"1761269643"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761269639","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"D3+8bB7vYcbRRDk2f6yXI/OM69oRJskwW4hERO9VzwKCE16dA85Qo2YjmEBy3Lt2btZSdM+6CihEnTpY7xiHDQ=="}],"memo":""},"metadata":{"timestamp":"1761269643"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761269639","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"rj2S9M5RstzW1j+DW18Kxj3Hz5rjGu2/U1xX946cqZDNqDQu6U9mXGC8XrfrQFjbfm1aCo8MdOXRyH55YToYBg=="}],"memo":""},"metadata":{"timestamp":"1761269643"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761269639","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Utuib5/8OCFDe7eDISIgOuDJD0wnC9w2rHijIxJ0tdcveQjjkdDTOyPxQq8ocCqoEBKEbkt90YI9a7b2LAivBQ=="}],"memo":""},"metadata":{"timestamp":"1761269643"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761269639","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"6dIhiyhd7wjEWJkJJ7HgUkYn45VbD0+VLnI+603Jzoa3Sf243thIgYEij7n0LQahvyTwxwQnHAi6ViaBZ3OxAA=="}],"memo":""},"metadata":{"timestamp":"1761269643"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761269639","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"j+dFdGG496ioHFdF1SbrS8TCNl+rpP/S23JGELketUfKyS8kfXKdHQONiuqJRA+Ye0eWkuT4QsNjTwdfjQCNBw=="}],"memo":""},"metadata":{"timestamp":"1761269643"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761269639","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"5lspmiBUpGzv2RB3dYf2QcdeRjNBEX7CjJwATavfUFLt6SkuS9jOyl1Ym6H9pT198X3236Nc4DqClafCPe26Dw=="}],"memo":""},"metadata":{"timestamp":"1761269643"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761269639","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"cY3IdFrgtYMofvDCVcwgO7oEAMdMneL3prUINFPOayAvw0/aw6jWDMh/1FnJ4nO03dlVNDegKiUJPkjj5Zb3Cw=="}],"memo":""},"metadata":{"timestamp":"1761269643"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761269639","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"tVTC9FoO7RUC9dL4Qi0ghqGiL1X3kBWz0LBrrc5TTVgrDNWDxj8uD+aMMPQ24mn1nYwMpdUEsbSQfa9XKVSDAw=="}],"memo":""},"metadata":{"timestamp":"1761269643"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761269639","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"R/Tx8BdPLdWyPIW2RaiWAsfitz+FxeBKbPCO8ai/fgTaxSdJoSafdvEk5NMamZ1z85h4uQgiDYH5bR4sAt4rCQ=="}],"memo":""},"metadata":{"timestamp":"1761269643"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1r000nhpy9fvtm3km404tngn8y8qyv4fpnh7ka7","amount":"1000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"tUFEVpJ2NnlsuLzDdyf/bzQo/EDxb57GGNIkfqZ82EL4vNw6BqJ+ebd6UStyH3Td5PSY5dUCYvrbcbJZTWkdAA=="}],"memo":""},"metadata":{"timestamp":"1761320408"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"290960ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"XsW7PHATaiDeSMyEP/jw7KqqzkIki3PPxWBoZWtWARK2Z+8gU0My32koDazYUBk9N6wWUAFYYBl4PtmGbbqIDw=="}],"memo":""},"metadata":{"timestamp":"1761355841"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"290960ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7QGgOIWIZ1j8K9nKi74Jx5L7RDfLCR7e6nu5Z1mqlFeTAj7CcY0/iFLIh/cun6pefV7KKLgvHKq+FcVXn9AiDg=="}],"memo":""},"metadata":{"timestamp":"1761355846"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355851_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355851_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"D0JJLT8OH6UxR1iq2LhaOMCAB7wZCVHzCpyyv5kF2NH3s1ZENXhFTUKLirkxgeUEJDxbccsyjSAcGCEDR5UDAg=="}],"memo":""},"metadata":{"timestamp":"1761355851"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355851_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355851_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"DFKfYvJTJqTBBqAlAsPbRhE4/LjRrM8xSso8bh8t53UM5zz/PXbzqQi41NLPlWM4D4drBg++JaY+1mYa/iv/AA=="}],"memo":""},"metadata":{"timestamp":"1761355851"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355851_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355851_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"iGCp9JHj0PKBIQcmksbInMiT+lwApowH+Jp+jijmLbY1kP44VtZbJN6aVx0T0bknAqsuzbQGDBD34/cQBrbBCw=="}],"memo":""},"metadata":{"timestamp":"1761355851"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355851_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355851_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"sd59ixwY8jvdVijG14OBRLu6+2SBV0Qfa+fHYKLSJ644TZ4Tm5Qn8QSdr7YiTbYcQJQY+I08QsrRCI5gxSRADw=="}],"memo":""},"metadata":{"timestamp":"1761355851"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355851_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355851_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"zqWutOIOV0q8uYGQ/74lw+0T3G/bmiNdZ0+zZ2LwrQYU5wYLZl4EQ9oNk7fUn9F+GXsE3gmIMDswXz2S+v87DQ=="}],"memo":""},"metadata":{"timestamp":"1761355851"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355851_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355851_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"zMINEkCfGepzc3vVPFYIZrdFZjsJLIhYALpj3iH5NXAXTYLFSFdyRMgFTSuG41fd6K3239/OndvwpXlwrTQZCg=="}],"memo":""},"metadata":{"timestamp":"1761355851"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355851_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355851_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"8kxgZchqm+QH4gmQnAuYFEJJ8KWeJUsZ8Zhq0qxcdqn9Q9hLNvJVCw6nssrtPuIQKrfid1RaRXlhU4mzZqBICA=="}],"memo":""},"metadata":{"timestamp":"1761355851"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355851_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355851_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"J3dNUYXRkrYZPSc0MyzMnIAR6z95qZ2fzzM6a+kLPCGjYp0g7yEHLotiHIeYSsH9Hta/cwIMvg2B/9XI/ioQCA=="}],"memo":""},"metadata":{"timestamp":"1761355851"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355851_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355851_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/0McRCGHW7VcAEBkwQpwgTI1gyQr1or/02VvBYd7eFLeSC/LHDw0kRg4wtW77tbZv9G1wAfQn3xUWzzS1jjVDw=="}],"memo":""},"metadata":{"timestamp":"1761355851"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355851_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355851_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"478356","gas_fee":"479ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kNvdLtBlTDMX96VQMzZjWBmPbgaw9XChb5SjTk4wXKFABtg123YPAC9BQOnz98Mkwv/dedOuwZj2jP3Ak2SZCQ=="}],"memo":""},"metadata":{"timestamp":"1761355851"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nh1hC8BDVB4nuyMnHZrOIdnkN9cj4wIWD879E/PMfUt2ldwvoQKNmSCXezTVJ0Dh28Vrg5HC7A74GhtMKFs9Aw=="}],"memo":""},"metadata":{"timestamp":"1761355941"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2843295ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"obSxxgIRKpLzLO+6Rey6ugd4fqQIdw8bRE7RheB0Iu7EIimndBZF6WZ5lIRYluEjzll81EVxlcKeagZpp/2MAQ=="}],"memo":""},"metadata":{"timestamp":"1761355946"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355951_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355951_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Em+C7pIu/YF0RmWTiGRbUzTgNOl9rrkyYoJ7FGw7MRAsJ9MQIocMNQyYWRVwqnBLqKgPVvUufJHcZd/vYpqgCA=="}],"memo":""},"metadata":{"timestamp":"1761355951"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355951_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355951_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"X+95ACEU7/JDg/6lOv0u7afOoVlHXqn50QGuvIXknQDGSSgW2sU0qpMiYl4blwNiHlQZRcRDBbwzm6G/U4GmDA=="}],"memo":""},"metadata":{"timestamp":"1761355951"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355951_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355951_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"2mgBnYp4f3YUSF0i08YgL4xWG2PtZpQwiEmae1QcOeD3D8/VrmAkmcJvX9vXUmkKmZLF/9xAhtbFwRiEl+NlCA=="}],"memo":""},"metadata":{"timestamp":"1761355951"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355951_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355951_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"oVAiEa5wYRGb0+fcJrwMPcQNRc1WI9J0CDNItVXJL738GyPYVVqpz+FZ4piQ/zIc6MU1O/XkRIIU3RoxW0lRDA=="}],"memo":""},"metadata":{"timestamp":"1761355951"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355951_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355951_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"cUyKec9+7E78Ez1UBDye9blKaAOcfMawLAVt8swgE+6Y+un9oPy6bnl6eLAJnPUWl/Q7B9LojJrPiaKTSaNgAA=="}],"memo":""},"metadata":{"timestamp":"1761355951"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355951_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355951_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ggJLaDZmAsl7bw6I4SBknkcpxl32b7nouv2eTLYumWfUE0kv9Ns2NAaDPyjvQWss4pwszCxajQI1J1YpH/lPDg=="}],"memo":""},"metadata":{"timestamp":"1761355951"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355951_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355951_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"H2mHl8IyilZ9CR9voH6/Rgr+nuf7TIZr9PpolMt0+AUc5C9fMJ9l00v6HlXFoWx624KKRQGE7aFJ8f9IivV0DQ=="}],"memo":""},"metadata":{"timestamp":"1761355951"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355951_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355951_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7R9QpVPpw8gxqjoU44DT+RPfKq7F174aLsNcxM9qsUIadHdxeTyHhHobFoDyvU6aUhVLXSMWy2ezu6VwQCPKCg=="}],"memo":""},"metadata":{"timestamp":"1761355951"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355951_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761355951_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3/J0IihxKVJ6hf9Ky6SxCmfrz+efKvOrZkNb3dhGnk1r4+ZgMGVB1nLQUQxnPjnnvxPrRLnxwCZW3yOomIycBw=="}],"memo":""},"metadata":{"timestamp":"1761355951"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355951_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761355951_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"XXNzY4m2YVd5yv3A+ozuTDFSI+RxXCFbKI9pBP2ah5tJGj1+9sdQS3Z87IC6VXpT8aNwXzcE37mk5eDOcHwjDQ=="}],"memo":""},"metadata":{"timestamp":"1761355951"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761356047","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761356047\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598838","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"0D6frsd8Ir3kE+suomB1crr/IvFYiOMm+6UylyzsfuIKvkXF0bVZ+Ju8zmZZLmNcNUpnrAgTlum3v65a8WmJAg=="}],"memo":""},"metadata":{"timestamp":"1761356047"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761356047","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"5tm+zYorj3PcFoOWnEDR4h4O5+MLFks0Gb/qtzEOahpKBHYWUEpuPBu8FIIGBnM9UVnSEC0gDtwEapN5YBGZAA=="}],"memo":""},"metadata":{"timestamp":"1761356052"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761356047","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"RlVO5hNSEXO/R1QWKx7D44n1FeB4Xii0upILlE3eERtFovH6QLSs4E2C2zCNQEvyXihLWwJPD7uNjcYQH2+fBA=="}],"memo":""},"metadata":{"timestamp":"1761356052"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761356047","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"+6yhwPwXVFZXlan/jir2jHY9+KjZ4MQ9zpX0rUkRNRT27dKfSS6ySEai6vHKpqMuaKzfWugYuxAfn8J/gxI7Dw=="}],"memo":""},"metadata":{"timestamp":"1761356052"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761356047","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"M/0I2oMdpdP7bFWvIjjcElo/bWYdoRVy2BWjpPBuVjyAvQJFkzzmKx9p0SOWDnR1VOukcpFsPNCyl2sliu0pDw=="}],"memo":""},"metadata":{"timestamp":"1761356052"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761356047","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3N8Ca8D4XzRCMdJqES3P3X8+3H735MJZ/l270INH7b6wyNdSpso1EqRG2ABeqL33rg1OcJoF0FPgcPndiBZGBQ=="}],"memo":""},"metadata":{"timestamp":"1761356052"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761356047","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"2GfUnbRqVFTfqkwMq7BgTLsfCm0E4KNYdPqjJn/h3ZnT8Q+FgqLXOmi2DuLMoYzAqQVNAtmjYx6Kp6YdDS1QDw=="}],"memo":""},"metadata":{"timestamp":"1761356052"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761356047","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"eFsqD1VTSFXOa8zpzAwX/oWO/Ke9wWnXq/F01GYlvUFUgM0fHJMmtXWGnG6/4542Qak1yPB9xnJtnUMKz/pAAw=="}],"memo":""},"metadata":{"timestamp":"1761356052"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761356047","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"9JtgA4D5OuzKgWU9sKAhXA96/lvAbpR5Tm3O9f7jXT43F4gnp0oNzUqsfpbZaDk7Gh0bF93XCJCd4tJI0LxoDA=="}],"memo":""},"metadata":{"timestamp":"1761356052"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761356047","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"DKWHn2PQg7npL13+AZqJMVrXmqVsrOEREDKpxmONqNvAvD++l97iyexOpyKuJ8JYw335oQmenS0b0R7Q4EXlCw=="}],"memo":""},"metadata":{"timestamp":"1761356052"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761356047","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"DkLVOalP2QJULNRpawRWfLb7+YvW0GfctnXotjCsNRrJTb76ihU9bzP/b9Zs+bJea7x8ziI7QTBBj8leASbUDw=="}],"memo":""},"metadata":{"timestamp":"1761356052"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1uggg98wfa4jftqw2al4vqq4eayr7zkgakly0zs","amount":"1000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"TqQBn68WXj33Ihkh3UgzS1EW+fGJk5QeVRXCrg0kr5t05k/+VRzyLFuvqGnAH7WpDeha7sTMqbdtgBdNvZCPAA=="}],"memo":""},"metadata":{"timestamp":"1761420972"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"LuLpQWDQuNiqSFnMCH7eEfodeRecoXU0tp9P0qLAIwNLCgGEUepCPDffYiskeLj+XxR8VOl4o/f57QF5YKyIAA=="}],"memo":""},"metadata":{"timestamp":"1761442277"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"84F03cQ3IXT1mtfvsL5EFHoK9lpoLDhSszzh+Lf4jy55TVW9xDoEUcr0iONCLLx3G2HV5yUPGRKrQNO2iAFoCg=="}],"memo":""},"metadata":{"timestamp":"1761442282"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442287_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442287_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"jhA7DMUKJgfLg0v6i3SBojlnNI9mp2sbT6Gg0afsUgbmc+fWjisUpuc+VzF/OtJBaCEYBMS8YrDTZteu8gAjCw=="}],"memo":""},"metadata":{"timestamp":"1761442287"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442287_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442287_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"pVmAmzgBU542g0qjSHIxYksBF8SlcoaDZ7EiVdkHGprNdfDQ63YG6uqlTz3ku6p/xNhlugANt955hE8SnLuDBg=="}],"memo":""},"metadata":{"timestamp":"1761442287"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442287_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442287_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"B4JqMmdxqqkye7HUYXeglYPS4ZrPrkCDerVn51+b6u1f3QzpJDJLXMA7BEmHV1vtnu9m+Q0DZqcdF2B/HRukBA=="}],"memo":""},"metadata":{"timestamp":"1761442287"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442287_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442287_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"oAhLCLY/2PEbx3WoG29L4X5nEUbTGEHJCuBtdjFCdvua4RZisAS8nG5rtwVM3vK9XLL7eLbDunG17rVGsNcWCA=="}],"memo":""},"metadata":{"timestamp":"1761442287"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442287_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442287_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"sE3Sho/wuHNX4N9T1tlKzwEPR0/OY77MQ6Qa0N7jLhbiVJGrSXyVG/3j4akenk+BG9Ftj45ORX4hFtMmyVU8DQ=="}],"memo":""},"metadata":{"timestamp":"1761442287"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442287_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442287_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ElmaUDQK2f9DQlPpgRnZibeg3OUfDRQz5gnXcMsByvig8CRLuG/DEkfv107MZPPjvMV+VGfwIvrLe9xDJiZ/Cw=="}],"memo":""},"metadata":{"timestamp":"1761442287"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442287_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442287_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"VF3m2FJZ0TuSV9nlNkB3HuCB40z9fX9UjKXiem1BatOL6j2DaiI41b/DIyZn9kG88rRo5TKVgVvXZPFpObMCCQ=="}],"memo":""},"metadata":{"timestamp":"1761442287"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442287_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442287_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"a8/5zCOwxwC3fPkPkRDpnpidUIucyXMOZUJgPmuy4EtkhD/4xZyYvTyKWWks9zj4cB5TPI9MxUEtNkkvPClNDg=="}],"memo":""},"metadata":{"timestamp":"1761442287"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442287_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442287_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"E9CjDOETqeR/mZmAzwJ3OJzHoPQXGtZWfTROA2PeObChLYntNDiC9VkpeFb7dWSPLWZCK8KhHhQF7Tr7/WvnAg=="}],"memo":""},"metadata":{"timestamp":"1761442287"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442287_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442287_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"UngRX4pW6KJAznzrw6sqQfrH+eS8P7T1E27gaqkAM++6SI4HcUCfGNXQekh6inVC7tplgWppzz2mCkxU18y+CA=="}],"memo":""},"metadata":{"timestamp":"1761442287"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3PIEn1CnQ5rWfFPmTQDQouznT8Bn+IOf+WNpe/CQUEx1WkbyTL9rKRQPLH2JgJfvBKZZecaGL1vqbOYI1y8NAg=="}],"memo":""},"metadata":{"timestamp":"1761442372"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l/melcXkMbve2kw48m8kcwnIKY/OYVowcRJP7iSt64ePjeuuU9mYMNo6raAlQl5DmMw9565JJK9TF/MF4PHlAg=="}],"memo":""},"metadata":{"timestamp":"1761442377"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442382_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442382_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"blA+S7mi59FVuJT2DWwW+wegAKUoelX1SmFSpEO5t+p9A2ukm8bVTxj4D/3YuxCHRyakHJ9PnI0+3+ei3+/0CA=="}],"memo":""},"metadata":{"timestamp":"1761442382"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442382_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442382_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"PH0CrfT2ia+O5Diasg1gO5y+gB5FDntsuEzLcamELMtsRcuawVyyGEilNpSJ8ZRHDDBAv3CVA1fXtKGRJSyGCA=="}],"memo":""},"metadata":{"timestamp":"1761442382"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442382_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442382_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"hzw0w/RUEXZMzRp1GbWa1i77zMWFaV6bPTHnZ5BJxEeqaTwZFxveQNAJMrnZhWBKFANNe2BS317lLEd437KXAQ=="}],"memo":""},"metadata":{"timestamp":"1761442382"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442382_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442382_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"NhFgVTnI5Go1fbwIfxXkoOnoWUiehIyZH3x0E03Koc475cv6y3VsVNEe8Dx5PW0uwsW6y4rBWAmuZ87+OewMBw=="}],"memo":""},"metadata":{"timestamp":"1761442382"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442382_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442382_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"iA7LTDwLWBR4UvhoaSgsKFn2m8V7hi5wskEkAW3wM/qOkPzWusWlmMzUJlVguM5akSiiIwZfNoUbb48q/ZCpDw=="}],"memo":""},"metadata":{"timestamp":"1761442382"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442382_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442382_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"RN5YQlrqPusfEVZE43Zaa8uLkSOLr7vaRRprkugiDRUAN+5dmsEOEv7GvLAi6xG79xAX996ljueCvqLfwd4ABA=="}],"memo":""},"metadata":{"timestamp":"1761442382"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442382_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442382_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"xkTWz3mybbOLERV9Zd1aeRKyOrxij12+40nzE5YHjvmvmYkAqjdRQ4os5+iVbQCmKwLOp2yiS7qdlCfeqRjpAg=="}],"memo":""},"metadata":{"timestamp":"1761442382"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442382_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442382_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"hIpZxRiGdt8Q4RR1pcWlSz4iVKsIFE15Xr4V5lDbGV7zbS8qW2YdewR1jBbwPQPUvzSbu7+SBe9AJIYH8IhACw=="}],"memo":""},"metadata":{"timestamp":"1761442382"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442382_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761442382_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"oPIKLr8mkFF4fa+Q4tzyHE5IazK2xG+QAK9eEfAZyFFpNp0qefQe7gZqV4dx8rYM3dp67Cc3EKfnsJvpC10QCA=="}],"memo":""},"metadata":{"timestamp":"1761442382"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442382_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761442382_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ACXHrby9JOb9eIfQ4rzMrmfOVaOFHqoWAcSfvj7v2U/5TBOvi+ULi96OStalGZF9RRU8zZHHujWMCFRt9LBpDg=="}],"memo":""},"metadata":{"timestamp":"1761442382"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761442469","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761442469\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598838","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"TYNqF/+BWDJXe1qvXyclIVlRLyAriDEeTOX1K05Z3Zh+y+RrZ1pKOPx8R5nPlOubdY4tJZTN0CzZEPLWL6R+CQ=="}],"memo":""},"metadata":{"timestamp":"1761442468"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761442469","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"8gvBdL+AvFbXIAMMRLEYSks1Cv7/rjKsMy3Cvn1DFnAksDX3bqA4HFNkXgLKS+NW2Br3nGrwEXH01uTpEt86Ag=="}],"memo":""},"metadata":{"timestamp":"1761442473"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761442469","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"FRq3LqzmDp9HlmRVF2TAWxkyINzF6l211oetRJKPwq3EM65R3WPF6Y0Wlj5DJDZtkyGd7d0PlqP15fJ+ofI2Aw=="}],"memo":""},"metadata":{"timestamp":"1761442473"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761442469","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"YG6mjbz3/rMc0+EhLRxXbp4gnqG/WG5ecJczKL4f1f6bCarGEinLVvu6FusScaBORYXoKO3yBwWsMiJqtYELCA=="}],"memo":""},"metadata":{"timestamp":"1761442473"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761442469","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"rS8OmHJ5Wo//2qzr8fSapHEJ5pAhOM+BctZ5Z0/7rxbChdE23DKb6DjhUHRMdiGy63+KrGd+8DsS2aUXJzf4Cw=="}],"memo":""},"metadata":{"timestamp":"1761442473"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761442469","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"5jP5LgMoaPMzUn77iN+iNc0QnZ6ogKNfaDcOJ+B0ga8qT7V38Go0gQFkpN9EXkulmEc06853fIyqkKbnkcIkAA=="}],"memo":""},"metadata":{"timestamp":"1761442473"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761442469","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GrPAzDubUNjkeCZDkquDO8VCDrfiQ4jjKF72evzUdIBOBvbuqwY/yvOJduWdslZScRCJGpNm8lWSAOUyaYP5Aw=="}],"memo":""},"metadata":{"timestamp":"1761442473"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761442469","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"VRmYEsJwXxU6NuskeNjLfCOrDaOwOoXvrD3tQLl8Q5RKVrqhLnszR4Xzs1UY9+J30/Ej0A2slbagVWSLlqVtDg=="}],"memo":""},"metadata":{"timestamp":"1761442473"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761442469","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"+lP2N/jY8iZ/zdJNZdCU+P+MIsXM+3zjrvyao5SJ6hgkrOm8oPtR4oUBEyklmRK8qi1xGeyllWh3/MDhEcvYDA=="}],"memo":""},"metadata":{"timestamp":"1761442473"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761442469","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"5ZuImjd9cdMKgjcFE2GAj5Hoi10usvZrqHdGmXan1l9TABFuFOQCT5FXNYhGOi4X1orxblVa42gl+QKNnScHBw=="}],"memo":""},"metadata":{"timestamp":"1761442473"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761442469","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"2UyUTRn1WjrRscmtQTXjhubzrV861X+DybbFWEiZlRIfPZ6NhgGhXInxYAcrbRLvfaLi0tHLK4DeL4f5GYd/Cw=="}],"memo":""},"metadata":{"timestamp":"1761442473"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"LuLpQWDQuNiqSFnMCH7eEfodeRecoXU0tp9P0qLAIwNLCgGEUepCPDffYiskeLj+XxR8VOl4o/f57QF5YKyIAA=="}],"memo":""},"metadata":{"timestamp":"1761528696"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"317420ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"84F03cQ3IXT1mtfvsL5EFHoK9lpoLDhSszzh+Lf4jy55TVW9xDoEUcr0iONCLLx3G2HV5yUPGRKrQNO2iAFoCg=="}],"memo":""},"metadata":{"timestamp":"1761528701"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528707_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528707_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"oBmv2oSqcagG6lpu25F7U6bzrpB1o836lMapge86U9lkfLTIVBYD5EOq3Z1yMvo0haJuSq0OX2B47hBsEwr/AQ=="}],"memo":""},"metadata":{"timestamp":"1761528707"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528707_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528707_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"UxwlSVFrtqEUHhBja4TFY/4w1BcRWqPWrQHZFsh/Um3CEBVpmEr7CLOZ2908ts0pMxaysfedk0PKaJ0KhWBxBg=="}],"memo":""},"metadata":{"timestamp":"1761528707"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528707_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528707_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"EZK4KUxsdESkY/QyUqLDTxzE1u2l2zkk7fVRcWbXsYoKc//cP2sYahvjtleizHDnD002/YSTpBXSLqtcH5V4AQ=="}],"memo":""},"metadata":{"timestamp":"1761528707"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528707_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528707_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"4m+8fJyGwsPotEce1HnqzbvA0Ov905fYUd9WRSM1klSYo9ZFUXrfSnoB9dn7TAhZIQ+D0lPM1eB0Jfvajbk5DA=="}],"memo":""},"metadata":{"timestamp":"1761528707"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528707_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528707_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"GHnF8dRdSn7QS9TGHNaXDe1TGwDGFNz1VHiFBM5p9c909mJlCBED8+x0mZPPMC+A3955sS1vhW/msSXwh22LAg=="}],"memo":""},"metadata":{"timestamp":"1761528707"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528707_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528707_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"99CENXFtwRPSKtZRo51HMVJg+T9BHxWzS1mdlTjLpmWtDekfebOr8A+7FhXrytV6ZfTy7pzQgvh9wCFiyyb5Cg=="}],"memo":""},"metadata":{"timestamp":"1761528707"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528707_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528707_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kKvivbY0RM6hTZyoILxrG6XaO/CEvSGOqaVFVrp++RLF1VI1XiMdE2HphdBJHP/dzxSI8bq/mMk6gfLUjiyvAw=="}],"memo":""},"metadata":{"timestamp":"1761528707"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528707_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528707_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"cayRtwMt3jKeVZZ0inNkKOAay/L1pVoSJ8NzBhvkRenLNz5z3FHry1xDix5fCDR67K4ehOmdRE9+cLnov6HmDw=="}],"memo":""},"metadata":{"timestamp":"1761528707"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528707_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528707_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"vYfOQg0Lh2OY36YL/NJp52yFJ9FGYjwv2zS+e0g/f1sBRvRM5dsyn0j1tNd2ROIUhmExkhcQycAm+w0xRoZUDQ=="}],"memo":""},"metadata":{"timestamp":"1761528707"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528707_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528707_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"package.gno","body":"package runtime\n\ntype Language string\n\nconst (\n\tFrench    Language = \"french\"\n\tItalian   Language = \"italian\"\n\tSpanish   Language = \"spanish\"\n\tHindi     Language = \"hindi\"\n\tBulgarian Language = \"bulgarian\"\n\tSerbian   Language = \"serbian\"\n)\n\n// GetGreeting generates a greeting in\n// the specified language\nfunc GetGreeting(language Language) string {\n\tswitch language {\n\tcase French:\n\t\treturn \"Bonjour\"\n\tcase Italian:\n\t\treturn \"Ciao\"\n\tcase Spanish:\n\t\treturn \"Hola\"\n\tcase Hindi:\n\t\treturn \"नमस्ते\"\n\tcase Bulgarian:\n\t\treturn \"Здравейте\"\n\tcase Serbian:\n\t\treturn \"Здраво\"\n\tdefault:\n\t\treturn \"Hello\"\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"480960","gas_fee":"481ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"FXlX3uQhcnfuVu4kUmmYXmai7S+X4nzqFGdYxzkQOQ9Z3yTAiPtdueUlJ8XKFSLp5sOmaaLCaqV8sDrL+8+WAQ=="}],"memo":""},"metadata":{"timestamp":"1761528707"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"3PIEn1CnQ5rWfFPmTQDQouznT8Bn+IOf+WNpe/CQUEx1WkbyTL9rKRQPLH2JgJfvBKZZecaGL1vqbOYI1y8NAg=="}],"memo":""},"metadata":{"timestamp":"1761528792"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","amount":"2816845ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"100ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"l/melcXkMbve2kw48m8kcwnIKY/OYVowcRJP7iSt64ePjeuuU9mYMNo6raAlQl5DmMw9565JJK9TF/MF4PHlAg=="}],"memo":""},"metadata":{"timestamp":"1761528797"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528802_0","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528802_0\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"7r1htez3DSdnVauYHfcYiy0vZH6E1cz4Ni3zPRmgblqCVlAhvK3z5wgX0gi4vhwOuuymRDeHBAKnbWADNI1vAg=="}],"memo":""},"metadata":{"timestamp":"1761528802"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528802_1","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528802_1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ys1picMraYC0qMuI+oAA2EpstT1aY4CCNiInCQePVA93se4u/wxZ3rgm8F5Kbw98JRAT7xrQGfikhw79DfD7Cg=="}],"memo":""},"metadata":{"timestamp":"1761528802"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528802_2","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528802_2\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"+2xBFBpoVbThLXHu7wwwU7kiB5uNO4NBqOzYiH5JCuuNdhzInTy8ELgfeEoGV3zHFqrmXCDCcAzZLfsDODLZAQ=="}],"memo":""},"metadata":{"timestamp":"1761528802"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528802_3","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528802_3\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"QTkmd07qGRAMjFJFKbg2S+UVNYx9sXJTqdANHT1k6fnakTr75tr4h+t6ZBZY4HiOpsCAp0ObB1zxhus8ZJE1DA=="}],"memo":""},"metadata":{"timestamp":"1761528802"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528802_4","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528802_4\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"vHmqc6solA7nwszny/ClN5sQd2480WGkm00vTbr7EaMUlKlmfr9edWuJHCArsmvlmV7Yh7Y67YBBaPVNAt18Cg=="}],"memo":""},"metadata":{"timestamp":"1761528802"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528802_5","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528802_5\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"IZWHu64rulWl4bmQL8wvefAoYatE3Ux2RMsYpIQ45lXXs70h6Gq4AmDZRfuqvd6IjZGS4qePR+pCRQkSQRYOAg=="}],"memo":""},"metadata":{"timestamp":"1761528802"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528802_6","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528802_6\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"5B7TRnNHcOSqUsZ3rqPAe87YPqIFdflY6luAeloQpgkvUjoCfRiX74gq0VriNQ8qF9bFGMtb827AwqZ3TJ8dCw=="}],"memo":""},"metadata":{"timestamp":"1761528802"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528802_7","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528802_7\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"V2LItiFL/lshY+yJpN7COz7HXlHf8QVIFeN3GsKoU8tyUUfaeMBjW0uQ0pFsaoRirUFRu5AtWSP1SB5k8qn2DQ=="}],"memo":""},"metadata":{"timestamp":"1761528802"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","package":{"name":"runtime","path":"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528802_8","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f/stress_1761528802_8\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"YmTrwSRTflrSlpewxpga763oPNCT1upp8LoTOOoSUj4O4SWKqHCU/mRDLS7UtBjOVwGaTPTuKJuhYrUNJZ0jDA=="}],"memo":""},"metadata":{"timestamp":"1761528802"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","package":{"name":"runtime","path":"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528802_9","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg/stress_1761528802_9\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"603504","gas_fee":"604ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Cr+pUfVhcNWiUnDp+wbo6cq+3ftDt2KIi4r4j1XuFy8DQMKrd7Nf5qebGHyC9zi3UVsOqAirD3BAH7V3rNZuAg=="}],"memo":""},"metadata":{"timestamp":"1761528802"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"name":"runtime","path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761528895","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761528895\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\n"},{"name":"realm.gno","body":"package runtime\n\nvar greeting string\n\nfunc init() {\n\tgreeting = \"Hello\"\n}\n\n// SayHello says hello to the specified name, using\n// the saved greeting\nfunc SayHello(cur realm, name string) string {\n\treturn greeting + \" \" + name + \"!\"\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"598838","gas_fee":"599ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"/ltNTzHr0fFZbBntGPgEmMk6+2fWKaCWhenXlWpX6BpGdn92FbOa/gmFDAhQke8bkBwQJtdh5NTNtdDj8zG1DA=="}],"memo":""},"metadata":{"timestamp":"1761528892"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761528895","func":"SayHello","args":["Account-0"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"S+9Kr+7SOmVHEgddR0XUyY4Bn0bDuTxcu6Z4XcyeqOKL45C3sXyemFbW4J++15xGWymRVxBQ2CjdydpBcWZiBg=="}],"memo":""},"metadata":{"timestamp":"1761528897"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761528895","func":"SayHello","args":["Account-1"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"4FNeac9oAzuHvp5QHKhLQX3xCIvXFqpaiRb6o8pBIv8INvQN6sygRoBSycB7TkmvaSaOwPIS0mdEbKW95ScVBw=="}],"memo":""},"metadata":{"timestamp":"1761528897"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761528895","func":"SayHello","args":["Account-2"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"6ta9unJrE2+4dRkvR0GKKo01favAYu9AS7JH5XYobkFZUKZUArNZY5txP/ayNrwRmhk/pKNSW3Wzh6aDt2ACAw=="}],"memo":""},"metadata":{"timestamp":"1761528897"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761528895","func":"SayHello","args":["Account-3"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"qmZVHf9daqWr9qbRgUH/8KLvr3DVuyNfVxkhWNjUFP1Lh18azKW/IaArdoQ27lbkapamtUzLZzby7oPqDIHaCg=="}],"memo":""},"metadata":{"timestamp":"1761528897"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761528895","func":"SayHello","args":["Account-4"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"bsuh/MlyIPHKPvdgXexgX2e/+00cA7cdfrLzKulUoMr9iM656Po3U+E0FjqQCfQLaNB5QrxRUUmb2U8GEi7ICQ=="}],"memo":""},"metadata":{"timestamp":"1761528897"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761528895","func":"SayHello","args":["Account-5"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"RSwZXg4AVsVdOOa/3RG8/dYCek8ZOIpixLv+K7cuAlfL1AbGfQwKiaVKONMv/X4VsWvRr3YTXwcaoyJtBl0iDw=="}],"memo":""},"metadata":{"timestamp":"1761528897"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761528895","func":"SayHello","args":["Account-6"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"w+pcmuqMFZLpRpvdLeOjfMLR50UOzgwMC2F+g1vNBk/iCYJUfskfYXlsdGZr9MWWfzKFvdOdofVYd5EcwKeUCQ=="}],"memo":""},"metadata":{"timestamp":"1761528897"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761528895","func":"SayHello","args":["Account-7"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"jJbLrM9E6gSuzQjA7H16O0USBFlibcpQOBISRx55UCYkpjFyaUUdCGLC9D7AmxJeLWZLkphLO+KuhBopV8vABg=="}],"memo":""},"metadata":{"timestamp":"1761528897"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1kcdd3n0d472g2p5l8svyg9t0wq6h5857nq992f","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761528895","func":"SayHello","args":["Account-8"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"lZFTnkAMRvu6wE0wG3LcIgpXfflgGv4m6tleCNm8usE9P/virYQAZ4VY91j9mgWRJJOva12M0VV3tGwA7z50Ag=="}],"memo":""},"metadata":{"timestamp":"1761528897"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1d598tyfatprdstalqutk62cnzpm3thvyy9mypg","send":"","max_deposit":"","pkg_path":"gno.land/r/g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5/stress_1761528895","func":"SayHello","args":["Account-9"]}],"fee":{"gas_wanted":"167592","gas_fee":"168ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"IF4wlx+iGh7xD8AvCkZ5k+sKmq9YLF+MuTx7wi8LCn5LNiuRm8hpqnJek0CgbGhSHujMbZ8O/u9ffSbspZyYDg=="}],"memo":""},"metadata":{"timestamp":"1761528897"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Zu+JFGmZZ2OSW4HA3TjklcJEj9KZYOkBfhMss+pLhUMd/SF7LjByyx0FBOQsEVq1tyX3bG2GclupDZjPxN11Aw=="}],"memo":""},"metadata":{"timestamp":"1761556078"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq","send":"1000000ugnot","max_deposit":"","pkg_path":"gno.land/r/gnoland/users/v1","func":"Register","args":["devx000"]}],"fee":{"gas_wanted":"50000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"nOlay41GYh93sOeTdAXhchX+baZciHG1mRfudC4h9m+iXCHdcpbA/Z/KPDRwkVDz6ZmOPvw8zLjbRmtMAGV2Bg=="}],"memo":""},"metadata":{"timestamp":"1761556228"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","package":{"name":"message","path":"gno.land/p/jeronimo000/message","files":[{"name":"broker.gno","body":"package message\n\nimport (\n\t\"errors\"\n\t\"strings\"\n\n\t\"gno.land/p/moul/ulist\"\n\t\"gno.land/p/nt/avl\"\n)\n\nvar (\n\t// ErrInvalidTopic is triggered when an invalid topic is used.\n\tErrInvalidTopic = errors.New(\"invalid topic\")\n\n\t// ErrRequiredCallback is triggered when subscribing without a callback.\n\tErrRequiredCallback = errors.New(\"message callback is required\")\n\n\t// ErrRequiredSubscriptionID is triggered when unsubscribing without an ID.\n\tErrRequiredSubscriptionID = errors.New(\"message sibscription ID is required\")\n\n\t// ErrRequiredTopic is triggered when (un)subscribing without a topic.\n\tErrRequiredTopic = errors.New(\"message topic is required\")\n)\n\n// NewBroker creates a new message broker.\nfunc NewBroker() *Broker {\n\treturn \u0026Broker{}\n}\n\n// Broker is a message broker that handles subscriptions and message publishing.\ntype Broker struct {\n\tcallbacks avl.Tree // string(topic) -\u003e *ulist.List(Callback)\n}\n\n// Topics returns the list of current subscription topics.\nfunc (b Broker) Topics() []Topic {\n\tvar topics []Topic\n\tb.callbacks.Iterate(\"\", \"\", func(k string, _ any) bool {\n\t\ttopic := Topic(k)\n\t\tif topic == TopicAll {\n\t\t\t// Skip catchall topic from the list\n\t\t\treturn false\n\t\t}\n\n\t\ttopics = append(topics, topic)\n\t\treturn false\n\t})\n\treturn topics\n}\n\n// Subscribe subscribes to messages published for a topic.\n// It returns the callback ID within the topic.\nfunc (b *Broker) Subscribe(topic Topic, cb Callback) (id int, _ error) {\n\tkey := strings.TrimSpace(string(topic))\n\tif key == \"\" {\n\t\treturn 0, ErrRequiredTopic\n\t}\n\n\tif cb == nil {\n\t\treturn 0, ErrRequiredCallback\n\t}\n\n\tv, _ := b.callbacks.Get(key)\n\tcallbacks, _ := v.(*ulist.List)\n\tif callbacks == nil {\n\t\tcallbacks = ulist.New()\n\t}\n\n\tcallbacks.Append(cb)\n\tb.callbacks.Set(key, callbacks)\n\treturn callbacks.TotalSize(), nil\n}\n\n// Unsubscribe unsubscribes a callback from a message topic.\n// ID is the callback ID within the topic, returned on subscription.\nfunc (b *Broker) Unsubscribe(topic Topic, id int) (unsubscribed bool, _ error) {\n\tkey := strings.TrimSpace(string(topic))\n\tif key == \"\" {\n\t\treturn false, ErrRequiredTopic\n\t}\n\n\tif id == 0 {\n\t\treturn false, ErrRequiredSubscriptionID\n\t}\n\n\tv, found := b.callbacks.Get(key)\n\tif !found {\n\t\treturn false, errors.New(\"message topic not found: \" + key)\n\t}\n\n\tcallbacks := v.(*ulist.List)\n\ti := id - 1\n\treturn callbacks.Delete(i) == nil, nil\n}\n\n// Publish publishes a message for a topic.\nfunc (b Broker) Publish(topic Topic, data any) error {\n\tif topic == TopicAll {\n\t\treturn ErrInvalidTopic\n\t}\n\n\tkey := strings.TrimSpace(string(topic))\n\tif key == \"\" {\n\t\treturn ErrRequiredTopic\n\t}\n\n\titerCb := func(_ int, v any) bool {\n\t\tcb := v.(Callback)\n\t\tcb(Message{topic, data})\n\t\treturn false\n\t}\n\n\t// Trigger callbacks subscribed to current topic\n\tv, found := b.callbacks.Get(key)\n\tif found {\n\t\tcallbacks := v.(*ulist.List)\n\t\tcallbacks.Iterator(0, callbacks.Size(), iterCb)\n\t}\n\n\t// Trigger callbacks subscribed to all topics\n\tv, found = b.callbacks.Get(string(TopicAll))\n\tif found {\n\t\tcallbacks := v.(*ulist.List)\n\t\tcallbacks.Iterator(0, callbacks.Size(), iterCb)\n\t}\n\treturn nil\n}\n"},{"name":"broker_filetest.gno","body":"package main\n\nimport (\n\t\"gno.land/p/jeronimo000/message\"\n)\n\nfunc main() {\n\t// Create a message broker and a generic message callback\n\tbroker := message.NewBroker()\n\tcb := func(m message.Message) {\n\t\tprintln(\"topic triggered: \" + string(m.Topic))\n\t\tprintln(\"topic data: \" + m.Data.(string))\n\t}\n\n\t// Subscribe to a couple of events\n\t_, err := broker.Subscribe(\"eventA\", cb)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t_, err = broker.Subscribe(\"eventB\", cb)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// Subscribe to an event and then unsubscribe from it\n\tid, err := broker.Subscribe(\"eventC\", cb)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t_, err = broker.Unsubscribe(\"eventC\", id)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// Subscribe to all events\n\t_, err = broker.Subscribe(message.TopicAll, func(m message.Message) {\n\t\tprintln(\"catchall topic triggered: \" + string(m.Topic))\n\t})\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// List broker topics\n\tprintln(\"topics:\")\n\tfor _, topic := range broker.Topics() {\n\t\tprintln(\"- \" + string(topic))\n\t}\n\n\t// Publish events\n\tprintln()\n\tif err = broker.Publish(\"eventA\", \"A\"); err != nil {\n\t\tpanic(err)\n\t}\n\n\tprintln()\n\tif err = broker.Publish(\"eventB\", \"B\"); err != nil {\n\t\tpanic(err)\n\t}\n}\n\n// Output:\n// topics:\n// - eventA\n// - eventB\n// - eventC\n//\n// topic triggered: eventA\n// topic data: A\n// catchall topic triggered: eventA\n//\n// topic triggered: eventB\n// topic data: B\n// catchall topic triggered: eventB\n"},{"name":"broker_test.gno","body":"package message_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/jeronimoalbi/expect\"\n\t\"gno.land/p/jeronimo000/message\"\n)\n\nvar (\n\t_ message.Subscriber = (*message.Broker)(nil)\n\t_ message.Publisher  = (*message.Broker)(nil)\n)\n\nfunc TestBrokerTopics(t *testing.T) {\n\tbroker := message.NewBroker()\n\texpect.\n\t\tValue(t, len(broker.Topics())).\n\t\tAsInt().\n\t\tToEqual(0)\n\n\tcb := func(message.Message) {}\n\tbroker.Subscribe(\"foo\", cb)\n\tbroker.Subscribe(\"bar\", cb)\n\tbroker.Subscribe(\"baz\", cb)\n\tbroker.Subscribe(message.TopicAll, cb)\n\ttopics := broker.Topics()\n\n\texpect.\n\t\tValue(t, len(topics)).\n\t\tAsInt().\n\t\tToEqual(3)\n\texpect.\n\t\tValue(t, string(topics[0])).\n\t\tAsString().\n\t\tToEqual(\"bar\")\n\texpect.\n\t\tValue(t, string(topics[1])).\n\t\tAsString().\n\t\tToEqual(\"baz\")\n\texpect.\n\t\tValue(t, string(topics[2])).\n\t\tAsString().\n\t\tToEqual(\"foo\")\n}\n\nfunc TestBrokerPublish(t *testing.T) {\n\ttests := []struct {\n\t\tname               string\n\t\tsubscribe, publish message.Topic\n\t\tdata               any\n\t\tmessage            *message.Message\n\t\terr                error\n\t}{\n\t\t{\n\t\t\tname:      \"publishes subscribed topic\",\n\t\t\tsubscribe: \"foo\",\n\t\t\tpublish:   \"foo\",\n\t\t\tdata:      \"foo's data\",\n\t\t\tmessage: \u0026message.Message{\n\t\t\t\tTopic: \"foo\",\n\t\t\t\tData:  \"foo's data\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:      \"publishes all topics\",\n\t\t\tsubscribe: message.TopicAll,\n\t\t\tpublish:   \"foo\",\n\t\t\tdata:      \"foo's data\",\n\t\t\tmessage: \u0026message.Message{\n\t\t\t\tTopic: \"foo\",\n\t\t\t\tData:  \"foo's data\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:      \"invalid topic\",\n\t\t\tsubscribe: \"foo\",\n\t\t\tpublish:   message.TopicAll,\n\t\t\terr:       message.ErrInvalidTopic,\n\t\t},\n\t\t{\n\t\t\tname:      \"no topic\",\n\t\t\tsubscribe: \"foo\",\n\t\t\tpublish:   \"\",\n\t\t\terr:       message.ErrRequiredTopic,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t// Arrange\n\t\t\tvar msg *message.Message\n\t\t\tbroker := message.NewBroker()\n\t\t\tbroker.Subscribe(tt.subscribe, func(m message.Message) { msg = \u0026m })\n\n\t\t\t// Act\n\t\t\terr := broker.Publish(tt.publish, tt.data)\n\n\t\t\t// Assert\n\t\t\tif tt.err != nil {\n\t\t\t\texpect.\n\t\t\t\t\tFunc(t, func() error { return err }).\n\t\t\t\t\tWithFailPrefix(\"expect a publish error\").\n\t\t\t\t\tToFail().\n\t\t\t\t\tWithError(tt.err)\n\t\t\t\texpect.\n\t\t\t\t\tValue(t, istypednil(msg)).\n\t\t\t\t\tWithFailPrefix(\"expect callback not to be called\").\n\t\t\t\t\tAsBoolean().\n\t\t\t\t\tToBeTruthy()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\texpect.\n\t\t\t\tValue(t, err).\n\t\t\t\tWithFailPrefix(\"expect no publish error\").\n\t\t\t\tToBeNil()\n\t\t\texpect.\n\t\t\t\tValue(t, msg).\n\t\t\t\tWithFailPrefix(\"expect callback to be called\").\n\t\t\t\tNot().ToBeNil()\n\t\t\texpect.\n\t\t\t\tValue(t, string(msg.Topic)).\n\t\t\t\tWithFailPrefix(\"expect message topic to match\").\n\t\t\t\tAsString().\n\t\t\t\tToEqual(string(tt.message.Topic))\n\t\t\texpect.\n\t\t\t\tValue(t, msg.Data).\n\t\t\t\tWithFailPrefix(\"expect message data to match\").\n\t\t\t\tAsString().\n\t\t\t\tToEqual(tt.message.Data.(string))\n\t\t})\n\t}\n}\n\nfunc TestBrokerSubscribe(t *testing.T) {\n\tcb := func(message.Message) {}\n\ttests := []struct {\n\t\tname     string\n\t\tsetup    func(*message.Broker)\n\t\ttopic    message.Topic\n\t\tid       int64\n\t\tcallback message.Callback\n\t\terr      error\n\t}{\n\t\t{\n\t\t\tname:     \"single subscription\",\n\t\t\ttopic:    \"foo\",\n\t\t\tid:       1,\n\t\t\tcallback: cb,\n\t\t},\n\t\t{\n\t\t\tname: \"existing subscriptions\",\n\t\t\tsetup: func(b *message.Broker) {\n\t\t\t\tb.Subscribe(\"foo\", cb)\n\t\t\t},\n\t\t\ttopic:    \"foo\",\n\t\t\tid:       2,\n\t\t\tcallback: cb,\n\t\t},\n\t\t{\n\t\t\tname: \"other subscription topics\",\n\t\t\tsetup: func(b *message.Broker) {\n\t\t\t\tb.Subscribe(\"foo\", cb)\n\t\t\t},\n\t\t\ttopic:    \"bar\",\n\t\t\tid:       1,\n\t\t\tcallback: cb,\n\t\t},\n\t\t{\n\t\t\tname:  \"no topic\",\n\t\t\ttopic: \"\",\n\t\t\terr:   message.ErrRequiredTopic,\n\t\t},\n\t\t{\n\t\t\tname:     \"no callback\",\n\t\t\ttopic:    \"foo\",\n\t\t\tcallback: nil,\n\t\t\terr:      message.ErrRequiredCallback,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t// Arrange\n\t\t\tbroker := message.NewBroker()\n\t\t\tif tt.setup != nil {\n\t\t\t\ttt.setup(broker)\n\t\t\t}\n\n\t\t\t// Act\n\t\t\tid, err := broker.Subscribe(tt.topic, tt.callback)\n\n\t\t\t// Assert\n\t\t\tif tt.err != nil {\n\t\t\t\texpect.\n\t\t\t\t\tFunc(t, func() error { return err }).\n\t\t\t\t\tWithFailPrefix(\"expect a subscribe error\").\n\t\t\t\t\tToFail().\n\t\t\t\t\tWithError(tt.err)\n\t\t\t\texpect.\n\t\t\t\t\tValue(t, id).\n\t\t\t\t\tWithFailPrefix(\"expect zero ID\").\n\t\t\t\t\tAsInt().\n\t\t\t\t\tToEqual(0)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\texpect.\n\t\t\t\tValue(t, err).\n\t\t\t\tWithFailPrefix(\"expect no subscribe error\").\n\t\t\t\tToBeNil()\n\t\t\texpect.\n\t\t\t\tValue(t, id).\n\t\t\t\tWithFailPrefix(\"expect ID to match\").\n\t\t\t\tAsInt().\n\t\t\t\tToEqual(tt.id)\n\t\t})\n\t}\n}\n\nfunc TestBrokerUnsubscribe(t *testing.T) {\n\tcb := func(message.Message) {}\n\ttests := []struct {\n\t\tname   string\n\t\tsetup  func(*message.Broker)\n\t\ttopic  message.Topic\n\t\tid     int\n\t\terrMsg string\n\t}{\n\t\t{\n\t\t\tname: \"single subscription\",\n\t\t\tsetup: func(b *message.Broker) {\n\t\t\t\tb.Subscribe(\"foo\", cb)\n\t\t\t},\n\t\t\ttopic: \"foo\",\n\t\t\tid:    1,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple subscriptions\",\n\t\t\tsetup: func(b *message.Broker) {\n\t\t\t\tb.Subscribe(\"foo\", cb)\n\t\t\t\tb.Subscribe(\"foo\", cb)\n\t\t\t},\n\t\t\ttopic: \"foo\",\n\t\t\tid:    2,\n\t\t},\n\t\t{\n\t\t\tname: \"other subscription topics\",\n\t\t\tsetup: func(b *message.Broker) {\n\t\t\t\tb.Subscribe(\"foo\", cb)\n\t\t\t\tb.Subscribe(\"bar\", cb)\n\t\t\t},\n\t\t\ttopic: \"foo\",\n\t\t\tid:    1,\n\t\t},\n\t\t{\n\t\t\tname:   \"not found\",\n\t\t\ttopic:  \"foo\",\n\t\t\tid:     1,\n\t\t\terrMsg: \"message topic not found: foo\",\n\t\t},\n\t\t{\n\t\t\tname:   \"no topic\",\n\t\t\ttopic:  \"\",\n\t\t\terrMsg: message.ErrRequiredTopic.Error(),\n\t\t},\n\t\t{\n\t\t\tname:   \"no subscription ID\",\n\t\t\ttopic:  \"foo\",\n\t\t\tid:     0,\n\t\t\terrMsg: message.ErrRequiredSubscriptionID.Error(),\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t// Arrange\n\t\t\tbroker := message.NewBroker()\n\t\t\tif tt.setup != nil {\n\t\t\t\ttt.setup(broker)\n\t\t\t}\n\n\t\t\t// Act\n\t\t\tunsubscribed, err := broker.Unsubscribe(tt.topic, tt.id)\n\n\t\t\t// Assert\n\t\t\tif tt.errMsg != \"\" {\n\t\t\t\texpect.\n\t\t\t\t\tFunc(t, func() error { return err }).\n\t\t\t\t\tWithFailPrefix(\"expect a subscribe error\").\n\t\t\t\t\tToFail().\n\t\t\t\t\tWithMessage(tt.errMsg)\n\t\t\t\texpect.\n\t\t\t\t\tValue(t, unsubscribed).\n\t\t\t\t\tWithFailPrefix(\"expect unsubscribe to fail\").\n\t\t\t\t\tAsBoolean().\n\t\t\t\t\tToBeFalsy()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\texpect.\n\t\t\t\tValue(t, err).\n\t\t\t\tWithFailPrefix(\"expect no unsubscribe error\").\n\t\t\t\tToBeNil()\n\t\t\texpect.\n\t\t\t\tValue(t, unsubscribed).\n\t\t\t\tWithFailPrefix(\"expect unsubscribe to succeed\").\n\t\t\t\tAsBoolean().\n\t\t\t\tToBeTruthy()\n\t\t})\n\t}\n}\n"},{"name":"doc.gno","body":"// Package message provides a simple message broker implementation.\n//\n// The message broker is a Pub/Sub one. It implements two different interfaces,\n// `Publisher` and `Subscriber`, which are also defined within this package.\n//\n// Published messages contain the topic where they are published and optional\n// message data.\n//\n// Subscribe to an event:\n//\n//\tbroker := message.NewBroker()\n//\tsubID, err := broker.Subscribe(\"EventName\", func(msg message.Message) {\n//\t   println(\"EventName has been triggered\")\n//\t   println(msg.Data)\n//\t})\n//\tif err != nil {\n//\t   panic(err)\n//\t}\n//\n// Unsubscribe from an event:\n//\n//\tunsubscribed, err := broker.Unsubscribe(\"EventName\", subID)\n//\tif err != nil {\n//\t   panic(err)\n//\t}\n//\n//\tif !unsubscribed {\n//\t   panic(\"subscription not found\")\n//\t}\n//\n// Publish an event:\n//\n//\terr := broker.Publish(\"EventName\", \"Example event data\")\n//\tif err != nil {\n//\t   panic(err)\n//\t}\npackage message\n"},{"name":"gnomod.toml","body":"module = \"gno.land/p/jeronimo000/message\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun\"\n"},{"name":"message.gno","body":"package message\n\n// TopicAll defines a topic for all types of message.\n// This topic can be used to subscribe to message for all topics.\nconst TopicAll Topic = \"*\"\n\ntype (\n\t// Topic defines a type for message topics.\n\tTopic string\n\n\t// Callback defines a type for message callbacks.\n\tCallback func(Message)\n\n\t// Message defines a type for published messages.\n\tMessage struct {\n\t\t// Topic is the message topic.\n\t\tTopic Topic\n\n\t\t// Data contains optional message data.\n\t\tData any\n\t}\n\n\t// Publisher defines an interface for message publishers.\n\tPublisher interface {\n\t\t// Publish publishes a message for a topic.\n\t\tPublish(_ Topic, data any) error\n\t}\n\n\t// Subscriber defines an interface for message subscribers.\n\tSubscriber interface {\n\t\t// Subscribe subscribes to messages published for a topic.\n\t\t// It returns the callback ID within the topic.\n\t\tSubscribe(Topic, Callback) (id int, _ error)\n\n\t\t// Unsubscribe unsubscribes a callback from a message topic.\n\t\t// ID is the callback ID within the topic, returned on subscription.\n\t\tUnsubscribe(_ Topic, id int) (unsubscribed bool, _ error)\n\t}\n)\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"80000000","gas_fee":"800000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"HU52gRMVdCfWlJaZihGYxUNwpk6WJcqlz+0DK1QJzyubCGeGTxMzTYQDBTnnCWfASdIABWPE1fGDcuBH34chAQ=="}],"memo":""},"metadata":{"timestamp":"1761556490"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"BwQl8ySwEks45RxOGIIXxzmfu+1B7fWR7xF8hB4zf2a5GLdniCzyquK8H2cL1u6AVnQUyUcCaOLFpLr9FgUQCw=="}],"memo":""},"metadata":{"timestamp":"1761556640"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq","package":{"name":"commondao","path":"gno.land/p/devx000/wip/nt/commondao","files":[{"name":"README.md","body":"# CommonDAO Package\n\nCommonDAO is a general-purpose package that provides support to implement\ncustom Decentralized Autonomous Organizations (DAO) on Gno.land.\n\nIt offers a minimal and flexible framework for building DAOs, with customizable\noptions that adapt across multiple use cases.\n\n## Core Types\n\nPackage contains some core types which are important in any DAO implementation,\nthese are **CommonDAO**, **ProposalDefinition**, **Proposal** and **Vote**.\n\n### 1. CommonDAO Type\n\nCommonDAO type is the main type used to define DAOs, allowing standalone DAO\ncreation or hierarchical tree based ones.\n\nDuring creation, it accepts many optional arguments some of which are handy\ndepending on the DAO type. For example, standalone DAOs might use IDs, a name\nand description to uniquely identify individual DAOs; Hierarchical ones might\nchoose to use slugs instead of IDs, or even a mix of both.\n\n#### DAO Creation Examples\n\nStandalone DAO:\n\n```go\nimport \"gno.land/p/devx000/wip/nt/commondao\"\n\ndao := commondao.New(\n    commondao.WithID(1),\n    commondao.WithName(\"MyDAO\"),\n    commondao.WithDescription(\"An example DAO\"),\n    commondao.WithMember(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"),\n    commondao.WithMember(\"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun\"),\n)\n```\n\nHierarchical DAO:\n\n```go\nimport \"gno.land/p/devx000/wip/nt/commondao\"\n\ndao := commondao.New(\n    commondao.WithSlug(\"parent\"),\n    commondao.WithName(\"ParentDAO\"),\n    commondao.WithMember(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"),\n)\n\nsubDAO := commondao.New(\n    commondao.WithSlug(\"child\"),\n    commondao.WithName(\"ChildDAO\"),\n    commondao.WithParent(dao),\n)\n```\n\n### 2. ProposalDefinition Type\n\nProposal definitions are the way proposal types are implemented in `commondao`.\nDefinitions are required when creating a new proposal because they define the\nbehavior of the proposal.\n\nGenerally speaking, proposals can be divided in two types, one are the\n*general* (a.k.a. *text proposals*), and the other are the *executable* ones.\nThe difference is that *executable* ones modify the blockchain state when they\nare executed after they have been approved, while *general* ones don't, they\nare usually used to signal or measure sentiment, for example regarding a\nrelevant issue.\n\nCreating a new proposal type requires implementing the following interface:\n\n```go\ntype ProposalDefinition interface {\n    // Title returns proposal title.\n    Title() string\n\n    // Body returns proposal's body.\n    // It usually contains description or values that are specific to\n    // the proposal, like a description of the proposal's motivation\n    // or the list of values that would be applied when the proposal\n    // is approved.\n    Body() string\n\n    // VotingPeriod returns the period where votes are allowed after\n    // proposal creation. It's used to calculate the voting deadline\n    // from the proposal's creationd date.\n    VotingPeriod() time.Duration\n\n    // Tally counts the number of votes and verifies if proposal passes.\n    // It receives a readonly record containing the votes that has been\n    // submitted for the proposal and also the list of current DAO members.\n    Tally(ReadonlyVotingRecord, MemberSet) (passes bool, _ error)\n}\n```\n\nThis minimal interface is the one required for *general proposal types*. Here\nthe most important method is the `Tally()` one. It's used to check whether a\nproposal passes or not.\n\nWithin `Tally()` votes can be counted using different rules depending on the\nproposal type, some proposal types might decide if there is consensus by using\nsuper majority while others might decide using plurality for example, or even\njust counting that a minimum number of certain positive votes have been\nsubmitted to approve a proposal.\n\nCommonDAO provides a couple of helpers for this, to cover some cases:\n- `SelectChoiceByAbsoluteMajority()`\n- `SelectChoiceBySuperMajority()` (using a 2/3s threshold)\n- `SelectChoiceByPlurality()`\n\n#### 2.1. Executable Proposals\n\nProposal definitions have optional features that could be implemented to extend\nthe proposal type behaviour. One of those is required to enable execution\nsupport.\n\nA proposal can be executable implementing the **Executable** interface as part\nof the new proposal definition:\n\n```go\ntype Executable interface {\n    // Execute executes the proposal.\n    Execute(realm) error\n}\n```\n\nThe `Execute()` method is where the realm changes are made once the proposal is\nexecuted.\n\nOther features can be enabled by implementing the **Validable** interface and the\n**CustomizableVoteChoices** one, as a way to separate pre-execution validation and\nto support proposal voting choices different than the default ones (YES, NO and\nABSTAIN).\n\n### 3. Proposal Type\n\nProposals are key for governance, they are the main mechanic that allows DAO\nmembers to engage on governance.\n\nThey are usually not created directly but though **CommonDAO** instances, by\ncalling the `CommonDAO.Propose()` or `CommonDAO.MustPropose()` methods. Though,\nalternatively, proposals could be added to CommonDAO's active proposals storage\nusing `CommonDAO.ActiveProposals().Add()`.\n\n```go\nimport (\n    \"std\"\n\n    \"gno.land/p/devx000/wip/nt/commondao\"\n    \"gno.land/r/example/mydao\"\n)\n\ndao := commondao.New()\ncreator := address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\npropDef := mydao.NewGeneralProposalDefinition(\"Title\", \"Description\")\nproposal := dao.MustPropose(creator, propDef)\n```\n\n#### 3.1. Voting on Proposals\n\nThe preferred way to submit a vote, once a proposal is created, is by calling\nthe `CommonDAO.Vote()` method because it performs sanity checks before a vote\nis considered valid; Alternatively votes can be directly added without sanity\nchecks to the proposal's voting record by calling\n`Proposal.VotingRecord().AddVote()`.\n\n#### 3.2. Voting Record\n\nEach proposal keeps track of their submitted votes within an internal voting\nrecord. CommonDAO package defines it as a **VotingRecord** type.\n\nThe voting record of a proposal can be getted by calling its\n`Proposal.VotingRecord()` method.\n\nRight now proposals have a single voting record but the plan is to support\nmultiple voting records per proposal as an optional feature, which could be\nused in cases where a proposal must track votes in multiple independent\nrecords, for example in cases where a proposal could be promoted to a different\nDAO with a different set of members.\n\n#### 4. Vote Type\n\nVote type defines the structure to store information for individual proposal\nvotes. Apart from the normally mandatory `Address` and voting `Choice` fields,\nthere are two optional fields that can be useful in different use cases; These\nfields are `Reason` which can store a string with the reason for the vote, and\n`Context` which can be used to store generic values related to the vote, for\nexample vote weight information.\n\nIt's *very important* to be careful when using the `Context` field, in case\nreferences/pointers are assigned to it because they could potentially be\naccessed anywhere, which could lead to unwanted indirect modifications.\n\nVote type is defined as:\n\n```go\ntype Vote struct {\n    // Address is the address of the user that this vote belons to.\n    Address address\n\n    // Choice contains the voted choice.\n    Choice VoteChoice\n\n    // Reason contains an optional reason for the vote.\n    Reason string\n\n    // Context can store any custom voting values related to the vote.\n    Context any\n}\n```\n\n## Secondary Types\n\nThere are other types which can be handy for some implementations which might\nrequire to store DAO members or proposals in a custom location, or that might\nneed member grouping support.\n\n### 1. MemberStorage and ProposalStorage Types\n\nThese two types allows storing and iterating DAO members and proposals. They\nsupport DAO implementations that might require storing either members or\nproposals in an external realm other than the DAO realm.\n\nCommonDAO package provides implementations that use AVL trees under the hood\nfor storage and lookup.\n\nCustom implementations are supported though the **MemberStorage** and\n**ProposalStorage** interfaces:\n\n```go\ntype MemberStorage interface {\n\t// Size returns the number of members in the storage.\n\tSize() int\n\n\t// Has checks if a member exists in the storage.\n\tHas(address) bool\n\n\t// Add adds a member to the storage.\n\tAdd(address) bool\n\n\t// Remove removes a member from the storage.\n\tRemove(address) bool\n\n\t// Grouping returns member groups when supported.\n\tGrouping() MemberGrouping\n\n\t// IterateByOffset iterates members starting at the given offset.\n\tIterateByOffset(offset, count int, fn func(address) bool)\n}\n\ntype ProposalStorage interface {\n\t// Has checks if a proposal exists.\n\tHas(id uint64) bool\n\n\t// Get returns a proposal or nil when proposal doesn't exist.\n\tGet(id uint64) *Proposal\n\n\t// Add adds a proposal to the storage.\n\tAdd(*Proposal)\n\n\t// Remove removes a proposal from the storage.\n\tRemove(id uint64)\n\n\t// Size returns the number of proposals that the storage contains.\n\tSize() int\n\n\t// Iterate iterates proposals.\n\tIterate(offset, count int, reverse bool, fn func(*Proposal) bool) bool\n}\n```\n\n### 2. MemberGrouping and MemberGroup Types\n\nMembers grouping is an optional feature that provides support for DAO members\ngrouping.\n\nGrouping can be useful for DAOs that require grouping users by roles or tiers\nfor example.\n\nThe **MemberGrouping** type is a collection of member groups, while the\n**MemberGroup** is a group of members with metadata.\n\n#### Grouping by Role Example\n\n```go\nimport \"gno.land/p/devx000/wip/nt/commondao\"\n\nstorage := commondao.NewMemberStorageWithGrouping()\n\n// Add a member that doesn't belong to any group\nstorage.Add(\"g1...a\")\n\n// Create a member group for owners\nowners, err := storage.Grouping().Add(\"owners\")\nif err != nil {\n  panic(err)\n}\n\n// Add a member to the owners group\nowners.Members().Add(\"g1...b\")\n\n// Add voting power to owners group metadata\nowners.SetMeta(3)\n\n// Create a member group for moderators\nmoderators, err := storage.Grouping().Add(\"moderators\")\nif err != nil {\n  panic(err)\n}\n\n// Add voting power to moderators group metadata\nmoderators.SetMeta(1)\n\n// Add members to the moderators group\nmoderators.Members().Add(\"g1...c\")\nmoderators.Members().Add(\"g1...d\")\n```\n"},{"name":"commondao.gno","body":"package commondao\n\nimport (\n\t\"errors\"\n\n\t\"gno.land/p/nt/avl/list\"\n\t\"gno.land/p/nt/seqid\"\n)\n\n// PathSeparator is the separator character used in DAO paths.\nconst PathSeparator = \"/\"\n\nvar (\n\tErrInvalidVoteChoice    = errors.New(\"invalid vote choice\")\n\tErrNotMember            = errors.New(\"account is not a member of the DAO\")\n\tErrOverflow             = errors.New(\"next ID overflows uint64\")\n\tErrProposalFailed       = errors.New(\"proposal failed to pass\")\n\tErrProposalNotFound     = errors.New(\"proposal not found\")\n\tErrVotingDeadlineNotMet = errors.New(\"voting deadline not met\")\n\tErrVotingDeadlinePassed = errors.New(\"voting deadline has passed\")\n)\n\n// CommonDAO defines a DAO.\ntype CommonDAO struct {\n\tid                         uint64\n\tslug                       string\n\tname                       string\n\tdescription                string\n\tparent                     *CommonDAO\n\tchildren                   list.IList\n\tmembers                    MemberStorage\n\tgenID                      seqid.ID\n\tactiveProposals            ProposalStorage\n\tfinishedProposals          ProposalStorage\n\tdeleted                    bool // Soft delete\n\tdisableVotingDeadlineCheck bool\n}\n\n// New creates a new common DAO.\nfunc New(options ...Option) *CommonDAO {\n\tdao := \u0026CommonDAO{\n\t\tchildren:          \u0026list.List{},\n\t\tmembers:           NewMemberStorage(),\n\t\tactiveProposals:   NewProposalStorage(),\n\t\tfinishedProposals: NewProposalStorage(),\n\t}\n\tfor _, apply := range options {\n\t\tapply(dao)\n\t}\n\treturn dao\n}\n\n// ID returns DAO's unique identifier.\nfunc (dao CommonDAO) ID() uint64 {\n\treturn dao.id\n}\n\n// Slug returns DAO's URL slug.\nfunc (dao CommonDAO) Slug() string {\n\treturn dao.slug\n}\n\n// Name returns DAO's name.\nfunc (dao CommonDAO) Name() string {\n\treturn dao.name\n}\n\n// Description returns DAO's description.\nfunc (dao CommonDAO) Description() string {\n\treturn dao.description\n}\n\n// Path returns the full path to the DAO.\n// Paths are normally used when working with hierarchical\n// DAOs and is created by concatenating DAO slugs.\nfunc (dao CommonDAO) Path() string {\n\t// NOTE: Path could be a value but there might be use cases where dynamic path is useful (?)\n\tparent := dao.Parent()\n\tif parent != nil {\n\t\tprefix := parent.Path()\n\t\tif prefix != \"\" {\n\t\t\treturn prefix + PathSeparator + dao.slug\n\t\t}\n\t}\n\treturn dao.slug\n}\n\n// Parent returns the parent DAO.\n// Null can be returned when DAO has no parent assigned.\nfunc (dao CommonDAO) Parent() *CommonDAO {\n\treturn dao.parent\n}\n\n// Children returns a list with the direct DAO children.\n// Each item in the list is a reference to a CommonDAO instance.\nfunc (dao CommonDAO) Children() list.IList {\n\treturn dao.children\n}\n\n// TopParent returns the topmost parent DAO.\n// The top parent is the root of the DAO tree.\nfunc (dao *CommonDAO) TopParent() *CommonDAO {\n\tparent := dao.Parent()\n\tif parent != nil {\n\t\treturn parent.TopParent()\n\t}\n\treturn dao\n}\n\n// Members returns the list of DAO members.\nfunc (dao CommonDAO) Members() MemberStorage {\n\treturn dao.members\n}\n\n// ActiveProposals returns active DAO proposals.\nfunc (dao CommonDAO) ActiveProposals() ProposalStorage {\n\treturn dao.activeProposals\n}\n\n// FinishedProposalsi returns finished DAO proposals.\nfunc (dao CommonDAO) FinishedProposals() ProposalStorage {\n\treturn dao.finishedProposals\n}\n\n// IsDeleted returns true when DAO has been soft deleted.\nfunc (dao CommonDAO) IsDeleted() bool {\n\treturn dao.deleted\n}\n\n// SetDeleted changes DAO's soft delete flag.\nfunc (dao *CommonDAO) SetDeleted(deleted bool) {\n\tdao.deleted = deleted\n}\n\n// Propose creates a new DAO proposal.\nfunc (dao *CommonDAO) Propose(creator address, d ProposalDefinition) (*Proposal, error) {\n\tid, ok := dao.genID.TryNext()\n\tif !ok {\n\t\treturn nil, ErrOverflow\n\t}\n\n\tp, err := NewProposal(uint64(id), creator, d)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tdao.activeProposals.Add(p)\n\treturn p, nil\n}\n\n// MustPropose creates a new DAO proposal or panics on error.\nfunc (dao *CommonDAO) MustPropose(creator address, d ProposalDefinition) *Proposal {\n\tp, err := dao.Propose(creator, d)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn p\n}\n\n// GetProposal returns a proposal or nil when proposal is not found.\nfunc (dao CommonDAO) GetProposal(proposalID uint64) *Proposal {\n\tp := dao.activeProposals.Get(proposalID)\n\tif p != nil {\n\t\treturn p\n\t}\n\treturn dao.finishedProposals.Get(proposalID)\n}\n\n// Vote submits a new vote for a proposal.\n//\n// By default votes are only allowed to members of the DAO when the proposal is active,\n// and within the voting period. No votes are allowed once the voting deadline passes.\n// DAO deadline checks can optionally be disabled using the `DisableVotingDeadlineCheck` option.\nfunc (dao *CommonDAO) Vote(member address, proposalID uint64, c VoteChoice, reason string) error {\n\tif !dao.Members().Has(member) {\n\t\treturn ErrNotMember\n\t}\n\n\tp := dao.activeProposals.Get(proposalID)\n\tif p == nil {\n\t\treturn ErrProposalNotFound\n\t}\n\n\tif !dao.disableVotingDeadlineCheck \u0026\u0026 p.HasVotingDeadlinePassed() {\n\t\treturn ErrVotingDeadlinePassed\n\t}\n\n\tif !p.IsVoteChoiceValid(c) {\n\t\treturn ErrInvalidVoteChoice\n\t}\n\n\tp.record.AddVote(Vote{\n\t\tAddress: member,\n\t\tChoice:  c,\n\t\tReason:  reason,\n\t})\n\treturn nil\n}\n\n// Tally counts votes and validates if a proposal passes.\nfunc (dao *CommonDAO) Tally(proposalID uint64) (passes bool, _ error) {\n\tp := dao.activeProposals.Get(proposalID)\n\tif p == nil {\n\t\treturn false, ErrProposalNotFound\n\t}\n\n\tif p.Status() != StatusActive {\n\t\treturn false, ErrStatusIsNotActive\n\t}\n\n\tif err := dao.checkProposalPasses(p); err != nil {\n\t\t// Don't return an error if proposal failed to pass when tallying\n\t\tif err == ErrProposalFailed {\n\t\t\treturn false, nil\n\t\t}\n\t\treturn false, err\n\t}\n\treturn true, nil\n}\n\n// Execute executes a proposal.\n//\n// By default active proposals can only be executed after their voting deadline passes.\n// DAO deadline checks can optionally be disabled using the `DisableVotingDeadlineCheck` option.\nfunc (dao *CommonDAO) Execute(proposalID uint64) error {\n\tp := dao.activeProposals.Get(proposalID)\n\tif p == nil {\n\t\treturn ErrProposalNotFound\n\t}\n\n\tif p.Status() != StatusActive {\n\t\treturn ErrStatusIsNotActive\n\t}\n\n\tif !dao.disableVotingDeadlineCheck \u0026\u0026 !p.HasVotingDeadlinePassed() {\n\t\treturn ErrVotingDeadlineNotMet\n\t}\n\n\t// From this point any error results in a proposal failure and successful execution\n\terr := p.Validate()\n\n\tif err == nil {\n\t\terr = dao.checkProposalPasses(p)\n\t}\n\n\tif err == nil {\n\t\t// Execute proposal only if it's executable\n\t\tif e, ok := p.Definition().(Executable); ok {\n\t\t\terr = e.Execute(cross)\n\t\t}\n\t}\n\n\t// Proposal fails if there is any error during validation and execution process\n\tif err != nil {\n\t\tp.status = StatusFailed\n\t\tp.statusReason = err.Error()\n\t} else {\n\t\tp.status = StatusPassed\n\t}\n\n\t// Whichever the outcome of the validation, tallying\n\t// and execution consider the proposal finished.\n\tdao.activeProposals.Remove(p.id)\n\tdao.finishedProposals.Add(p)\n\treturn nil\n}\n\nfunc (dao *CommonDAO) checkProposalPasses(p *Proposal) error {\n\trecord := p.VotingRecord().Readonly()\n\tmembers := NewMemberSet(dao.Members())\n\tpasses, err := p.Definition().Tally(record, members)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tif !passes {\n\t\treturn ErrProposalFailed\n\t}\n\treturn nil\n}\n"},{"name":"commondao_options.gno","body":"package commondao\n\n// Option configures the CommonDAO.\ntype Option func(*CommonDAO)\n\n// WithID assigns a unique identifier to the DAO.\nfunc WithID(id uint64) Option {\n\treturn func(dao *CommonDAO) {\n\t\tdao.id = id\n\t}\n}\n\n// WithName assigns a name to the DAO.\nfunc WithName(name string) Option {\n\treturn func(dao *CommonDAO) {\n\t\tdao.name = name\n\t}\n}\n\n// WithDescription assigns a description to the DAO.\nfunc WithDescription(description string) Option {\n\treturn func(dao *CommonDAO) {\n\t\tdao.description = description\n\t}\n}\n\n// WithSlug assigns a URL slug to the DAO.\nfunc WithSlug(slug string) Option {\n\treturn func(dao *CommonDAO) {\n\t\tdao.slug = slug\n\t}\n}\n\n// WithParent assigns a parent DAO.\nfunc WithParent(p *CommonDAO) Option {\n\treturn func(dao *CommonDAO) {\n\t\tdao.parent = p\n\t}\n}\n\n// WithChildren assigns one or more direct child SubDAOs to the DAO.\nfunc WithChildren(children ...*CommonDAO) Option {\n\treturn func(dao *CommonDAO) {\n\t\tfor _, subDAO := range children {\n\t\t\tdao.children.Append(subDAO)\n\t\t}\n\t}\n}\n\n// WithMember assigns a member to the DAO.\nfunc WithMember(addr address) Option {\n\treturn func(dao *CommonDAO) {\n\t\tdao.members.Add(addr)\n\t}\n}\n\n// WithMemberStorage assigns a custom member storage to the DAO.\n// An empty member storage is used by default if the specified storage is nil.\nfunc WithMemberStorage(s MemberStorage) Option {\n\treturn func(dao *CommonDAO) {\n\t\tif s == nil {\n\t\t\ts = NewMemberStorage()\n\t\t}\n\t\tdao.members = s\n\t}\n}\n\n// WithActiveProposalStorage assigns a custom storage for active proposals.\n// A default empty proposal storage is used when the custopm storage is nil.\n// Custom storage implementations can be used to store proposals in a different location.\nfunc WithActiveProposalStorage(s ProposalStorage) Option {\n\treturn func(dao *CommonDAO) {\n\t\tif s == nil {\n\t\t\ts = NewProposalStorage()\n\t\t}\n\t\tdao.activeProposals = s\n\t}\n}\n\n// WithFinishedProposalStorage assigns a custom storage for finished proposals.\n// A default empty proposal storage is used when the custopm storage is nil.\n// Custom storage implementations can be used to store proposals in a different location.\nfunc WithFinishedProposalStorage(s ProposalStorage) Option {\n\treturn func(dao *CommonDAO) {\n\t\tif s == nil {\n\t\t\ts = NewProposalStorage()\n\t\t}\n\t\tdao.finishedProposals = s\n\t}\n}\n\n// DisableVotingDeadlineCheck disables voting deadline check when voting or executing proposals.\n// By default CommonDAO checks that the proposal voting deadline has not been met when a new vote\n// is submitted, before registering the vote, and on proposal execution it also checks that voting\n// deadline has been met before executing a proposal.\n//\n// Disabling these checks can be useful in different use cases, moving the responsibility to check\n// the deadline to the commondao package caller. One example where this could be useful would be\n// in case where 100% or a required number of members of a DAO vote on a proposal and reach consensus\n// before the deadline is met, otherwise proposal would have to wait until deadline to be executed.\nfunc DisableVotingDeadlineCheck() Option {\n\treturn func(dao *CommonDAO) {\n\t\tdao.disableVotingDeadlineCheck = true\n\t}\n}\n"},{"name":"commondao_test.gno","body":"package commondao_test\n\nimport (\n\t\"errors\"\n\t\"testing\"\n\t\"time\"\n\n\t\"gno.land/p/nt/uassert\"\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nfunc TestNew(t *testing.T) {\n\tcases := []struct {\n\t\tname    string\n\t\tparent  *commondao.CommonDAO\n\t\tmembers []address\n\t}{\n\t\t{\n\t\t\tname:    \"with parent\",\n\t\t\tparent:  commondao.New(),\n\t\t\tmembers: []address{\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"},\n\t\t},\n\t\t{\n\t\t\tname:    \"without parent\",\n\t\t\tmembers: []address{\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"},\n\t\t},\n\t\t{\n\t\t\tname: \"multiple members\",\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"no members\",\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tmembersCount := len(tc.members)\n\t\t\toptions := []commondao.Option{commondao.WithParent(tc.parent)}\n\t\t\tfor _, m := range tc.members {\n\t\t\t\toptions = append(options, commondao.WithMember(m))\n\t\t\t}\n\n\t\t\tdao := commondao.New(options...)\n\n\t\t\tif tc.parent == nil {\n\t\t\t\tuassert.Equal(t, nil, dao.Parent())\n\t\t\t} else {\n\t\t\t\tuassert.NotEqual(t, nil, dao.Parent())\n\t\t\t}\n\n\t\t\tuassert.False(t, dao.IsDeleted(), \"expect DAO not to be soft deleted by default\")\n\t\t\turequire.Equal(t, membersCount, dao.Members().Size(), \"dao members\")\n\n\t\t\tvar i int\n\t\t\tdao.Members().IterateByOffset(0, membersCount, func(addr address) bool {\n\t\t\t\tuassert.Equal(t, tc.members[i], addr)\n\t\t\t\ti++\n\t\t\t\treturn false\n\t\t\t})\n\t\t})\n\t}\n}\n\nfunc TestCommonDAOMembersAdd(t *testing.T) {\n\tmember := address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\tdao := commondao.New(commondao.WithMember(\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\"))\n\n\tadded := dao.Members().Add(member)\n\turequire.True(t, added)\n\n\tuassert.Equal(t, 2, dao.Members().Size())\n\tuassert.True(t, dao.Members().Has(member))\n\n\tadded = dao.Members().Add(member)\n\turequire.False(t, added)\n}\n\nfunc TestCommonDAOMembersRemove(t *testing.T) {\n\tmember := address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\tdao := commondao.New(commondao.WithMember(member))\n\n\tremoved := dao.Members().Remove(member)\n\turequire.True(t, removed)\n\n\tremoved = dao.Members().Remove(member)\n\turequire.False(t, removed)\n}\n\nfunc TestCommonDAOMembersHas(t *testing.T) {\n\tcases := []struct {\n\t\tname   string\n\t\tmember address\n\t\tdao    *commondao.CommonDAO\n\t\twant   bool\n\t}{\n\t\t{\n\t\t\tname:   \"member\",\n\t\t\tmember: \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\tdao:    commondao.New(commondao.WithMember(\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\")),\n\t\t\twant:   true,\n\t\t},\n\t\t{\n\t\t\tname:   \"not a dao member\",\n\t\t\tmember: \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\tdao:    commondao.New(commondao.WithMember(\"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\")),\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tgot := tc.dao.Members().Has(tc.member)\n\t\t\tuassert.Equal(t, got, tc.want)\n\t\t})\n\t}\n}\n\nfunc TestCommonDAOPropose(t *testing.T) {\n\tcases := []struct {\n\t\tname    string\n\t\tsetup   func() *commondao.CommonDAO\n\t\tcreator address\n\t\tdef     commondao.ProposalDefinition\n\t\terr     error\n\t}{\n\t\t{\n\t\t\tname:    \"success\",\n\t\t\tsetup:   func() *commondao.CommonDAO { return commondao.New() },\n\t\t\tcreator: \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\tdef:     testPropDef{},\n\t\t},\n\t\t{\n\t\t\tname:  \"nil definition\",\n\t\t\tsetup: func() *commondao.CommonDAO { return commondao.New() },\n\t\t\terr:   commondao.ErrProposalDefinitionRequired,\n\t\t},\n\t\t{\n\t\t\tname:  \"invalid creator address\",\n\t\t\tsetup: func() *commondao.CommonDAO { return commondao.New() },\n\t\t\tdef:   testPropDef{},\n\t\t\terr:   commondao.ErrInvalidCreatorAddress,\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tdao := tc.setup()\n\n\t\t\tp, err := dao.Propose(tc.creator, tc.def)\n\n\t\t\tif tc.err != nil {\n\t\t\t\turequire.ErrorIs(t, err, tc.err)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.NoError(t, err)\n\n\t\t\tfound := dao.ActiveProposals().Has(p.ID())\n\t\t\turequire.True(t, found, \"proposal not found\")\n\t\t\tuassert.Equal(t, p.Creator(), tc.creator)\n\t\t})\n\t}\n}\n\nfunc TestCommonDAOVote(t *testing.T) {\n\tcases := []struct {\n\t\tname       string\n\t\tsetup      func() *commondao.CommonDAO\n\t\tmember     address\n\t\tchoice     commondao.VoteChoice\n\t\tproposalID uint64\n\t\terr        error\n\t}{\n\t\t{\n\t\t\tname: \"success\",\n\t\t\tsetup: func() *commondao.CommonDAO {\n\t\t\t\tmember := address(\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\")\n\t\t\t\tdao := commondao.New(commondao.WithMember(member))\n\t\t\t\tdao.Propose(member, testPropDef{votingPeriod: time.Hour})\n\t\t\t\treturn dao\n\t\t\t},\n\t\t\tmember:     \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\tchoice:     commondao.ChoiceYes,\n\t\t\tproposalID: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"success with custom vote choice\",\n\t\t\tsetup: func() *commondao.CommonDAO {\n\t\t\t\tmember := address(\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\")\n\t\t\t\tdao := commondao.New(commondao.WithMember(member))\n\t\t\t\tdao.Propose(member, testPropDef{\n\t\t\t\t\tvotingPeriod: time.Hour,\n\t\t\t\t\tvoteChoices:  []commondao.VoteChoice{\"FOO\", \"BAR\"},\n\t\t\t\t})\n\t\t\t\treturn dao\n\t\t\t},\n\t\t\tmember:     \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\tchoice:     commondao.VoteChoice(\"BAR\"),\n\t\t\tproposalID: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"success with deadline check disabled\",\n\t\t\tsetup: func() *commondao.CommonDAO {\n\t\t\t\tmember := address(\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\")\n\t\t\t\tdao := commondao.New(\n\t\t\t\t\tcommondao.WithMember(member),\n\t\t\t\t\tcommondao.DisableVotingDeadlineCheck(),\n\t\t\t\t)\n\t\t\t\tdao.Propose(member, testPropDef{})\n\t\t\t\treturn dao\n\t\t\t},\n\t\t\tmember:     \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\tchoice:     commondao.ChoiceYes,\n\t\t\tproposalID: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"invalid vote choice\",\n\t\t\tsetup: func() *commondao.CommonDAO {\n\t\t\t\tmember := address(\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\")\n\t\t\t\tdao := commondao.New(commondao.WithMember(member))\n\t\t\t\tdao.Propose(member, testPropDef{votingPeriod: time.Hour})\n\t\t\t\treturn dao\n\t\t\t},\n\t\t\tmember:     \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\tchoice:     commondao.VoteChoice(\"invalid\"),\n\t\t\tproposalID: 1,\n\t\t\terr:        commondao.ErrInvalidVoteChoice,\n\t\t},\n\t\t{\n\t\t\tname:   \"not a member\",\n\t\t\tsetup:  func() *commondao.CommonDAO { return commondao.New() },\n\t\t\tmember: \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\tchoice: commondao.ChoiceAbstain,\n\t\t\terr:    commondao.ErrNotMember,\n\t\t},\n\t\t{\n\t\t\tname: \"proposal not found\",\n\t\t\tsetup: func() *commondao.CommonDAO {\n\t\t\t\treturn commondao.New(commondao.WithMember(\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\"))\n\t\t\t},\n\t\t\tmember:     \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\tchoice:     commondao.ChoiceAbstain,\n\t\t\tproposalID: 42,\n\t\t\terr:        commondao.ErrProposalNotFound,\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tdao := tc.setup()\n\n\t\t\terr := dao.Vote(tc.member, tc.proposalID, tc.choice, \"\")\n\n\t\t\tif tc.err != nil {\n\t\t\t\turequire.ErrorIs(t, err, tc.err)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.NoError(t, err)\n\n\t\t\tp := dao.ActiveProposals().Get(tc.proposalID)\n\t\t\turequire.NotEqual(t, nil, p, \"proposal not found\")\n\n\t\t\trecord := p.VotingRecord()\n\t\t\tuassert.True(t, record.HasVoted(tc.member))\n\t\t\tuassert.Equal(t, record.VoteCount(tc.choice), 1)\n\t\t})\n\t}\n}\n\nfunc TestCommonDAOTally(t *testing.T) {\n\terrTest := errors.New(\"test\")\n\tmember := address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\tcases := []struct {\n\t\tname   string\n\t\tsetup  func(*commondao.CommonDAO) (proposalID uint64)\n\t\tpasses bool\n\t\terr    error\n\t}{\n\t\t{\n\t\t\tname: \"pass\",\n\t\t\tsetup: func(dao *commondao.CommonDAO) uint64 {\n\t\t\t\treturn dao.MustPropose(member, testPropDef{tallyResult: true}).ID()\n\t\t\t},\n\t\t\tpasses: true,\n\t\t},\n\t\t{\n\t\t\tname: \"fail to pass\",\n\t\t\tsetup: func(dao *commondao.CommonDAO) uint64 {\n\t\t\t\treturn dao.MustPropose(member, testPropDef{tallyResult: false}).ID()\n\t\t\t},\n\t\t\tpasses: false,\n\t\t},\n\t\t{\n\t\t\tname:  \"proposal not found\",\n\t\t\tsetup: func(*commondao.CommonDAO) uint64 { return 404 },\n\t\t\terr:   commondao.ErrProposalNotFound,\n\t\t},\n\t\t// TODO: Requires PR to be merged https://github.com/gnolang/gno/pull/4737\n\t\t// {\n\t\t// \tname: \"proposal status not active\",\n\t\t// \tsetup: func(dao *commondao.CommonDAO) uint64 {\n\t\t// \t\tp := dao.MustPropose(member, testPropDef{tallyResult: true})\n\t\t// \t\tmembers := commondao.NewMemberSet(dao.Members())\n\t\t// \t\tp.Tally(members)\n\t\t// \t\treturn p.ID()\n\t\t// \t},\n\t\t// \terr: commondao.ErrStatusIsNotActive,\n\t\t// },\n\t\t{\n\t\t\tname: \"proposal failed error\",\n\t\t\tsetup: func(dao *commondao.CommonDAO) uint64 {\n\t\t\t\treturn dao.MustPropose(member, testPropDef{tallyErr: commondao.ErrProposalFailed}).ID()\n\t\t\t},\n\t\t\tpasses: false,\n\t\t},\n\t\t{\n\t\t\tname: \"error\",\n\t\t\tsetup: func(dao *commondao.CommonDAO) uint64 {\n\t\t\t\treturn dao.MustPropose(member, testPropDef{tallyErr: errTest}).ID()\n\t\t\t},\n\t\t\terr: errTest,\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tdao := commondao.New(commondao.WithMember(member))\n\t\t\tproposalID := tc.setup(dao)\n\n\t\t\tpasses, err := dao.Tally(proposalID)\n\n\t\t\tif tc.err != nil {\n\t\t\t\tuassert.ErrorIs(t, err, tc.err, \"expect an error\")\n\t\t\t\tuassert.False(t, passes, \"expect tally to fail\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tuassert.NoError(t, err, \"expect no error\")\n\t\t\tuassert.Equal(t, tc.passes, passes, \"expect tally success value to match\")\n\t\t})\n\t}\n}\n\nfunc TestCommonDAOExecute(t *testing.T) {\n\terrTest := errors.New(\"test\")\n\tmember := address(\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\")\n\tcases := []struct {\n\t\tname         string\n\t\tsetup        func() *commondao.CommonDAO\n\t\tproposalID   uint64\n\t\tstatus       commondao.ProposalStatus\n\t\tstatusReason string\n\t\terr          error\n\t}{\n\t\t// TODO: Execution success and error are implemented as filetests\n\t\t//       This is done because proposal definition's Execute() must be\n\t\t//       crossing which is not possible without defining it within a realm.\n\t\t// {\n\t\t// \tname: \"success\",\n\t\t// \tsetup: func() *commondao.CommonDAO {\n\t\t// \t\tdao := commondao.New(commondao.WithMember(member))\n\t\t// \t\tdao.Propose(member, testPropDef{tallyResult: true})\n\t\t// \t\treturn dao\n\t\t// \t},\n\t\t// \tstatus:     StatusPassed,\n\t\t// \tproposalID: 1,\n\t\t// },\n\t\t// {\n\t\t// \tname: \"execution error\",\n\t\t// \tsetup: func() *commondao.CommonDAO {\n\t\t// \t\tdao := commondao.New(commondao.WithMember(member))\n\t\t// \t\tdao.Propose(member, testPropDef{\n\t\t// \t\t\ttallyResult:  true,\n\t\t// \t\t\texecutionErr: errTest,\n\t\t// \t\t})\n\t\t// \t\treturn dao\n\t\t// \t},\n\t\t// \tproposalID:   1,\n\t\t// \tstatus:       StatusFailed,\n\t\t// \tstatusReason: errTest.Error(),\n\t\t// },\n\t\t{\n\t\t\tname:       \"proposal not found\",\n\t\t\tsetup:      func() *commondao.CommonDAO { return commondao.New() },\n\t\t\tproposalID: 1,\n\t\t\terr:        commondao.ErrProposalNotFound,\n\t\t},\n\t\t// TODO: Requires PR to be merged https://github.com/gnolang/gno/pull/4737\n\t\t// {\n\t\t// \tname: \"proposal not active\",\n\t\t// \tsetup: func() *commondao.CommonDAO {\n\t\t// \t\tdao := commondao.New(commondao.WithMember(member))\n\t\t// \t\tp := dao.MustPropose(member, testPropDef{tallyResult: true})\n\t\t// \t\tmembers := commondao.NewMemberSet(dao.Members())\n\t\t// \t\tp.Tally(members)\n\t\t// \t\treturn dao\n\t\t// \t},\n\t\t// \tproposalID: 1,\n\t\t// \terr:        commondao.ErrStatusIsNotActive,\n\t\t// },\n\t\t{\n\t\t\tname: \"voting deadline not met\",\n\t\t\tsetup: func() *commondao.CommonDAO {\n\t\t\t\tdao := commondao.New(commondao.WithMember(member))\n\t\t\t\tdao.Propose(member, testPropDef{votingPeriod: time.Minute * 5})\n\t\t\t\treturn dao\n\t\t\t},\n\t\t\tproposalID: 1,\n\t\t\terr:        commondao.ErrVotingDeadlineNotMet,\n\t\t},\n\t\t{\n\t\t\tname: \"validation error\",\n\t\t\tsetup: func() *commondao.CommonDAO {\n\t\t\t\tdao := commondao.New(commondao.WithMember(member))\n\t\t\t\tdao.Propose(member, testPropDef{validationErr: errTest})\n\t\t\t\treturn dao\n\t\t\t},\n\t\t\tproposalID:   1,\n\t\t\tstatus:       commondao.StatusFailed,\n\t\t\tstatusReason: errTest.Error(),\n\t\t},\n\t\t{\n\t\t\tname: \"tally error\",\n\t\t\tsetup: func() *commondao.CommonDAO {\n\t\t\t\tdao := commondao.New(commondao.WithMember(member))\n\t\t\t\tdao.Propose(member, testPropDef{tallyErr: errTest})\n\t\t\t\treturn dao\n\t\t\t},\n\t\t\tproposalID:   1,\n\t\t\tstatus:       commondao.StatusFailed,\n\t\t\tstatusReason: errTest.Error(),\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tdao := tc.setup()\n\n\t\t\terr := dao.Execute(tc.proposalID)\n\n\t\t\tif tc.err != nil {\n\t\t\t\turequire.ErrorIs(t, err, tc.err, \"expect error to match\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.NoError(t, err, \"expect no error\")\n\n\t\t\tfound := dao.ActiveProposals().Has(tc.proposalID)\n\t\t\turequire.False(t, found, \"proposal should not be active\")\n\n\t\t\tp := dao.FinishedProposals().Get(tc.proposalID)\n\t\t\turequire.NotEqual(t, nil, p, \"proposal must be found\")\n\t\t\tuassert.Equal(t, string(p.Status()), string(tc.status), \"status must match\")\n\t\t\tuassert.Equal(t, string(p.StatusReason()), string(tc.statusReason), \"status reason must match\")\n\t\t})\n\t}\n}\n"},{"name":"doc.gno","body":"// Package provides support to implement custom Decentralized Autonomous Organizations (DAO).\n// It aims to be minimal and flexible, allowing the implementation of multiple DAO use cases,\n// like standalone or hierarchical tree based DAOs.\npackage commondao\n"},{"name":"gnomod.toml","body":"module = \"gno.land/p/devx000/wip/nt/commondao\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\"\n"},{"name":"member_group.gno","body":"package commondao\n\nimport (\n\t\"errors\"\n\t\"strings\"\n)\n\n// MemberGroup defines an interface for a group of members.\ntype MemberGroup interface {\n\t// Name returns the name of the group.\n\tName() string\n\n\t// Members returns the members that belong to the group.\n\tMembers() MemberStorage\n\n\t// SetMeta sets any metadata relevant to the group.\n\t// Metadata can be used to store data which is specific to the group.\n\t// Usually can be used to store parameter values which would be useful\n\t// during proposal voting or tallying to resolve things like voting\n\t// weights or rights for example.\n\tSetMeta(any)\n\n\t// GetMeta returns the group metadata.\n\tGetMeta() any\n}\n\n// NewMemberGroup creates a new group of members.\nfunc NewMemberGroup(name string, members MemberStorage) (MemberGroup, error) {\n\tif members == nil {\n\t\treturn nil, errors.New(\"member storage is required\")\n\t}\n\n\tname = strings.TrimSpace(name)\n\tif name == \"\" {\n\t\treturn nil, errors.New(\"member group name is required\")\n\t}\n\n\treturn \u0026memberGroup{\n\t\tname:    name,\n\t\tmembers: members,\n\t}, nil\n}\n\n// MustNewMemberGroup creates a new group of members or panics on error.\nfunc MustNewMemberGroup(name string, members MemberStorage) MemberGroup {\n\tg, err := NewMemberGroup(name, members)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn g\n}\n\ntype memberGroup struct {\n\tname    string\n\tmembers MemberStorage\n\tmeta    any\n}\n\n// Name returns the name of the group.\nfunc (g memberGroup) Name() string {\n\treturn g.name\n}\n\n// Members returns the members that belong to the group.\nfunc (g memberGroup) Members() MemberStorage {\n\treturn g.members\n}\n\n// SetMeta sets any metadata relevant to the group.\nfunc (g *memberGroup) SetMeta(meta any) {\n\tg.meta = meta\n}\n\n// GetMeta returns the group metadata.\nfunc (g memberGroup) GetMeta() any {\n\treturn g.meta\n}\n"},{"name":"member_group_test.gno","body":"package commondao_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/uassert\"\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nfunc TestMemberGroupNew(t *testing.T) {\n\tg, err := commondao.NewMemberGroup(\"\", nil)\n\turequire.ErrorContains(t, err, \"member storage is required\")\n\n\tstorage := commondao.NewMemberStorage()\n\tg, err = commondao.NewMemberGroup(\"\", storage)\n\turequire.ErrorContains(t, err, \"member group name is required\")\n\n\tname := \"Tier 1\"\n\tg, err = commondao.NewMemberGroup(name, storage)\n\turequire.NoError(t, err, \"expect no error\")\n\tuassert.Equal(t, name, g.Name(), \"expect group name to match\")\n\tuassert.NotNil(t, g.Members(), \"expect members to be not nil\")\n\tuassert.Nil(t, g.GetMeta(), \"expect default group meta to be nil\")\n}\n\nfunc TestMemberGroupMeta(t *testing.T) {\n\tg, err := commondao.NewMemberGroup(\"Test\", commondao.NewMemberStorage())\n\turequire.NoError(t, err, \"expect no error\")\n\n\tg.SetMeta(42)\n\tv := g.GetMeta()\n\turequire.NotEqual(t, nil, v, \"expect metadata to be not nil\")\n\n\tmeta, ok := v.(int)\n\turequire.True(t, ok, \"expect meta type to be int\")\n\tuassert.Equal(t, 42, meta, \"expect metadata to match\")\n}\n"},{"name":"member_grouping.gno","body":"package commondao\n\nimport (\n\t\"errors\"\n\n\t\"gno.land/p/nt/avl\"\n)\n\n// MemberGrouping defines an interface for storing multiple member groups.\n// Member grouping can be used by implementations that require grouping users\n// by roles or by tiers for example.\ntype MemberGrouping interface {\n\t// Size returns the number of groups that grouping contains.\n\tSize() int\n\n\t// Has checks if a group exists.\n\tHas(name string) bool\n\n\t// Add adds an new member group if it doesn't exists.\n\tAdd(name string) (MemberGroup, error)\n\n\t// Get returns a member group.\n\tGet(name string) (_ MemberGroup, found bool)\n\n\t// Delete deletes a member group.\n\tDelete(name string) error\n\n\t// IterateByOffset iterates all member groups.\n\tIterateByOffset(offset, count int, fn func(MemberGroup) bool)\n}\n\n// NewMemberGrouping creates a new members grouping.\nfunc NewMemberGrouping(options ...MemberGroupingOption) MemberGrouping {\n\tg := \u0026memberGrouping{\n\t\tcreateStorage: func(string) MemberStorage { return NewMemberStorage() },\n\t}\n\n\tfor _, apply := range options {\n\t\tapply(g)\n\t}\n\treturn g\n}\n\ntype memberGrouping struct {\n\tgroups        avl.Tree // string(name) -\u003e MemberGroup\n\tcreateStorage func(group string) MemberStorage\n}\n\n// Size returns the number of groups that grouping contains.\nfunc (g memberGrouping) Size() int {\n\treturn g.groups.Size()\n}\n\n// Has checks if a group exists.\nfunc (g memberGrouping) Has(name string) bool {\n\treturn g.groups.Has(name)\n}\n\n// Add adds an new member group if it doesn't exists.\nfunc (g *memberGrouping) Add(name string) (MemberGroup, error) {\n\tif g.groups.Has(name) {\n\t\treturn nil, errors.New(\"member group already exists: \" + name)\n\t}\n\n\tmg, err := NewMemberGroup(name, g.createStorage(name))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tg.groups.Set(name, mg)\n\treturn mg, nil\n}\n\n// Get returns a member group.\nfunc (g memberGrouping) Get(name string) (_ MemberGroup, found bool) {\n\tv, found := g.groups.Get(name)\n\tif !found {\n\t\treturn nil, false\n\t}\n\treturn v.(MemberGroup), true\n}\n\n// Delete deletes a member group.\nfunc (g *memberGrouping) Delete(name string) error {\n\tg.groups.Remove(name)\n\treturn nil\n}\n\n// IterateByOffset iterates all member groups.\nfunc (g memberGrouping) IterateByOffset(offset, count int, fn func(MemberGroup) bool) {\n\tg.groups.IterateByOffset(offset, count, func(_ string, v any) bool {\n\t\treturn fn(v.(MemberGroup))\n\t})\n}\n"},{"name":"member_grouping_options.gno","body":"package commondao\n\n// MemberGroupingOption configures member groupings.\ntype MemberGroupingOption func(MemberGrouping)\n\n// UseStorageFactory assigns a custom member storage creation function to the grouping.\n// Creation function is called each time a member group is added, with the name of the\n// group as the only argument, to create a storage where the new group stores its members.\nfunc UseStorageFactory(fn func(group string) MemberStorage) MemberGroupingOption {\n\tif fn == nil {\n\t\tpanic(\"storage factory function must not be nil\")\n\t}\n\n\treturn func(g MemberGrouping) {\n\t\tgrouping, ok := g.(*memberGrouping)\n\t\tif !ok {\n\t\t\tpanic(\"storage factory not supported by member grouping\")\n\t\t}\n\n\t\tgrouping.createStorage = fn\n\t}\n}\n\n// WithGroups creates multiple members groups.\n// To use a custom member storage factory to create the groups make sure that this option\n// comes after the `UseStorageFactory()` option, otherwise groups are created using the\n// default factory which is `commondao.NewMemberStorage()`.\nfunc WithGroups(names ...string) MemberGroupingOption {\n\treturn func(g MemberGrouping) {\n\t\tfor _, name := range names {\n\t\t\tif _, err := g.Add(name); err != nil {\n\t\t\t\tpanic(err)\n\t\t\t}\n\t\t}\n\t}\n}\n"},{"name":"member_grouping_test.gno","body":"package commondao_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/uassert\"\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nfunc TestMemberGroupingAdd(t *testing.T) {\n\tt.Run(\"defauls\", func(t *testing.T) {\n\t\tname := \"Foo\"\n\t\tg := commondao.NewMemberGrouping()\n\n\t\tuassert.False(t, g.Has(name), \"expect grouping group not to be found\")\n\t\tuassert.Equal(t, 0, g.Size(), \"expect grouping to be empty\")\n\t})\n\n\tt.Run(\"success\", func(t *testing.T) {\n\t\tname := \"Foo\"\n\t\tg := commondao.NewMemberGrouping()\n\t\tmg, err := g.Add(name)\n\n\t\turequire.NoError(t, err, \"expect no error\")\n\t\tuassert.True(t, g.Has(name), \"expect grouping group to be found\")\n\t\tuassert.Equal(t, 1, g.Size(), \"expect grouping to have a single group\")\n\n\t\turequire.True(t, mg != nil, \"expected grouping group to be not nil\")\n\t\tuassert.Equal(t, name, mg.Name(), \"expect group to have the right name\")\n\t})\n\n\tt.Run(\"duplicated name\", func(t *testing.T) {\n\t\tname := \"Foo\"\n\t\tg := commondao.NewMemberGrouping()\n\t\t_, err := g.Add(name)\n\t\turequire.NoError(t, err, \"expect no error\")\n\n\t\t_, err = g.Add(name)\n\t\tuassert.ErrorContains(t, err, \"member group already exists: Foo\", \"expect duplication error\")\n\t})\n}\n\nfunc TestMemberGroupingGet(t *testing.T) {\n\tt.Run(\"success\", func(t *testing.T) {\n\t\tname := \"Foo\"\n\t\tg := commondao.NewMemberGrouping()\n\t\tg.Add(name)\n\n\t\tmg, found := g.Get(name)\n\n\t\turequire.True(t, found, \"expect grouping group to be found\")\n\t\turequire.True(t, mg != nil, \"expect grouping group to be not nil\")\n\t\tuassert.Equal(t, name, mg.Name(), \"expect group to have the right name\")\n\t})\n\n\tt.Run(\"group not found\", func(t *testing.T) {\n\t\tg := commondao.NewMemberGrouping()\n\n\t\t_, found := g.Get(\"Foo\")\n\n\t\turequire.False(t, found, \"expect grouping group to be not found\")\n\t})\n}\n\nfunc TestMemberGroupingDelete(t *testing.T) {\n\tname := \"Foo\"\n\tg := commondao.NewMemberGrouping()\n\tg.Add(name)\n\n\terr := g.Delete(name)\n\n\turequire.NoError(t, err, \"expect no error\")\n\tuassert.False(t, g.Has(name), \"expect grouping group not to be found\")\n}\n\nfunc TestMemberGroupingIterate(t *testing.T) {\n\tgroups := []string{\"Tier 1\", \"Tier 2\", \"Tier 3\"}\n\tg := commondao.NewMemberGrouping()\n\tfor _, name := range groups {\n\t\tg.Add(name)\n\t}\n\n\tvar i int\n\tg.IterateByOffset(0, g.Size(), func(mg commondao.MemberGroup) bool {\n\t\turequire.True(t, mg != nil, \"expect member group not to be nil\")\n\t\turequire.Equal(t, groups[i], mg.Name(), \"expect group to be iterated in order\")\n\n\t\ti++\n\t\treturn false\n\t})\n\n\tuassert.Equal(t, len(groups), i, \"expect all groups to be iterated\")\n}\n\nfunc TestMemberGroupingUseStorageFactory(t *testing.T) {\n\tvar (\n\t\tgroupName     string\n\t\tdefaultMember = address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t)\n\n\tfn := func(group string) commondao.MemberStorage {\n\t\tgroupName = group\n\n\t\t// Create storage and add a default member\n\t\ts := commondao.NewMemberStorage()\n\t\ts.Add(defaultMember)\n\t\treturn s\n\t}\n\n\tgrouping := commondao.NewMemberGrouping(commondao.UseStorageFactory(fn))\n\tgroup, err := grouping.Add(\"foo\")\n\n\turequire.NoError(t, err, \"expect no group creation error\")\n\tuassert.True(t, group.Members().Has(defaultMember), \"expect storage to have a default member\")\n\tuassert.Equal(t, \"foo\", groupName, \"expect group name to match\")\n}\n\nfunc TestMemberGroupingWithGroups(t *testing.T) {\n\tdefaultGroups := []string{\"foo\", \"bar\", \"baz\"}\n\tgrouping := commondao.NewMemberGrouping(commondao.WithGroups(defaultGroups...))\n\n\turequire.Equal(t, len(defaultGroups), grouping.Size(), \"expect groups to be created\")\n\tfor _, group := range defaultGroups {\n\t\tuassert.True(t, grouping.Has(group), \"expect group to be found: \"+group)\n\t}\n}\n"},{"name":"member_storage.gno","body":"package commondao\n\nimport (\n\t\"gno.land/p/moul/addrset\"\n)\n\n// MemberStorage defines an interface for member storages.\ntype MemberStorage interface {\n\t// Size returns the number of members in the storage.\n\tSize() int\n\n\t// Has checks if a member exists in the storage.\n\tHas(address) bool\n\n\t// Add adds a member to the storage.\n\t// Returns true if the member is added, or false if it already existed.\n\tAdd(address) bool\n\n\t// Remove removes a member from the storage.\n\t// Returns true if member was removed, or false if it was not found.\n\tRemove(address) bool\n\n\t// Grouping returns member groups when supported.\n\t// When nil is returned it means that grouping of members is not supported.\n\t// Member groups can be used by implementations that require grouping users\n\t// by roles or by tiers for example.\n\tGrouping() MemberGrouping\n\n\t// IterateByOffset iterates members starting at the given offset.\n\t// The callback can return true to stop iteration.\n\tIterateByOffset(offset, count int, fn func(address) bool)\n}\n\n// NewMemberStorage creates a new member storage.\n// Function returns a new member storage that doesn't support member groups.\n// This type of storage is useful when there is no need to group members.\nfunc NewMemberStorage() MemberStorage {\n\treturn \u0026memberStorage{}\n}\n\n// NewMemberStorageWithGrouping a new member storage with support for member groups.\n// Member groups can be used by implementations that require grouping users by roles\n// or by tiers for example.\nfunc NewMemberStorageWithGrouping(options ...MemberGroupingOption) MemberStorage {\n\treturn \u0026memberStorage{grouping: NewMemberGrouping(options...)}\n}\n\ntype memberStorage struct {\n\taddrset.Set\n\n\tgrouping MemberGrouping\n}\n\n// Grouping returns member groups.\nfunc (s memberStorage) Grouping() MemberGrouping {\n\treturn s.grouping\n}\n\n// CountStorageMembers returns the total number of members in the storage.\n// It counts all members in each group and the ones without group.\nfunc CountStorageMembers(s MemberStorage) int {\n\tif s == nil {\n\t\treturn 0\n\t}\n\n\tc := s.Size()\n\ts.Grouping().IterateByOffset(0, s.Grouping().Size(), func(g MemberGroup) bool {\n\t\tc += g.Members().Size()\n\t\treturn false\n\t})\n\treturn c\n}\n"},{"name":"member_storage_test.gno","body":"package commondao_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/uassert\"\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nfunc TestMemberStorageWithGrouping(t *testing.T) {\n\t// Prepare\n\ttiers := []struct {\n\t\tName    string\n\t\tWeight  int\n\t\tMembers []address\n\t}{\n\t\t{\n\t\t\tName:   \"Tier 1\",\n\t\t\tWeight: 3,\n\t\t\tMembers: []address{\n\t\t\t\t\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\",\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tName:   \"Tier 2\",\n\t\t\tWeight: 2,\n\t\t\tMembers: []address{\n\t\t\t\t\"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\",\n\t\t\t},\n\t\t},\n\t}\n\n\tstorage := commondao.NewMemberStorageWithGrouping()\n\tfor _, tier := range tiers {\n\t\tmg, err := storage.Grouping().Add(tier.Name)\n\t\turequire.NoError(t, err, \"expect no error adding tier\")\n\n\t\tmg.SetMeta(tier.Weight)\n\n\t\tfor _, addr := range tier.Members {\n\t\t\tok := mg.Members().Add(addr)\n\t\t\turequire.True(t, ok, \"expect member to be added\")\n\t\t}\n\t}\n\n\t// Assert\n\tfor i := 0; i \u003c len(tiers); i++ {\n\t\ttier := tiers[i]\n\t\tmg, found := storage.Grouping().Get(tier.Name)\n\t\turequire.True(t, found, \"expect member group to be found\")\n\n\t\tv := mg.GetMeta()\n\t\turequire.True(t, v != nil, \"expect meta to be not nil\")\n\n\t\tweight, ok := v.(int)\n\t\turequire.True(t, ok, \"expect group metadata to be an integer\")\n\t\tuassert.Equal(t, tier.Weight, weight, \"expect group weight to match\")\n\n\t\tvar i int\n\t\tmg.Members().IterateByOffset(0, len(tier.Members), func(addr address) bool {\n\t\t\tuassert.Equal(t, tier.Members[i], addr, \"expect tier member to match\")\n\n\t\t\ti++\n\t\t\treturn false\n\t\t})\n\n\t\tuassert.Equal(t, len(tier.Members), i, \"expect all tier members to be iterated\")\n\t}\n}\n\nfunc TestCountStorageMembers(t *testing.T) {\n\tstorage := commondao.NewMemberStorageWithGrouping()\n\tstorage.Add(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\")\n\n\tg, err := storage.Grouping().Add(\"A\")\n\turequire.NoError(t, err, \"expect no error creating member group A\")\n\n\tg.Members().Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\tg.Members().Add(\"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\")\n\n\tg, err = storage.Grouping().Add(\"B\")\n\turequire.NoError(t, err, \"expect no error creating member group B\")\n\n\tg.Members().Add(\"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\") // Add a member that exists in other group\n\n\tuassert.Equal(t, 4, commondao.CountStorageMembers(storage))\n}\n"},{"name":"memberset.gno","body":"package commondao\n\n// NewMemberSet creates a new readonly memberset.\nfunc NewMemberSet(s MemberStorage) MemberSet {\n\treturn MemberSet{s}\n}\n\n// MemberSet contains a readonly list of member addresses.\ntype MemberSet struct {\n\tstorage MemberStorage\n}\n\n// Size returns the number of addresses in the set.\nfunc (s MemberSet) Size() int {\n\treturn s.storage.Size()\n}\n\n// Has checks if an address exists in the set.\nfunc (s MemberSet) Has(member address) bool {\n\treturn s.storage.Has(member)\n}\n\n// IterateByOffset walks through addresses starting at the given offset.\n// The callback should return true to stop iteration.\nfunc (s MemberSet) IterateByOffset(offset, count int, fn func(address) bool) {\n\ts.storage.IterateByOffset(offset, count, fn)\n}\n"},{"name":"memberset_test.gno","body":"package commondao_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/uassert\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nfunc TestMemberSetSize(t *testing.T) {\n\tstorage := commondao.NewMemberStorage()\n\tmembers := commondao.NewMemberSet(storage)\n\tuassert.Equal(t, 0, members.Size(), \"expect size 0\")\n\n\tstorage.Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\tmembers = commondao.NewMemberSet(storage)\n\tuassert.Equal(t, 1, members.Size(), \"expect size 1\")\n\n\tstorage.Add(\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\")\n\tmembers = commondao.NewMemberSet(storage)\n\tuassert.Equal(t, 2, members.Size(), \"expect size 2\")\n}\n\nfunc TestMemberSetHas(t *testing.T) {\n\tstorage := commondao.NewMemberStorage()\n\tstorage.Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\n\tmembers := commondao.NewMemberSet(storage)\n\n\tuassert.True(t, members.Has(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"), \"expect member is found\")\n\tuassert.False(t, members.Has(\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\"), \"expect member is not found\")\n}\n\nfunc TestMemberSetIterateByOffset(t *testing.T) {\n\tstorage := commondao.NewMemberStorage()\n\tstorage.Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\tstorage.Add(\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\")\n\tstorage.Add(\"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\")\n\n\tcommondao.NewMemberSet(storage).IterateByOffset(1, 1, func(addr address) bool {\n\t\tuassert.Equal(t, \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\", addr.String(), \"expect address to match\")\n\t\treturn true\n\t})\n}\n"},{"name":"proposal.gno","body":"package commondao\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"gno.land/p/nt/avl\"\n)\n\nconst (\n\tStatusActive ProposalStatus = \"active\"\n\tStatusFailed                = \"failed\"\n\tStatusPassed                = \"passed\"\n)\n\nconst (\n\tChoiceNone       VoteChoice = \"\"\n\tChoiceYes                   = \"YES\"\n\tChoiceNo                    = \"NO\"\n\tChoiceNoWithVeto            = \"NO WITH VETO\"\n\tChoiceAbstain               = \"ABSTAIN\"\n)\n\nconst (\n\tQuorumOneThird     float64 = 0.33 // percentage\n\tQuorumHalf                 = 0.5\n\tQuorumTwoThirds            = 0.66\n\tQuorumThreeFourths         = 0.75\n\tQuorumFull                 = 1\n)\n\n// MaxCustomVoteChoices defines the maximum number of custom\n// vote choices that a proposal definition can define.\nconst MaxCustomVoteChoices = 10\n\nvar (\n\tErrInvalidCreatorAddress      = errors.New(\"invalid proposal creator address\")\n\tErrMaxCustomVoteChoices       = errors.New(\"max number of custom vote choices exceeded\")\n\tErrProposalDefinitionRequired = errors.New(\"proposal definition is required\")\n\tErrNoQuorum                   = errors.New(\"no quorum\")\n\tErrStatusIsNotActive          = errors.New(\"proposal status is not active\")\n)\n\ntype (\n\t// ProposalStatus defines a type for different proposal states.\n\tProposalStatus string\n\n\t// VoteChoice defines a type for proposal vote choices.\n\tVoteChoice string\n\n\t// Proposal defines a DAO proposal.\n\tProposal struct {\n\t\tid             uint64\n\t\tstatus         ProposalStatus\n\t\tdefinition     ProposalDefinition\n\t\tcreator        address\n\t\trecord         *VotingRecord // TODO: Add support for multiple voting records\n\t\tstatusReason   string\n\t\tvoteChoices    *avl.Tree // string(VoteChoice) -\u003e struct{}\n\t\tvotingDeadline time.Time\n\t\tcreatedAt      time.Time\n\t}\n\n\t// ProposalDefinition defines an interface for custom proposal definitions.\n\t// These definitions define proposal content and behavior, they esentially\n\t// allow the definition for different proposal types.\n\tProposalDefinition interface {\n\t\t// Title returns the proposal title.\n\t\tTitle() string\n\n\t\t// Body returns proposal's body.\n\t\t// It usually contains description or values that are specific to the proposal,\n\t\t// like a description of the proposal's motivation or the list of values that\n\t\t// would be applied when the proposal is approved.\n\t\tBody() string\n\n\t\t// VotingPeriod returns the period where votes are allowed after proposal creation.\n\t\t// It is used to calculate the voting deadline from the proposal's creationd date.\n\t\tVotingPeriod() time.Duration\n\n\t\t// Tally counts the number of votes and verifies if proposal passes.\n\t\t// It receives a readonly record containing the votes that has been\n\t\t// submitted for the proposal and also the list of current DAO members.\n\t\tTally(ReadonlyVotingRecord, MemberSet) (passes bool, _ error)\n\t}\n\n\t// Validable defines an interface for proposal definitions that require state validation.\n\t// Validation is done before execution and normally also during proposal rendering.\n\tValidable interface {\n\t\t// Validate validates that the proposal is valid for the current state.\n\t\tValidate() error\n\t}\n\n\t// Executable defines an interface for proposal definitions that modify state on approval.\n\t// Once proposals are executed they are archived and considered finished.\n\tExecutable interface {\n\t\t// Execute executes the proposal.\n\t\tExecute(realm) error\n\t}\n\n\t// CustomizableVoteChoices defines an interface for proposal definitions that want\n\t// to customize the list of allowed voting choices.\n\tCustomizableVoteChoices interface {\n\t\t// CustomVoteChoices returns a list of valid voting choices.\n\t\t// Choices are considered valid only when there are at least two possible choices\n\t\t// otherwise proposal defaults to using YES, NO and ABSTAIN as valid choices.\n\t\tCustomVoteChoices() []VoteChoice\n\t}\n)\n\n// MustValidate validates that a proposal is valid for the current state or panics on error.\nfunc MustValidate(v Validable) {\n\tif v == nil {\n\t\tpanic(\"validable proposal definition is nil\")\n\t}\n\n\tif err := v.Validate(); err != nil {\n\t\tpanic(err)\n\t}\n}\n\n// MustExecute executes an executable proposal or panics on error.\nfunc MustExecute(e Executable) {\n\tif e == nil {\n\t\tpanic(\"executable proposal definition is nil\")\n\t}\n\n\tif err := e.Execute(cross); err != nil {\n\t\tpanic(err)\n\t}\n}\n\n// NewProposal creates a new DAO proposal.\nfunc NewProposal(id uint64, creator address, d ProposalDefinition) (*Proposal, error) {\n\tif d == nil {\n\t\treturn nil, ErrProposalDefinitionRequired\n\t}\n\n\tif !creator.IsValid() {\n\t\treturn nil, ErrInvalidCreatorAddress\n\t}\n\n\tnow := time.Now()\n\tp := \u0026Proposal{\n\t\tid:             id,\n\t\tstatus:         StatusActive,\n\t\tdefinition:     d,\n\t\tcreator:        creator,\n\t\trecord:         \u0026VotingRecord{},\n\t\tvoteChoices:    avl.NewTree(),\n\t\tvotingDeadline: now.Add(d.VotingPeriod()),\n\t\tcreatedAt:      now,\n\t}\n\n\tif v, ok := d.(CustomizableVoteChoices); ok {\n\t\tchoices := v.CustomVoteChoices()\n\t\tif len(choices) \u003e MaxCustomVoteChoices {\n\t\t\treturn nil, ErrMaxCustomVoteChoices\n\t\t}\n\n\t\tfor _, c := range choices {\n\t\t\tp.voteChoices.Set(string(c), struct{}{})\n\t\t}\n\t}\n\n\t// Use default voting choices when the definition returns none or a single vote choice\n\tif p.voteChoices.Size() \u003c 2 {\n\t\tp.voteChoices.Set(string(ChoiceYes), struct{}{})\n\t\tp.voteChoices.Set(string(ChoiceNo), struct{}{})\n\t\tp.voteChoices.Set(string(ChoiceAbstain), struct{}{})\n\t}\n\treturn p, nil\n}\n\n// ID returns the unique proposal identifies.\nfunc (p Proposal) ID() uint64 {\n\treturn p.id\n}\n\n// Definition returns the proposal definition.\n// Proposal definitions define proposal content and behavior.\nfunc (p Proposal) Definition() ProposalDefinition {\n\treturn p.definition\n}\n\n// Status returns the current proposal status.\nfunc (p Proposal) Status() ProposalStatus {\n\treturn p.status\n}\n\n// Creator returns the address of the account that created the proposal.\nfunc (p Proposal) Creator() address {\n\treturn p.creator\n}\n\n// CreatedAt returns the time that proposal was created.\nfunc (p Proposal) CreatedAt() time.Time {\n\treturn p.createdAt\n}\n\n// VotingRecord returns a record that contains all the votes submitted for the proposal.\nfunc (p Proposal) VotingRecord() *VotingRecord {\n\treturn p.record\n}\n\n// StatusReason returns an optional reason that lead to the current proposal status.\n// Reason is mostyl useful when a proposal fails.\nfunc (p Proposal) StatusReason() string {\n\treturn p.statusReason\n}\n\n// VotingDeadline returns the deadline after which no more votes should be allowed.\nfunc (p Proposal) VotingDeadline() time.Time {\n\treturn p.votingDeadline\n}\n\n// VoteChoices returns the list of vote choices allowed for the proposal.\nfunc (p Proposal) VoteChoices() []VoteChoice {\n\tchoices := make([]VoteChoice, 0, p.voteChoices.Size())\n\tp.voteChoices.Iterate(\"\", \"\", func(c string, _ any) bool {\n\t\tchoices = append(choices, VoteChoice(c))\n\t\treturn false\n\t})\n\treturn choices\n}\n\n// HasVotingDeadlinePassed checks if the voting deadline has been met.\nfunc (p Proposal) HasVotingDeadlinePassed() bool {\n\treturn !time.Now().Before(p.VotingDeadline())\n}\n\n// Validate validates that a proposal is valid for the current state.\n// Validation is done when proposal status is active and when the definition supports validation.\nfunc (p Proposal) Validate() error {\n\tif p.status != StatusActive {\n\t\treturn nil\n\t}\n\n\tif v, ok := p.definition.(Validable); ok {\n\t\treturn v.Validate()\n\t}\n\treturn nil\n}\n\n// IsVoteChoiceValid checks if a vote choice is valid for the proposal.\nfunc (p Proposal) IsVoteChoiceValid(c VoteChoice) bool {\n\treturn p.voteChoices.Has(string(c))\n}\n\n// IsQuorumReached checks if a participation quorum is reach.\nfunc IsQuorumReached(quorum float64, r ReadonlyVotingRecord, members MemberSet) bool {\n\tif members.Size() \u003c= 0 || quorum \u003c= 0 {\n\t\treturn false\n\t}\n\n\tvar totalCount int\n\tr.IterateVotesCount(func(c VoteChoice, voteCount int) bool {\n\t\t// Don't count explicit abstentions or invalid votes\n\t\tif c != ChoiceNone \u0026\u0026 c != ChoiceAbstain {\n\t\t\ttotalCount += r.VoteCount(c)\n\t\t}\n\t\treturn false\n\t})\n\n\tpercentage := float64(totalCount) / float64(members.Size())\n\treturn percentage \u003e= quorum\n}\n"},{"name":"proposal_storage.gno","body":"package commondao\n\nimport (\n\t\"gno.land/p/nt/avl\"\n\t\"gno.land/p/nt/seqid\"\n)\n\n// ProposalStorage defines an interface for proposal storages.\ntype ProposalStorage interface {\n\t// Has checks if a proposal exists.\n\tHas(id uint64) bool\n\n\t// Get returns a proposal or nil when proposal doesn't exist.\n\tGet(id uint64) *Proposal\n\n\t// Add adds a proposal to the storage.\n\tAdd(*Proposal)\n\n\t// Remove removes a proposal from the storage.\n\tRemove(id uint64)\n\n\t// Size returns the number of proposals that the storage contains.\n\tSize() int\n\n\t// Iterate iterates proposals.\n\tIterate(offset, count int, reverse bool, fn func(*Proposal) bool) bool\n}\n\n// NewProposalStorage creates a new proposal storage.\nfunc NewProposalStorage() ProposalStorage {\n\treturn \u0026proposalStorage{avl.NewTree()}\n}\n\ntype proposalStorage struct {\n\tstorage *avl.Tree // string(proposal ID) -\u003e *Proposal\n}\n\n// Has checks if a proposal exists.\nfunc (s proposalStorage) Has(id uint64) bool {\n\treturn s.storage.Has(makeProposalKey(id))\n}\n\n// Get returns a proposal or nil when proposal doesn't exist.\nfunc (s proposalStorage) Get(id uint64) *Proposal {\n\tif v, found := s.storage.Get(makeProposalKey(id)); found {\n\t\treturn v.(*Proposal)\n\t}\n\treturn nil\n}\n\n// Add adds a proposal to the storage.\nfunc (s *proposalStorage) Add(p *Proposal) {\n\tif p == nil {\n\t\treturn\n\t}\n\n\ts.storage.Set(makeProposalKey(p.ID()), p)\n}\n\n// Remove removes a proposal from the storage.\nfunc (s *proposalStorage) Remove(id uint64) {\n\ts.storage.Remove(makeProposalKey(id))\n}\n\n// Size returns the number of proposals that the storage contains.\nfunc (s proposalStorage) Size() int {\n\treturn s.storage.Size()\n}\n\n// Iterate iterates proposals.\nfunc (s proposalStorage) Iterate(offset, count int, reverse bool, fn func(*Proposal) bool) bool {\n\tif fn == nil {\n\t\treturn false\n\t}\n\n\tcb := func(_ string, v any) bool { return fn(v.(*Proposal)) }\n\n\tif reverse {\n\t\treturn s.storage.ReverseIterateByOffset(offset, count, cb)\n\t}\n\treturn s.storage.IterateByOffset(offset, count, cb)\n}\n\nfunc makeProposalKey(id uint64) string {\n\treturn seqid.ID(id).String()\n}\n"},{"name":"proposal_storage_test.gno","body":"package commondao_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/uassert\"\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nfunc TestProposalStorageAdd(t *testing.T) {\n\tp, _ := commondao.NewProposal(1, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", testPropDef{})\n\ts := commondao.NewProposalStorage()\n\tinitialSize := s.Size()\n\n\ts.Add(p)\n\n\tuassert.Equal(t, 0, initialSize, \"expect initial storage to be empty\")\n\tuassert.Equal(t, 1, s.Size(), \"expect storage to have one proposal\")\n\tuassert.True(t, s.Has(p.ID()), \"expect proposal to be found\")\n}\n\nfunc TestProposalStorageGet(t *testing.T) {\n\tp, _ := commondao.NewProposal(1, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", testPropDef{})\n\ts := commondao.NewProposalStorage()\n\ts.Add(p)\n\n\tp2 := s.Get(p.ID())\n\n\turequire.NotEqual(t, nil, p2, \"expect proposal to be found\")\n\tuassert.Equal(t, p.ID(), p2.ID(), \"expect proposal ID to match\")\n}\n\nfunc TestProposalStorageRemove(t *testing.T) {\n\tp, _ := commondao.NewProposal(1, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", testPropDef{})\n\ts := commondao.NewProposalStorage()\n\ts.Add(p)\n\n\ts.Remove(p.ID())\n\n\tuassert.Equal(t, 0, s.Size(), \"expect storage to be empty\")\n\tuassert.False(t, s.Has(p.ID()), \"expect proposal to be not found\")\n}\n\nfunc TestProposalStorageIterate(t *testing.T) {\n\tvar (\n\t\ti   int\n\t\tids = []uint64{22, 33, 44}\n\t\ts   = commondao.NewProposalStorage()\n\t)\n\n\tfor _, id := range ids {\n\t\tp, _ := commondao.NewProposal(id, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", testPropDef{})\n\t\ts.Add(p)\n\t}\n\n\ts.Iterate(0, s.Size(), false, func(p *commondao.Proposal) bool {\n\t\tuassert.Equal(t, ids[i], p.ID(), \"expect proposal ID to match\")\n\n\t\ti++\n\t\treturn i == s.Size()\n\t})\n\n\tuassert.Equal(t, len(ids), i, \"expect storage to iterate all proposals\")\n\n\ti = s.Size() - 1\n\ts.Iterate(0, s.Size(), true, func(p *commondao.Proposal) bool {\n\t\tuassert.Equal(t, ids[i], p.ID(), \"expect proposal ID to match\")\n\n\t\ti--\n\t\treturn i == -1\n\t})\n\n\tuassert.Equal(t, -1, i, \"expect storage to iterate all proposals in reverse order\")\n}\n"},{"name":"proposal_test.gno","body":"package commondao_test\n\nimport (\n\t\"errors\"\n\t\"testing\"\n\t\"time\"\n\n\t\"gno.land/p/nt/uassert\"\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nfunc TestProposalNew(t *testing.T) {\n\tcases := []struct {\n\t\tname       string\n\t\tcreator    address\n\t\tdefinition commondao.ProposalDefinition\n\t\terr        error\n\t}{\n\t\t{\n\t\t\tname:       \"success\",\n\t\t\tcreator:    \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tdefinition: testPropDef{votingPeriod: time.Minute * 10},\n\t\t},\n\t\t{\n\t\t\tname:       \"invalid creator address\",\n\t\t\tcreator:    \"invalid\",\n\t\t\tdefinition: testPropDef{},\n\t\t\terr:        commondao.ErrInvalidCreatorAddress,\n\t\t},\n\t\t{\n\t\t\tname:    \"max custom vote choices exceeded\",\n\t\t\tcreator: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tdefinition: testPropDef{\n\t\t\t\tvoteChoices: make([]commondao.VoteChoice, commondao.MaxCustomVoteChoices+1),\n\t\t\t},\n\t\t\terr: commondao.ErrMaxCustomVoteChoices,\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tid := uint64(1)\n\n\t\t\tp, err := commondao.NewProposal(id, tc.creator, tc.definition)\n\n\t\t\tif tc.err != nil {\n\t\t\t\turequire.ErrorIs(t, err, tc.err, \"expected an error\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.NoError(t, err, \"unexpected error\")\n\t\t\tuassert.Equal(t, p.ID(), id)\n\t\t\tuassert.NotEqual(t, p.Definition(), nil)\n\t\t\tuassert.True(t, p.Status() == commondao.StatusActive)\n\t\t\tuassert.Equal(t, p.Creator(), tc.creator)\n\t\t\tuassert.False(t, p.CreatedAt().IsZero())\n\t\t\tuassert.NotEqual(t, p.VotingRecord(), nil)\n\t\t\tuassert.Empty(t, p.StatusReason())\n\t\t\tuassert.True(t, p.VotingDeadline() == p.CreatedAt().Add(tc.definition.VotingPeriod()))\n\t\t})\n\t}\n}\n\nfunc TestProposalVoteChoices(t *testing.T) {\n\tcases := []struct {\n\t\tname       string\n\t\tdefinition commondao.ProposalDefinition\n\t\tchoices    []commondao.VoteChoice\n\t}{\n\t\t{\n\t\t\tname:       \"custom choices\",\n\t\t\tdefinition: testPropDef{voteChoices: []commondao.VoteChoice{\"FOO\", \"BAR\", \"BAZ\"}},\n\t\t\tchoices: []commondao.VoteChoice{\n\t\t\t\t\"BAR\",\n\t\t\t\t\"BAZ\",\n\t\t\t\t\"FOO\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:       \"defaults because of empty custom choice list\",\n\t\t\tdefinition: testPropDef{voteChoices: []commondao.VoteChoice{}},\n\t\t\tchoices: []commondao.VoteChoice{\n\t\t\t\tcommondao.ChoiceAbstain,\n\t\t\t\tcommondao.ChoiceNo,\n\t\t\t\tcommondao.ChoiceYes,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:       \"defaults because of single custom choice list\",\n\t\t\tdefinition: testPropDef{voteChoices: []commondao.VoteChoice{\"FOO\"}},\n\t\t\tchoices: []commondao.VoteChoice{\n\t\t\t\tcommondao.ChoiceAbstain,\n\t\t\t\tcommondao.ChoiceNo,\n\t\t\t\tcommondao.ChoiceYes,\n\t\t\t},\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tp, _ := commondao.NewProposal(1, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", testPropDef{\n\t\t\t\tvoteChoices: tc.choices,\n\t\t\t})\n\n\t\t\tchoices := p.VoteChoices()\n\n\t\t\turequire.Equal(t, len(choices), len(tc.choices), \"expect vote choice count to match\")\n\t\t\tfor i, c := range choices {\n\t\t\t\turequire.True(t, tc.choices[i] == c, \"expect vote choice to match\")\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunc TestIsQuorumReached(t *testing.T) {\n\tcases := []struct {\n\t\tname    string\n\t\tquorum  float64\n\t\tmembers []address\n\t\tvotes   []commondao.Vote\n\t\tfail    bool\n\t}{\n\t\t{\n\t\t\tname:   \"one third\",\n\t\t\tquorum: commondao.QuorumOneThird,\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t},\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:   \"one third no quorum\",\n\t\t\tquorum: commondao.QuorumOneThird,\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t},\n\t\t\tfail: true,\n\t\t},\n\t\t{\n\t\t\tname:   \"half\",\n\t\t\tquorum: commondao.QuorumHalf,\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t\t\"g125t352u4pmdrr57emc4pe04y40sknr5ztng5mt\",\n\t\t\t},\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:   \"half no quorum\",\n\t\t\tquorum: commondao.QuorumHalf,\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t\t\"g125t352u4pmdrr57emc4pe04y40sknr5ztng5mt\",\n\t\t\t},\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t},\n\t\t\t},\n\t\t\tfail: true,\n\t\t},\n\t\t{\n\t\t\tname:   \"two thirds\",\n\t\t\tquorum: commondao.QuorumTwoThirds,\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t},\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:   \"two thirds no quorum\",\n\t\t\tquorum: commondao.QuorumTwoThirds,\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t},\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t},\n\t\t\t},\n\t\t\tfail: true,\n\t\t},\n\t\t{\n\t\t\tname:   \"three fourths\",\n\t\t\tquorum: commondao.QuorumThreeFourths,\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t\t\"g125t352u4pmdrr57emc4pe04y40sknr5ztng5mt\",\n\t\t\t},\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g125t352u4pmdrr57emc4pe04y40sknr5ztng5mt\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:   \"three fourths no quorum\",\n\t\t\tquorum: commondao.QuorumThreeFourths,\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\",\n\t\t\t\t\"g125t352u4pmdrr57emc4pe04y40sknr5ztng5mt\",\n\t\t\t},\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t},\n\t\t\t},\n\t\t\tfail: true,\n\t\t},\n\t\t{\n\t\t\tname:   \"full\",\n\t\t\tquorum: commondao.QuorumFull,\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t},\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:   \"full no quorum\",\n\t\t\tquorum: commondao.QuorumFull,\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t},\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t},\n\t\t\t},\n\t\t\tfail: true,\n\t\t},\n\t\t{\n\t\t\tname:   \"no quorum with empty vote\",\n\t\t\tquorum: commondao.QuorumHalf,\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t},\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\tChoice:  commondao.ChoiceNone,\n\t\t\t\t},\n\t\t\t},\n\t\t\tfail: true,\n\t\t},\n\t\t{\n\t\t\tname:   \"no quorum with abstention\",\n\t\t\tquorum: commondao.QuorumHalf,\n\t\t\tmembers: []address{\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t},\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\",\n\t\t\t\t\tChoice:  commondao.ChoiceAbstain,\n\t\t\t\t},\n\t\t\t},\n\t\t\tfail: true,\n\t\t},\n\t\t{\n\t\t\tname:   \"invalid quorum percentage\",\n\t\t\tquorum: -1,\n\t\t\tfail:   true,\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tmembers := commondao.NewMemberStorage()\n\t\t\tfor _, m := range tc.members {\n\t\t\t\tmembers.Add(m)\n\t\t\t}\n\n\t\t\tvar record commondao.VotingRecord\n\t\t\tfor _, v := range tc.votes {\n\t\t\t\trecord.AddVote(v)\n\t\t\t}\n\n\t\t\tsuccess := commondao.IsQuorumReached(tc.quorum, record.Readonly(), commondao.NewMemberSet(members))\n\n\t\t\tif tc.fail {\n\t\t\t\tuassert.False(t, success, \"expect quorum to fail\")\n\t\t\t} else {\n\t\t\t\tuassert.True(t, success, \"expect quorum to succeed\")\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunc TestMustValidate(t *testing.T) {\n\tuassert.NotPanics(t, func() {\n\t\tcommondao.MustValidate(testPropDef{})\n\t}, \"expect validation to succeed\")\n\n\tuassert.PanicsWithMessage(t, \"validable proposal definition is nil\", func() {\n\t\tcommondao.MustValidate(nil)\n\t}, \"expect validation to panic with nil definition\")\n\n\tuassert.PanicsWithMessage(t, \"boom!\", func() {\n\t\tcommondao.MustValidate(testPropDef{validationErr: errors.New(\"boom!\")})\n\t}, \"expect validation to panic\")\n}\n\ntype testPropDef struct {\n\tvotingPeriod            time.Duration\n\ttallyResult             bool\n\tvalidationErr, tallyErr error\n\tvoteChoices             []commondao.VoteChoice\n}\n\nfunc (testPropDef) Title() string                 { return \"\" }\nfunc (testPropDef) Body() string                  { return \"\" }\nfunc (d testPropDef) VotingPeriod() time.Duration { return d.votingPeriod }\nfunc (d testPropDef) Validate() error             { return d.validationErr }\n\nfunc (d testPropDef) Tally(commondao.ReadonlyVotingRecord, commondao.MemberSet) (bool, error) {\n\treturn d.tallyResult, d.tallyErr\n}\n\nfunc (d testPropDef) CustomVoteChoices() []commondao.VoteChoice {\n\tif len(d.voteChoices) \u003e 0 {\n\t\treturn d.voteChoices\n\t}\n\treturn []commondao.VoteChoice{commondao.ChoiceYes, commondao.ChoiceNo, commondao.ChoiceAbstain}\n}\n"},{"name":"record.gno","body":"package commondao\n\nimport (\n\t\"errors\"\n\t\"math\"\n\n\t\"gno.land/p/nt/avl\"\n)\n\n// ErrVoteExists indicates that a user already voted.\nvar ErrVoteExists = errors.New(\"user already voted\")\n\ntype (\n\t// VoteIterFn defines a callback to iterate votes.\n\tVoteIterFn func(Vote) (stop bool)\n\n\t// VotesCountIterFn defines a callback to iterate voted choices.\n\tVotesCountIterFn func(_ VoteChoice, voteCount int) (stop bool)\n\n\t// Vote defines a single vote.\n\tVote struct {\n\t\t// Address is the address of the user that this vote belons to.\n\t\tAddress address\n\n\t\t// Choice contains the voted choice.\n\t\tChoice VoteChoice\n\n\t\t// Reason contains an optional reason for the vote.\n\t\tReason string\n\n\t\t// Context can store any custom voting values related to the vote.\n\t\t//\n\t\t// Warning: When using context be careful if references/pointers are\n\t\t// assigned to it because they could potentially be accessed anywhere,\n\t\t// which could lead to unwanted indirect modifications.\n\t\tContext any\n\t}\n)\n\n// ReadonlyVotingRecord defines an read only voting record.\ntype ReadonlyVotingRecord struct {\n\tvotes avl.Tree // string(address) -\u003e Vote\n\tcount avl.Tree // string(choice) -\u003e int\n}\n\n// Size returns the total number of votes that record contains.\nfunc (r ReadonlyVotingRecord) Size() int {\n\treturn r.votes.Size()\n}\n\n// Iterate iterates voting record votes.\nfunc (r ReadonlyVotingRecord) Iterate(offset, count int, reverse bool, fn VoteIterFn) bool {\n\tcb := func(_ string, v any) bool { return fn(v.(Vote)) }\n\tif reverse {\n\t\treturn r.votes.ReverseIterateByOffset(offset, count, cb)\n\t}\n\treturn r.votes.IterateByOffset(offset, count, cb)\n}\n\n// IterateVotesCount iterates voted choices with the amount of votes submited for each.\nfunc (r ReadonlyVotingRecord) IterateVotesCount(fn VotesCountIterFn) bool {\n\treturn r.count.Iterate(\"\", \"\", func(k string, v any) bool {\n\t\treturn fn(VoteChoice(k), v.(int))\n\t})\n}\n\n// VoteCount returns the number of votes for a single voting choice.\nfunc (r ReadonlyVotingRecord) VoteCount(c VoteChoice) int {\n\tif v, found := r.count.Get(string(c)); found {\n\t\treturn v.(int)\n\t}\n\treturn 0\n}\n\n// HasVoted checks if an account already voted.\nfunc (r ReadonlyVotingRecord) HasVoted(user address) bool {\n\treturn r.votes.Has(user.String())\n}\n\n// GetVote returns a vote.\nfunc (r ReadonlyVotingRecord) GetVote(user address) (_ Vote, found bool) {\n\tif v, found := r.votes.Get(user.String()); found {\n\t\treturn v.(Vote), true\n\t}\n\treturn Vote{}, false\n}\n\n// VotingRecord stores accounts that voted and vote choices.\ntype VotingRecord struct {\n\tReadonlyVotingRecord\n}\n\n// Readonly returns a read only voting record.\nfunc (r VotingRecord) Readonly() ReadonlyVotingRecord {\n\treturn r.ReadonlyVotingRecord\n}\n\n// AddVote adds a vote to the voting record.\n// If a vote for the same user already exists is overwritten.\nfunc (r *VotingRecord) AddVote(vote Vote) (updated bool) {\n\t// Get previous member vote if it exists\n\tv, _ := r.votes.Get(vote.Address.String())\n\n\t// When a previous vote exists update counter for the previous choice\n\tupdated = r.votes.Set(vote.Address.String(), vote)\n\tif updated {\n\t\tprev := v.(Vote)\n\t\tr.count.Set(string(prev.Choice), r.VoteCount(prev.Choice)-1)\n\t}\n\n\tr.count.Set(string(vote.Choice), r.VoteCount(vote.Choice)+1)\n\treturn\n}\n\n// FindMostVotedChoice returns the most voted choice.\n// ChoiceNone is returned when there is a tie between different\n// voting choices or when the voting record has are no votes.\nfunc FindMostVotedChoice(r ReadonlyVotingRecord) VoteChoice {\n\tvar (\n\t\tchoice                  VoteChoice\n\t\tcurrentCount, prevCount int\n\t)\n\n\tr.IterateVotesCount(func(c VoteChoice, count int) bool {\n\t\tif currentCount \u003c= count {\n\t\t\tchoice = c\n\t\t\tprevCount = currentCount\n\t\t\tcurrentCount = count\n\t\t}\n\t\treturn false\n\t})\n\n\tif prevCount \u003c currentCount {\n\t\treturn choice\n\t}\n\treturn ChoiceNone\n}\n\n// SelectChoiceByAbsoluteMajority select the vote choice by absolute majority.\n// Vote choice is a majority when chosen by more than half of the votes.\n// Absolute majority considers abstentions when counting votes.\nfunc SelectChoiceByAbsoluteMajority(r ReadonlyVotingRecord, membersCount int) (VoteChoice, bool) {\n\tchoice := FindMostVotedChoice(r)\n\tif choice != ChoiceNone \u0026\u0026 r.VoteCount(choice) \u003e int(membersCount/2) {\n\t\treturn choice, true\n\t}\n\treturn ChoiceNone, false\n}\n\n// SelectChoiceBySuperMajority select the vote choice by super majority using a 2/3s threshold.\n// Abstentions are considered when calculating the super majority choice.\nfunc SelectChoiceBySuperMajority(r ReadonlyVotingRecord, membersCount int) (VoteChoice, bool) {\n\tif membersCount \u003c 3 {\n\t\treturn ChoiceNone, false\n\t}\n\n\tchoice := FindMostVotedChoice(r)\n\tif choice != ChoiceNone \u0026\u0026 r.VoteCount(choice) \u003e= int(math.Ceil((2*float64(membersCount))/3)) {\n\t\treturn choice, true\n\t}\n\treturn ChoiceNone, false\n}\n\n// SelectChoiceByPlurality selects the vote choice by plurality.\n// The choice will be considered a majority if it has votes and if there is no other\n// choice with the same number of votes. A tie won't be considered majority.\nfunc SelectChoiceByPlurality(r ReadonlyVotingRecord) (VoteChoice, bool) {\n\tvar (\n\t\tchoice       VoteChoice\n\t\tcurrentCount int\n\t\tisMajority   bool\n\t)\n\n\tr.IterateVotesCount(func(c VoteChoice, count int) bool {\n\t\t// Don't consider explicit abstentions or invalid votes\n\t\tif c == ChoiceAbstain || c == ChoiceNone {\n\t\t\treturn false\n\t\t}\n\n\t\tif currentCount \u003c count {\n\t\t\tchoice = c\n\t\t\tcurrentCount = count\n\t\t\tisMajority = true\n\t\t} else if currentCount == count {\n\t\t\tisMajority = false\n\t\t}\n\t\treturn false\n\t})\n\n\tif isMajority {\n\t\treturn choice, true\n\t}\n\treturn ChoiceNone, false\n}\n"},{"name":"record_test.gno","body":"package commondao_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/uassert\"\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nfunc TestVotingRecordDefaults(t *testing.T) {\n\tvar (\n\t\trecord commondao.VotingRecord\n\t\tuser   = address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t)\n\n\tuassert.Equal(t, record.Size(), 0)\n\tuassert.Equal(t, record.VoteCount(commondao.ChoiceYes), 0)\n\tuassert.Equal(t, record.VoteCount(commondao.ChoiceNo), 0)\n\tuassert.Equal(t, record.VoteCount(commondao.ChoiceAbstain), 0)\n\tuassert.False(t, record.HasVoted(user))\n}\n\nfunc TestVotingRecordAddVote(t *testing.T) {\n\tcases := []struct {\n\t\tname                            string\n\t\tsetup                           func(*commondao.VotingRecord)\n\t\tvotes                           []commondao.Vote\n\t\tyesCount, noCount, abstainCount int\n\t\tupdated                         bool\n\t}{\n\t\t{\n\t\t\tname: \"single vote\",\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t},\n\t\t\t},\n\t\t\tyesCount: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple votes\",\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g125t352u4pmdrr57emc4pe04y40sknr5ztng5mt\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g12chzmwxw8sezcxe9h2csp0tck76r4ptwdlyyqk\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\",\n\t\t\t\t\tChoice:  commondao.ChoiceAbstain,\n\t\t\t\t},\n\t\t\t},\n\t\t\tyesCount:     1,\n\t\t\tnoCount:      2,\n\t\t\tabstainCount: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"vote exists\",\n\t\t\tvotes: []commondao.Vote{\n\t\t\t\t{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t},\n\t\t\t},\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceAbstain,\n\t\t\t\t})\n\t\t\t},\n\t\t\tyesCount:     1,\n\t\t\tabstainCount: 0,\n\t\t\tupdated:      true,\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tvar (\n\t\t\t\trecord  commondao.VotingRecord\n\t\t\t\tupdated bool\n\t\t\t)\n\n\t\t\tif tc.setup != nil {\n\t\t\t\ttc.setup(\u0026record)\n\t\t\t}\n\n\t\t\tfor _, v := range tc.votes {\n\t\t\t\tupdated = updated || record.AddVote(v)\n\t\t\t}\n\n\t\t\turequire.Equal(t, updated, tc.updated, \"expect vote to be updated\")\n\t\t\turequire.Equal(t, record.Size(), len(tc.votes), \"expect record size to match\")\n\n\t\t\tvar i int\n\t\t\trecord.Iterate(0, record.Size(), false, func(v commondao.Vote) bool {\n\t\t\t\tuassert.Equal(t, v.Address, tc.votes[i].Address)\n\t\t\t\tuassert.Equal(t, string(v.Choice), string(tc.votes[i].Choice))\n\t\t\t\tuassert.True(t, record.HasVoted(v.Address))\n\n\t\t\t\ti++\n\t\t\t\treturn false\n\t\t\t})\n\n\t\t\tuassert.Equal(t, record.VoteCount(commondao.ChoiceYes), tc.yesCount, \"expect YES vote count to match\")\n\t\t\tuassert.Equal(t, record.VoteCount(commondao.ChoiceNo), tc.noCount, \"expect NO vote count to match\")\n\t\t\tuassert.Equal(t, record.VoteCount(commondao.ChoiceAbstain), tc.abstainCount, \"expect ABSTAIN vote count to match\")\n\t\t})\n\t}\n}\n\nfunc TestFindMostVotedChoice(t *testing.T) {\n\tcases := []struct {\n\t\tname   string\n\t\tsetup  func(*commondao.VotingRecord)\n\t\tchoice commondao.VoteChoice\n\t}{\n\t\t{\n\t\t\tname:   \"no votes\",\n\t\t\tchoice: commondao.ChoiceNone,\n\t\t},\n\t\t{\n\t\t\tname: \"one vote\",\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t},\n\t\t\tchoice: commondao.ChoiceYes,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple votes\",\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g12chzmwxw8sezcxe9h2csp0tck76r4ptwdlyyqk\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t})\n\t\t\t},\n\t\t\tchoice: commondao.ChoiceNo,\n\t\t},\n\t\t{\n\t\t\tname: \"tie\",\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g12chzmwxw8sezcxe9h2csp0tck76r4ptwdlyyqk\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t})\n\t\t\t},\n\t\t\tchoice: commondao.ChoiceNone,\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tvar record commondao.VotingRecord\n\n\t\t\tif tc.setup != nil {\n\t\t\t\ttc.setup(\u0026record)\n\t\t\t}\n\n\t\t\tchoice := commondao.FindMostVotedChoice(record.Readonly())\n\n\t\t\tuassert.Equal(t, string(choice), string(tc.choice))\n\t\t})\n\t}\n}\n\nfunc TestSelectChoiceByAbsoluteMajority(t *testing.T) {\n\tcases := []struct {\n\t\tname         string\n\t\tsetup        func(*commondao.VotingRecord)\n\t\tchoice       commondao.VoteChoice\n\t\tmembersCount int\n\t\tsuccess      bool\n\t}{\n\t\t{\n\t\t\tname:         \"no votes\",\n\t\t\tchoice:       commondao.ChoiceNone,\n\t\t\tmembersCount: 3,\n\t\t\tsuccess:      false,\n\t\t},\n\t\t{\n\t\t\tname: \"majority\",\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g12chzmwxw8sezcxe9h2csp0tck76r4ptwdlyyqk\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t})\n\t\t\t},\n\t\t\tchoice:       commondao.ChoiceYes,\n\t\t\tmembersCount: 3,\n\t\t\tsuccess:      true,\n\t\t},\n\t\t{\n\t\t\tname: \"no majority\",\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g12chzmwxw8sezcxe9h2csp0tck76r4ptwdlyyqk\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t})\n\t\t\t},\n\t\t\tchoice:       \"\",\n\t\t\tmembersCount: 3,\n\t\t\tsuccess:      false,\n\t\t},\n\t\t{\n\t\t\tname: \"majority with abstain vote\",\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g12chzmwxw8sezcxe9h2csp0tck76r4ptwdlyyqk\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\",\n\t\t\t\t\tChoice:  commondao.ChoiceAbstain,\n\t\t\t\t})\n\t\t\t},\n\t\t\tchoice:       commondao.ChoiceYes,\n\t\t\tmembersCount: 3,\n\t\t\tsuccess:      true,\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tvar record commondao.VotingRecord\n\n\t\t\tif tc.setup != nil {\n\t\t\t\ttc.setup(\u0026record)\n\t\t\t}\n\n\t\t\tchoice, success := commondao.SelectChoiceByAbsoluteMajority(record.Readonly(), tc.membersCount)\n\n\t\t\tuassert.Equal(t, string(tc.choice), string(choice), \"choice\")\n\t\t\tuassert.Equal(t, tc.success, success, \"success\")\n\t\t})\n\t}\n}\n\nfunc TestSelectChoiceBySuperMajority(t *testing.T) {\n\tcases := []struct {\n\t\tname         string\n\t\tsetup        func(*commondao.VotingRecord)\n\t\tchoice       commondao.VoteChoice\n\t\tmembersCount int\n\t\tsuccess      bool\n\t}{\n\t\t{\n\t\t\tname:         \"no votes\",\n\t\t\tchoice:       commondao.ChoiceNone,\n\t\t\tmembersCount: 3,\n\t\t\tsuccess:      false,\n\t\t},\n\t\t{\n\t\t\tname: \"majority\",\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g12chzmwxw8sezcxe9h2csp0tck76r4ptwdlyyqk\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t})\n\t\t\t},\n\t\t\tchoice:       commondao.ChoiceYes,\n\t\t\tmembersCount: 3,\n\t\t\tsuccess:      true,\n\t\t},\n\t\t{\n\t\t\tname: \"no majority\",\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g12chzmwxw8sezcxe9h2csp0tck76r4ptwdlyyqk\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t})\n\t\t\t},\n\t\t\tchoice:       \"\",\n\t\t\tmembersCount: 3,\n\t\t\tsuccess:      false,\n\t\t},\n\t\t{\n\t\t\tname: \"majority with abstain vote\",\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g12chzmwxw8sezcxe9h2csp0tck76r4ptwdlyyqk\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\",\n\t\t\t\t\tChoice:  commondao.ChoiceAbstain,\n\t\t\t\t})\n\t\t\t},\n\t\t\tchoice:       commondao.ChoiceYes,\n\t\t\tmembersCount: 3,\n\t\t\tsuccess:      true,\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tvar record commondao.VotingRecord\n\n\t\t\tif tc.setup != nil {\n\t\t\t\ttc.setup(\u0026record)\n\t\t\t}\n\n\t\t\tchoice, success := commondao.SelectChoiceBySuperMajority(record.Readonly(), tc.membersCount)\n\n\t\t\tuassert.Equal(t, string(tc.choice), string(choice), \"choice\")\n\t\t\tuassert.Equal(t, tc.success, success, \"success\")\n\t\t})\n\t}\n}\n\nfunc TestSelectChoiceByPlurality(t *testing.T) {\n\tcases := []struct {\n\t\tname    string\n\t\tsetup   func(*commondao.VotingRecord)\n\t\tchoice  commondao.VoteChoice\n\t\tsuccess bool\n\t}{\n\t\t{\n\t\t\tname:    \"no votes\",\n\t\t\tchoice:  commondao.ChoiceNone,\n\t\t\tsuccess: false,\n\t\t},\n\t\t{\n\t\t\tname: \"plurality\",\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g12chzmwxw8sezcxe9h2csp0tck76r4ptwdlyyqk\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t})\n\t\t\t},\n\t\t\tchoice:  commondao.ChoiceYes,\n\t\t\tsuccess: true,\n\t\t},\n\t\t{\n\t\t\tname: \"no plurality\",\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g12chzmwxw8sezcxe9h2csp0tck76r4ptwdlyyqk\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t})\n\t\t\t},\n\t\t\tchoice:  \"\",\n\t\t\tsuccess: false,\n\t\t},\n\t\t{\n\t\t\tname: \"plurality with abstain vote\",\n\t\t\tsetup: func(r *commondao.VotingRecord) {\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g12chzmwxw8sezcxe9h2csp0tck76r4ptwdlyyqk\",\n\t\t\t\t\tChoice:  commondao.ChoiceYes,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1vh7krmmzfua5xjmkatvmx09z37w34lsvd2mxa5\",\n\t\t\t\t\tChoice:  commondao.ChoiceNo,\n\t\t\t\t})\n\t\t\t\tr.AddVote(commondao.Vote{\n\t\t\t\t\tAddress: \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\",\n\t\t\t\t\tChoice:  commondao.ChoiceAbstain,\n\t\t\t\t})\n\t\t\t},\n\t\t\tchoice:  commondao.ChoiceYes,\n\t\t\tsuccess: true,\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tvar record commondao.VotingRecord\n\n\t\t\tif tc.setup != nil {\n\t\t\t\ttc.setup(\u0026record)\n\t\t\t}\n\n\t\t\tchoice, success := commondao.SelectChoiceByPlurality(record.Readonly())\n\n\t\t\tuassert.Equal(t, string(tc.choice), string(choice), \"choice\")\n\t\t\tuassert.Equal(t, tc.success, success, \"success\")\n\t\t})\n\t}\n}\n"},{"name":"z_commondao_execute_0_filetest.gno","body":"// PKGPATH: gno.land/r/test\npackage test\n\nimport (\n\t\"time\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nconst member = address(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\") // @devx\n\nvar (\n\tdao      *commondao.CommonDAO\n\tproposal *commondao.Proposal\n)\n\ntype testPropDef struct{}\n\nfunc (testPropDef) Title() string               { return \"\" }\nfunc (testPropDef) Body() string                { return \"\" }\nfunc (testPropDef) VotingPeriod() time.Duration { return 0 }\nfunc (testPropDef) Execute(cur realm) error     { return nil }\n\nfunc (testPropDef) Tally(commondao.ReadonlyVotingRecord, commondao.MemberSet) (bool, error) {\n\treturn true, nil\n}\n\nfunc init() {\n\tdao = commondao.New(commondao.WithMember(member))\n\tproposal = dao.MustPropose(member, testPropDef{})\n}\n\nfunc main() {\n\terr := dao.Execute(proposal.ID())\n\n\tprintln(err == nil)\n\tprintln(string(proposal.Status()))\n}\n\n// Output:\n// true\n// passed\n"},{"name":"z_commondao_execute_1_filetest.gno","body":"// PKGPATH: gno.land/r/test\npackage test\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nconst member = address(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\") // @devx\n\nvar (\n\tdao      *commondao.CommonDAO\n\tproposal *commondao.Proposal\n)\n\ntype testPropDef struct{}\n\nfunc (testPropDef) Title() string               { return \"\" }\nfunc (testPropDef) Body() string                { return \"\" }\nfunc (testPropDef) VotingPeriod() time.Duration { return 0 }\n\nfunc (testPropDef) Tally(commondao.ReadonlyVotingRecord, commondao.MemberSet) (bool, error) {\n\treturn true, nil\n}\n\nfunc (testPropDef) Execute(cur realm) error {\n\treturn errors.New(\"test error\")\n}\n\nfunc init() {\n\tdao = commondao.New(commondao.WithMember(member))\n\tproposal = dao.MustPropose(member, testPropDef{})\n}\n\nfunc main() {\n\terr := dao.Execute(proposal.ID())\n\n\tprintln(err == nil)\n\tprintln(string(proposal.Status()))\n\tprintln(proposal.StatusReason())\n}\n\n// Output:\n// true\n// failed\n// test error\n"},{"name":"z_commondao_execute_2_filetest.gno","body":"// PKGPATH: gno.land/r/test\npackage test\n\nimport (\n\t\"time\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nconst member = address(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\") // @devx\n\nvar (\n\tdao      *commondao.CommonDAO\n\tproposal *commondao.Proposal\n)\n\ntype testPropDef struct{}\n\nfunc (testPropDef) Title() string               { return \"\" }\nfunc (testPropDef) Body() string                { return \"\" }\nfunc (testPropDef) VotingPeriod() time.Duration { return time.Hour } // Voting ends in 1 hour\nfunc (testPropDef) Execute(cur realm) error     { return nil }\n\nfunc (testPropDef) Tally(commondao.ReadonlyVotingRecord, commondao.MemberSet) (bool, error) {\n\treturn true, nil\n}\n\nfunc init() {\n\tdao = commondao.New(\n\t\tcommondao.WithMember(member),\n\t\tcommondao.DisableVotingDeadlineCheck(), // Disable to be able to execute before voting deadline\n\t)\n\tproposal = dao.MustPropose(member, testPropDef{})\n}\n\nfunc main() {\n\terr := dao.Execute(proposal.ID())\n\n\tprintln(err == nil)\n\tprintln(string(proposal.Status()))\n}\n\n// Output:\n// true\n// passed\n"},{"name":"z_commondao_must_execute_0_filetest.gno","body":"// PKGPATH: gno.land/r/test\npackage test\n\nimport (\n\t\"time\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\ntype testPropDef struct{}\n\nfunc (testPropDef) Title() string               { return \"\" }\nfunc (testPropDef) Body() string                { return \"\" }\nfunc (testPropDef) VotingPeriod() time.Duration { return 0 }\nfunc (testPropDef) Execute(cur realm) error     { return nil }\n\nfunc (testPropDef) Tally(commondao.ReadonlyVotingRecord, commondao.MemberSet) (bool, error) {\n\treturn true, nil\n}\n\nfunc main() {\n\tcommondao.MustExecute(testPropDef{})\n\tprintln(\"ok\")\n}\n\n// Output:\n// ok\n"},{"name":"z_commondao_must_execute_1_filetest.gno","body":"// PKGPATH: gno.land/r/test\npackage test\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\ntype testPropDef struct{}\n\nfunc (testPropDef) Title() string               { return \"\" }\nfunc (testPropDef) Body() string                { return \"\" }\nfunc (testPropDef) VotingPeriod() time.Duration { return 0 }\n\nfunc (testPropDef) Tally(commondao.ReadonlyVotingRecord, commondao.MemberSet) (bool, error) {\n\treturn true, nil\n}\n\nfunc (testPropDef) Execute(cur realm) error {\n\treturn errors.New(\"boom!\")\n}\n\nfunc main() {\n\tcommondao.MustExecute(testPropDef{})\n}\n\n// Error:\n// boom!\n"},{"name":"z_commondao_must_execute_2_filetest.gno","body":"// PKGPATH: gno.land/r/test\npackage test\n\nimport (\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nfunc main() {\n\tcommondao.MustExecute(nil)\n}\n\n// Error:\n// executable proposal definition is nil\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"80000000","gas_fee":"800000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"tPCQikFx9yFry9sx8cVFVbPWJpOzdCDgvTMJpVfhsTvdrIcbq5KZHN+9Y/nOHb2w92Aip09Hb3XIX/5681lUBA=="}],"memo":""},"metadata":{"timestamp":"1761556651"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"BwQl8ySwEks45RxOGIIXxzmfu+1B7fWR7xF8hB4zf2a5GLdniCzyquK8H2cL1u6AVnQUyUcCaOLFpLr9FgUQCw=="}],"memo":""},"metadata":{"timestamp":"1761557510"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq","package":{"name":"boards","path":"gno.land/p/devx000/wip/gnoland/boards","files":[{"name":"board.gno","body":"package boards\n\nimport \"time\"\n\n// Board defines a type for boards.\ntype Board struct {\n\t// ID is the unique identifier of the board.\n\tID ID\n\n\t// Name is the current name of the board.\n\tName string\n\n\t// Aliases contains a list of alternative names for the board.\n\tAliases []string\n\n\t// Readonly indicates that the board is readonly.\n\tReadonly bool\n\n\t// Threads contains all board threads.\n\tThreads PostStorage\n\n\t// ThreadsSequence generates sequential ID for new threads.\n\tThreadsSequence IdentifierGenerator\n\n\t// Permissions enables support for permissioned boards.\n\t// This type of boards allows managing members with roles and permissions.\n\t// It also enables the implementation of permissioned execution of board related features.\n\tPermissions Permissions\n\n\t// Creator is the account address that created the board.\n\tCreator address\n\n\t// CreatedAt is the board's creation time.\n\tCreatedAt time.Time\n\n\t// UpdatedAt is the board's update time.\n\tUpdatedAt time.Time\n}\n\n// New creates a new basic non permissioned board.\nfunc New(id ID) *Board {\n\treturn \u0026Board{\n\t\tID:              id,\n\t\tThreads:         NewPostStorage(),\n\t\tThreadsSequence: NewIdentifierGenerator(),\n\t\tCreatedAt:       time.Now(),\n\t}\n}\n"},{"name":"board_test.gno","body":"package boards_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nfunc TestNew(t *testing.T) {\n\tboard := boards.New(42)\n\n\turequire.Equal(t, 42, int(board.ID), \"expect board ID to match\")\n\turequire.True(t, board.Threads != nil, \"expect board to support threads\")\n\turequire.True(t, board.ThreadsSequence != nil, \"expect board to initialize a thread ID generator\")\n\turequire.False(t, board.CreatedAt.IsZero(), \"expect board to have a creation date\")\n}\n"},{"name":"flag_storage.gno","body":"package boards\n\nimport (\n\t\"strings\"\n\n\t\"gno.land/p/nt/avl\"\n\t\"gno.land/p/nt/ufmt\"\n)\n\ntype (\n\t// Flag defines a type for post flags\n\tFlag struct {\n\t\t// User is the user that flagged the post.\n\t\tUser address\n\n\t\t// Reason is the reason that describes why post is flagged.\n\t\tReason string\n\t}\n\n\t// FlagIterFn defines a function type to iterate post flags.\n\tFlagIterFn func(Flag) bool\n\n\t// FlagStorage defines an interface for storing posts flagging information.\n\tFlagStorage interface {\n\t\t// Exists checks if a flag from a user exists\n\t\tExists(address) bool\n\n\t\t// Add adds a new flag from a user.\n\t\tAdd(Flag) error\n\n\t\t// Remove removes a user flag.\n\t\tRemove(address) (removed bool)\n\n\t\t// Size returns the number of flags in the storage.\n\t\tSize() int\n\n\t\t// Iterate iterates post flags.\n\t\t// To reverse iterate flags use a negative count.\n\t\t// If the callback returns true, the iteration is stopped.\n\t\tIterate(start, count int, fn FlagIterFn) bool\n\t}\n)\n\n// NewFlagStorage creates a new storage for post flags.\n// The new storage uses an AVL tree to store flagging info.\nfunc NewFlagStorage() FlagStorage {\n\treturn \u0026flagStorage{avl.NewTree()}\n}\n\ntype flagStorage struct {\n\tflags *avl.Tree // address -\u003e string(reason)\n}\n\n// Exists checks if a flag from a user exists\nfunc (s flagStorage) Exists(addr address) bool {\n\treturn s.flags.Has(addr.String())\n}\n\n// Add adds a new flag from a user.\n// It fails if a flag from the same user exists.\nfunc (s *flagStorage) Add(f Flag) error {\n\tif !f.User.IsValid() {\n\t\treturn ufmt.Errorf(\"post flagging error, invalid user address: %s\", f.User)\n\t}\n\n\tk := f.User.String()\n\tif s.flags.Has(k) {\n\t\treturn ufmt.Errorf(\"flag from user already exists: %s\", f.User)\n\t}\n\n\ts.flags.Set(k, strings.TrimSpace(f.Reason))\n\treturn nil\n}\n\n// Remove removes a user flag.\nfunc (s *flagStorage) Remove(addr address) bool {\n\t_, removed := s.flags.Remove(addr.String())\n\treturn removed\n}\n\n// Size returns the number of flags in the storage.\nfunc (s flagStorage) Size() int {\n\treturn s.flags.Size()\n}\n\n// Iterate iterates post flags.\n// To reverse iterate flags use a negative count.\n// If the callback returns true, the iteration is stopped.\nfunc (s flagStorage) Iterate(start, count int, fn FlagIterFn) bool {\n\tif count \u003c 0 {\n\t\treturn s.flags.ReverseIterateByOffset(start, -count, func(k string, v any) bool {\n\t\t\treturn fn(Flag{\n\t\t\t\tUser:   address(k),\n\t\t\t\tReason: v.(string),\n\t\t\t})\n\t\t})\n\t}\n\n\treturn s.flags.IterateByOffset(start, count, func(k string, v any) bool {\n\t\treturn fn(Flag{\n\t\t\tUser:   address(k),\n\t\t\tReason: v.(string),\n\t\t})\n\t})\n}\n"},{"name":"flag_storage_test.gno","body":"package boards_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nfunc TestFlagStorageExists(t *testing.T) {\n\ttests := []struct {\n\t\tname   string\n\t\tsetup  func() boards.FlagStorage\n\t\tuser   address\n\t\texists bool\n\t}{\n\t\t{\n\t\t\tname: \"found\",\n\t\t\tsetup: func() boards.FlagStorage {\n\t\t\t\ts := boards.NewFlagStorage()\n\t\t\t\ts.Add(boards.Flag{User: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tuser:   \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\texists: true,\n\t\t},\n\t\t{\n\t\t\tname: \"not found\",\n\t\t\tsetup: func() boards.FlagStorage {\n\t\t\t\treturn boards.NewFlagStorage()\n\t\t\t},\n\t\t\tuser:   \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\texists: false,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\turequire.Equal(t, tt.exists, s.Exists(tt.user))\n\t\t})\n\t}\n}\n\nfunc TestFlagStorageAdd(t *testing.T) {\n\ttests := []struct {\n\t\tname   string\n\t\tsetup  func() boards.FlagStorage\n\t\tflag   boards.Flag\n\t\terrMsg string\n\t}{\n\t\t{\n\t\t\tname: \"ok\",\n\t\t\tsetup: func() boards.FlagStorage {\n\t\t\t\treturn boards.NewFlagStorage()\n\t\t\t},\n\t\t\tflag: boards.Flag{User: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"},\n\t\t},\n\t\t{\n\t\t\tname: \"flag exists\",\n\t\t\tsetup: func() boards.FlagStorage {\n\t\t\t\ts := boards.NewFlagStorage()\n\t\t\t\ts.Add(boards.Flag{User: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tflag:   boards.Flag{User: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"},\n\t\t\terrMsg: \"flag from user already exists: g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t},\n\t\t{\n\t\t\tname: \"invalid user address\",\n\t\t\tsetup: func() boards.FlagStorage {\n\t\t\t\treturn boards.NewFlagStorage()\n\t\t\t},\n\t\t\tflag:   boards.Flag{User: \"foo\"},\n\t\t\terrMsg: \"post flagging error, invalid user address: foo\",\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\terr := s.Add(tt.flag)\n\n\t\t\tif tt.errMsg != \"\" {\n\t\t\t\turequire.Error(t, err, \"expect an error\")\n\t\t\t\turequire.ErrorContains(t, err, tt.errMsg, \"expect error to match\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.NoError(t, err, \"expect no error\")\n\t\t\turequire.True(t, s.Exists(tt.flag.User), \"expect flag to be added\")\n\t\t})\n\t}\n}\n\nfunc TestFlagStorageRemove(t *testing.T) {\n\ttests := []struct {\n\t\tname    string\n\t\tsetup   func() boards.FlagStorage\n\t\taddress address\n\t\tremoved bool\n\t}{\n\t\t{\n\t\t\tname: \"ok\",\n\t\t\tsetup: func() boards.FlagStorage {\n\t\t\t\ts := boards.NewFlagStorage()\n\t\t\t\ts.Add(boards.Flag{User: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\taddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tremoved: true,\n\t\t},\n\t\t{\n\t\t\tname: \"not found\",\n\t\t\tsetup: func() boards.FlagStorage {\n\t\t\t\treturn boards.NewFlagStorage()\n\t\t\t},\n\t\t\taddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\turequire.Equal(t, tt.removed, s.Remove(tt.address))\n\t\t})\n\t}\n}\n\nfunc TestFlagStorageSize(t *testing.T) {\n\ttests := []struct {\n\t\tname  string\n\t\tsetup func() boards.FlagStorage\n\t\tsize  int\n\t}{\n\t\t{\n\t\t\tname: \"empty\",\n\t\t\tsetup: func() boards.FlagStorage {\n\t\t\t\treturn boards.NewFlagStorage()\n\t\t\t},\n\t\t\tsize: 0,\n\t\t},\n\t\t{\n\t\t\tname: \"one flag\",\n\t\t\tsetup: func() boards.FlagStorage {\n\t\t\t\ts := boards.NewFlagStorage()\n\t\t\t\ts.Add(boards.Flag{User: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple flags\",\n\t\t\tsetup: func() boards.FlagStorage {\n\t\t\t\ts := boards.NewFlagStorage()\n\t\t\t\ts.Add(boards.Flag{User: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"})\n\t\t\t\ts.Add(boards.Flag{User: \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\"})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 2,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\turequire.Equal(t, tt.size, s.Size())\n\t\t})\n\t}\n}\n\nfunc TestFlagStorageIterate(t *testing.T) {\n\tflags := []boards.Flag{\n\t\t{\n\t\t\tUser:   \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\",\n\t\t\tReason: \"a\",\n\t\t},\n\t\t{\n\t\t\tUser:   \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tReason: \"b\",\n\t\t},\n\t}\n\ttests := []struct {\n\t\tname    string\n\t\tsetup   func() boards.FlagStorage\n\t\treverse bool\n\t\tflags   []boards.Flag\n\t}{\n\t\t{\n\t\t\tname: \"default\",\n\t\t\tsetup: func() boards.FlagStorage {\n\t\t\t\ts := boards.NewFlagStorage()\n\t\t\t\ts.Add(flags[0])\n\t\t\t\ts.Add(flags[1])\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tflags: flags,\n\t\t},\n\t\t{\n\t\t\tname: \"reverse\",\n\t\t\tsetup: func() boards.FlagStorage {\n\t\t\t\ts := boards.NewFlagStorage()\n\t\t\t\ts.Add(flags[0])\n\t\t\t\ts.Add(flags[1])\n\t\t\t\treturn s\n\t\t\t},\n\t\t\treverse: true,\n\t\t\tflags:   []boards.Flag{flags[1], flags[0]},\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\t\t\tcount := s.Size()\n\t\t\tif tt.reverse {\n\t\t\t\tcount = -count\n\t\t\t}\n\n\t\t\tvar i int\n\t\t\ts.Iterate(0, count, func(f boards.Flag) bool {\n\t\t\t\turequire.Equal(t, tt.flags[i].User, f.User, \"expect user to match\")\n\t\t\t\turequire.Equal(t, tt.flags[i].Reason, f.Reason, \"expect reason to match\")\n\n\t\t\t\ti++\n\t\t\t\treturn false\n\t\t\t})\n\t\t})\n\t}\n}\n"},{"name":"gnomod.toml","body":"module = \"gno.land/p/devx000/wip/gnoland/boards\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\"\n"},{"name":"id.gno","body":"package boards\n\nimport (\n\t\"strconv\"\n\t\"strings\"\n\n\t\"gno.land/p/nt/seqid\"\n)\n\nconst paddedStringLen = 10\n\n// ID defines a type for unique identifiers.\ntype ID uint64\n\n// String returns the ID as a string.\nfunc (id ID) String() string {\n\treturn strconv.FormatUint(uint64(id), 10)\n}\n\n// PaddedString returns the ID as a 10 character string padded with zeroes.\n// This value can be used for indexing by ID.\nfunc (id ID) PaddedString() string {\n\ts := id.String()\n\treturn strings.Repeat(\"0\", paddedStringLen-len(s)) + s\n}\n\n// Key returns the ID as a string which can be used to index by ID.\nfunc (id ID) Key() string {\n\treturn seqid.ID(id).String()\n}\n\n// IdentifierGenerator defines an interface for sequential unique identifier generators.\ntype IdentifierGenerator interface {\n\t// Current returns the last generated ID.\n\tLast() ID\n\n\t// Next generates a new ID or panics if increasing ID overflows.\n\tNext() ID\n}\n\n// NewIdentifierGenerator creates a new sequential unique identifier generator.\nfunc NewIdentifierGenerator() IdentifierGenerator {\n\treturn \u0026idGenerator{}\n}\n\ntype idGenerator struct {\n\tlast seqid.ID\n}\n\n// Current returns the last generated ID.\nfunc (g idGenerator) Last() ID {\n\treturn ID(g.last)\n}\n\n// Next generates a new ID or panics if increasing ID overflows.\nfunc (g *idGenerator) Next() ID {\n\treturn ID(g.last.Next())\n}\n"},{"name":"id_test.gno","body":"package boards_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nfunc TestID(t *testing.T) {\n\tid := boards.ID(42)\n\n\turequire.Equal(t, \"42\", id.String(), \"expect string to match\")\n\turequire.Equal(t, \"0000000042\", id.PaddedString(), \"expect padded string to match\")\n\turequire.Equal(t, \"000001a\", id.Key(), \"expect key to match\")\n}\n\nfunc TestIdentifierGenerator(t *testing.T) {\n\tg := boards.NewIdentifierGenerator()\n\n\turequire.Equal(t, uint64(0), uint64(g.Last()), \"expect default to be 0\")\n\turequire.Equal(t, uint64(1), uint64(g.Next()), \"expect next to be 1\")\n\turequire.Equal(t, uint64(1), uint64(g.Last()), \"expect last to be 1\")\n\turequire.Equal(t, uint64(2), uint64(g.Next()), \"expect next to be 2\")\n\turequire.Equal(t, uint64(2), uint64(g.Last()), \"expect last to be 2\")\n}\n"},{"name":"permissions.gno","body":"package boards\n\ntype (\n\t// Permission defines the type for permissions.\n\tPermission string\n\n\t// Role defines the type for user roles.\n\tRole string\n\n\t// Args is a list of generic arguments.\n\tArgs []interface{}\n\n\t// User contains user info.\n\tUser struct {\n\t\tAddress address\n\t\tRoles   []Role\n\t}\n\n\t// UsersIterFn defines a function type to iterate users.\n\tUsersIterFn func(User) bool\n\n\t// Permissions define an interface to for permissioned execution.\n\tPermissions interface {\n\t\t// HasRole checks if a user has a specific role assigned.\n\t\tHasRole(address, Role) bool\n\n\t\t// HasPermission checks if a user has a specific permission.\n\t\tHasPermission(address, Permission) bool\n\n\t\t// WithPermission calls a callback when a user has a specific permission.\n\t\t// It panics on error.\n\t\tWithPermission(realm, address, Permission, Args, func(realm))\n\n\t\t// SetUserRoles adds a new user when it doesn't exist and sets its roles.\n\t\t// Method can also be called to change the roles of an existing user.\n\t\t// It panics on error.\n\t\tSetUserRoles(realm, address, ...Role)\n\n\t\t// RemoveUser removes a user from the permissioner.\n\t\t// It panics on error.\n\t\tRemoveUser(realm, address) (removed bool)\n\n\t\t// HasUser checks if a user exists.\n\t\tHasUser(address) bool\n\n\t\t// UsersCount returns the total number of users the permissioner contains.\n\t\tUsersCount() int\n\n\t\t// IterateUsers iterates permissions' users.\n\t\tIterateUsers(start, count int, fn UsersIterFn) bool\n\t}\n)\n"},{"name":"post.gno","body":"package boards\n\nimport (\n\t\"strings\"\n\t\"time\"\n)\n\n// Post defines a generic type for posts.\n// A post can be either a thread or a reply.\ntype Post struct {\n\t// ID is the unique identifier of the post.\n\tID ID\n\n\t// ParentID is the ID of the parent post.\n\tParentID ID\n\n\t// ThreadID contains the post ID of the thread where current post is created.\n\t// If current post is a thread it contains post's ID.\n\t// It should be used when current post is a thread or reply.\n\tThreadID ID\n\n\t// OriginalBoardID contains the board ID of the original post when current post is a repost.\n\tOriginalBoardID ID\n\n\t//  Board contains the board where post is created.\n\tBoard *Board\n\n\t// Title contains the post's title.\n\tTitle string\n\n\t// Body contains content of the post.\n\tBody string\n\n\t// Hidden indicates that the post is hidden.\n\tHidden bool\n\n\t// Readonly indicates that the post is readonly.\n\tReadonly bool\n\n\t// Replies stores post replies.\n\tReplies PostStorage\n\n\t// Reposts stores reposts of the current post.\n\t// It should be used when post is a thread.\n\tReposts RepostStorage\n\n\t// Flags stores users flags for the current post.\n\tFlags FlagStorage\n\n\t// Creator is the account address that created the post.\n\tCreator address\n\n\t// CreatedAt is the post's creation time.\n\tCreatedAt time.Time\n\n\t// UpdatedAt is the post's update time.\n\tUpdatedAt time.Time\n}\n\n// Summary return a summary of the post's body.\n// It returns the body making sure that the length is limited to 80 characters.\nfunc (post Post) Summary() string {\n\treturn SummaryOf(post.Body, 80)\n}\n\n// IsThread checks if a post is a thread.\n// When a post is not a thread it's considered a thread's reply/comment.\nfunc IsThread(p *Post) bool {\n\tif p == nil {\n\t\treturn false\n\t}\n\treturn p.ThreadID == p.ID\n}\n\n// IsRepost checks if a thread is a repost.\nfunc IsRepost(thread *Post) bool {\n\tif thread == nil {\n\t\treturn false\n\t}\n\treturn thread.OriginalBoardID != 0\n}\n\n// SummaryOf returns a summary of a text.\nfunc SummaryOf(text string, length int) string {\n\ttext = strings.TrimSpace(text)\n\tif text == \"\" {\n\t\treturn \"\"\n\t}\n\n\tlines := strings.SplitN(text, \"\\n\", 2)\n\tline := lines[0]\n\tif len(line) \u003e length {\n\t\tline = line[:(length-3)] + \"...\"\n\t} else if len(lines) \u003e 1 {\n\t\tline = line + \"...\"\n\t}\n\treturn line\n}\n"},{"name":"post_storage.gno","body":"package boards\n\nimport (\n\t\"errors\"\n\n\t\"gno.land/p/nt/avl\"\n)\n\ntype (\n\t// PostIterFn defines a function type to iterate posts.\n\tPostIterFn func(*Post) bool\n\n\t// PostStorage defines an interface for posts storage.\n\tPostStorage interface {\n\t\t// Get retruns a post that matches an ID.\n\t\tGet(ID) (_ *Post, found bool)\n\n\t\t// Remove removes a post from the storage.\n\t\tRemove(ID) (_ *Post, removed bool)\n\n\t\t// Add adds a post in the storage.\n\t\tAdd(*Post) error\n\n\t\t// Size returns the number of posts in the storage.\n\t\tSize() int\n\n\t\t// Iterate iterates posts.\n\t\t// To reverse iterate posts use a negative count.\n\t\t// If the callback returns true, the iteration is stopped.\n\t\tIterate(start, count int, fn PostIterFn) bool\n\t}\n)\n\n// NewPostStorage creates a new storage for posts.\n// The new storage uses an AVL tree to store posts.\nfunc NewPostStorage() PostStorage {\n\treturn \u0026postStorage{avl.NewTree()}\n}\n\ntype postStorage struct {\n\tposts *avl.Tree // string(Post.ID) -\u003e *Post\n}\n\n// Get retruns a post that matches an ID.\nfunc (s postStorage) Get(id ID) (*Post, bool) {\n\tk := makePostKey(id)\n\tv, found := s.posts.Get(k)\n\tif !found {\n\t\treturn nil, false\n\t}\n\treturn v.(*Post), true\n}\n\n// Remove removes a post from the storage.\nfunc (s *postStorage) Remove(id ID) (*Post, bool) {\n\tk := makePostKey(id)\n\tv, removed := s.posts.Remove(k)\n\tif !removed {\n\t\treturn nil, false\n\t}\n\treturn v.(*Post), true\n}\n\n// Add adds a post in the storage.\n// It updates existing posts when storage contains one with the same ID.\nfunc (s *postStorage) Add(p *Post) error {\n\tif p == nil {\n\t\treturn errors.New(\"saving nil posts is not allowed\")\n\t}\n\n\ts.posts.Set(makePostKey(p.ID), p)\n\treturn nil\n}\n\n// Size returns the number of posts in the storage.\nfunc (s postStorage) Size() int {\n\treturn s.posts.Size()\n}\n\n// Iterate iterates posts.\n// To reverse iterate posts use a negative count.\n// If the callback returns true, the iteration is stopped.\nfunc (s postStorage) Iterate(start, count int, fn PostIterFn) bool {\n\tif count \u003c 0 {\n\t\treturn s.posts.ReverseIterateByOffset(start, -count, func(_ string, v any) bool {\n\t\t\treturn fn(v.(*Post))\n\t\t})\n\t}\n\n\treturn s.posts.IterateByOffset(start, count, func(_ string, v any) bool {\n\t\treturn fn(v.(*Post))\n\t})\n}\n\nfunc makePostKey(postID ID) string {\n\treturn postID.PaddedString()\n}\n"},{"name":"post_storage_test.gno","body":"package boards_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nfunc TestPostStorageGet(t *testing.T) {\n\ttests := []struct {\n\t\tname   string\n\t\tsetup  func() boards.PostStorage\n\t\tpostID boards.ID\n\t\tfound  bool\n\t}{\n\t\t{\n\t\t\tname: \"single post\",\n\t\t\tsetup: func() boards.PostStorage {\n\t\t\t\ts := boards.NewPostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{ID: 1})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tpostID: 1,\n\t\t\tfound:  true,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple posts\",\n\t\t\tsetup: func() boards.PostStorage {\n\t\t\t\ts := boards.NewPostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{ID: 1})\n\t\t\t\ts.Add(\u0026boards.Post{ID: 2})\n\t\t\t\ts.Add(\u0026boards.Post{ID: 3})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tpostID: 2,\n\t\t\tfound:  true,\n\t\t},\n\t\t{\n\t\t\tname: \"not found\",\n\t\t\tsetup: func() boards.PostStorage {\n\t\t\t\treturn boards.NewPostStorage()\n\t\t\t},\n\t\t\tpostID: 404,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\tpost, found := s.Get(tt.postID)\n\n\t\t\tif !tt.found {\n\t\t\t\turequire.False(t, found, \"expect post not to be found\")\n\t\t\t\turequire.True(t, post == nil, \"expect post to be nil\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.True(t, found, \"expect post to be found\")\n\t\t\turequire.False(t, post == nil, \"expect post not to be nil\")\n\t\t\turequire.Equal(t, tt.postID.String(), post.ID.String(), \"expect post ID to match\")\n\t\t})\n\t}\n}\n\nfunc TestPostStorageRemove(t *testing.T) {\n\ttests := []struct {\n\t\tname    string\n\t\tsetup   func() boards.PostStorage\n\t\tpostID  boards.ID\n\t\tremoved bool\n\t}{\n\t\t{\n\t\t\tname: \"ok\",\n\t\t\tsetup: func() boards.PostStorage {\n\t\t\t\ts := boards.NewPostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{ID: 1})\n\t\t\t\ts.Add(\u0026boards.Post{ID: 2})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tpostID:  2,\n\t\t\tremoved: true,\n\t\t},\n\t\t{\n\t\t\tname: \"not found\",\n\t\t\tsetup: func() boards.PostStorage {\n\t\t\t\treturn boards.NewPostStorage()\n\t\t\t},\n\t\t\tpostID: 404,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\tpost, removed := s.Remove(tt.postID)\n\n\t\t\tif !tt.removed {\n\t\t\t\turequire.False(t, removed, \"expect post not to be removed\")\n\t\t\t\turequire.True(t, post == nil, \"expect post to be nil\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.True(t, removed, \"expect post to be removed\")\n\t\t\turequire.False(t, post == nil, \"expect post not to be nil\")\n\t\t\turequire.Equal(t, tt.postID.String(), post.ID.String(), \"expect post ID to match\")\n\n\t\t\t_, found := s.Get(tt.postID)\n\t\t\turequire.False(t, found, \"expect post not to be found\")\n\t\t})\n\t}\n}\n\nfunc TestPostStorageAdd(t *testing.T) {\n\ttests := []struct {\n\t\tname   string\n\t\tpost   *boards.Post\n\t\terrMsg string\n\t}{\n\t\t{\n\t\t\tname: \"ok\",\n\t\t\tpost: \u0026boards.Post{ID: 1},\n\t\t},\n\t\t{\n\t\t\tname:   \"nil post\",\n\t\t\tpost:   nil,\n\t\t\terrMsg: \"saving nil posts is not allowed\",\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := boards.NewPostStorage()\n\n\t\t\terr := s.Add(tt.post)\n\n\t\t\tif tt.errMsg != \"\" {\n\t\t\t\turequire.Error(t, err, \"expect an error\")\n\t\t\t\turequire.ErrorContains(t, err, tt.errMsg, \"expect error to match\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.NoError(t, err, \"expect no error\")\n\n\t\t\t_, found := s.Get(tt.post.ID)\n\t\t\turequire.True(t, found, \"expect post to be found\")\n\t\t})\n\t}\n}\n\nfunc TestPostStorageSize(t *testing.T) {\n\ttests := []struct {\n\t\tname  string\n\t\tsetup func() boards.PostStorage\n\t\tsize  int\n\t}{\n\t\t{\n\t\t\tname: \"empty\",\n\t\t\tsetup: func() boards.PostStorage {\n\t\t\t\treturn boards.NewPostStorage()\n\t\t\t},\n\t\t\tsize: 0,\n\t\t},\n\t\t{\n\t\t\tname: \"one post\",\n\t\t\tsetup: func() boards.PostStorage {\n\t\t\t\ts := boards.NewPostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{ID: 1})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple posts\",\n\t\t\tsetup: func() boards.PostStorage {\n\t\t\t\ts := boards.NewPostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{ID: 1})\n\t\t\t\ts.Add(\u0026boards.Post{ID: 2})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 2,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\turequire.Equal(t, tt.size, s.Size())\n\t\t})\n\t}\n}\n\nfunc TestPostStorageIterate(t *testing.T) {\n\ttests := []struct {\n\t\tname    string\n\t\tsetup   func() boards.PostStorage\n\t\treverse bool\n\t\tids     []boards.ID\n\t}{\n\t\t{\n\t\t\tname: \"default\",\n\t\t\tsetup: func() boards.PostStorage {\n\t\t\t\ts := boards.NewPostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{ID: 1})\n\t\t\t\ts.Add(\u0026boards.Post{ID: 2})\n\t\t\t\ts.Add(\u0026boards.Post{ID: 3})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tids: []boards.ID{1, 2, 3},\n\t\t},\n\t\t{\n\t\t\tname: \"reverse\",\n\t\t\tsetup: func() boards.PostStorage {\n\t\t\t\ts := boards.NewPostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{ID: 1})\n\t\t\t\ts.Add(\u0026boards.Post{ID: 2})\n\t\t\t\ts.Add(\u0026boards.Post{ID: 3})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\treverse: true,\n\t\t\tids:     []boards.ID{3, 2, 1},\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\t\t\tcount := s.Size()\n\t\t\tif tt.reverse {\n\t\t\t\tcount = -count\n\t\t\t}\n\n\t\t\tvar i int\n\t\t\ts.Iterate(0, count, func(p *boards.Post) bool {\n\t\t\t\turequire.True(t, tt.ids[i] == p.ID, \"expect post ID to match\")\n\n\t\t\t\ti++\n\t\t\t\treturn false\n\t\t\t})\n\t\t})\n\t}\n}\n"},{"name":"post_test.gno","body":"package boards_test\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nfunc TestPostSummary(t *testing.T) {\n\tpost := \u0026boards.Post{ID: 1, Body: strings.Repeat(\"X\", 900)}\n\tsummary := post.Summary()\n\turequire.True(t, strings.HasSuffix(summary, \"...\"), \"expect dotted suffix\")\n\turequire.True(t, len(summary) == 80, \"expect summary length to match\")\n}\n\nfunc TestIsThread(t *testing.T) {\n\tpost := \u0026boards.Post{ID: 1, ThreadID: 1} // IDs match\n\turequire.True(t, boards.IsThread(post), \"expect post to be a thread\")\n\turequire.False(t, boards.IsThread(nil), \"expect nil not to be a thread\")\n\n\tpost = \u0026boards.Post{ID: 2, ThreadID: 1} // IDs doesn't match\n\turequire.False(t, boards.IsThread(post), \"expect post not to be a thread\")\n}\n\nfunc TestIsRepost(t *testing.T) {\n\tpost := \u0026boards.Post{ID: 1, OriginalBoardID: 1} // Original board ID available\n\turequire.True(t, boards.IsRepost(post), \"expect post to be a repost\")\n\turequire.False(t, boards.IsRepost(nil), \"expect nil not to be a repost\")\n\n\tpost = \u0026boards.Post{ID: 1} // Original board ID not available\n\turequire.False(t, boards.IsRepost(post), \"expect post not to be a repost\")\n}\n\nfunc TestSummaryOf(t *testing.T) {\n\tsummary := boards.SummaryOf(strings.Repeat(\"X\", 90), 80)\n\turequire.True(t, strings.HasSuffix(summary, \"...\"), \"expect dotted suffix\")\n\turequire.True(t, len(summary) == 80, \"expect summary length to match\")\n\n\tsummary = boards.SummaryOf(strings.Repeat(\" \", 90), 80)\n\turequire.Empty(t, summary, \"expect summary to be empty\")\n}\n"},{"name":"reply.gno","body":"package boards\n\nimport (\n\t\"errors\"\n\t\"strings\"\n\t\"time\"\n\n\t\"gno.land/p/nt/ufmt\"\n)\n\n// NewReply creates a new reply to a thread or another reply.\nfunc NewReply(parent *Post, creator address, body string) (*Post, error) {\n\tif parent == nil {\n\t\treturn nil, errors.New(\"reply requires a parent thread or reply\")\n\t}\n\n\tif parent.ThreadID == 0 {\n\t\treturn nil, errors.New(\"parent has no thread ID assigned\")\n\t}\n\n\tif parent.Board == nil {\n\t\treturn nil, errors.New(\"parent has no board assigned\")\n\t}\n\n\tif !creator.IsValid() {\n\t\treturn nil, ufmt.Errorf(\"invalid reply creator address: %s\", creator)\n\t}\n\n\tbody = strings.TrimSpace(body)\n\tif body == \"\" {\n\t\treturn nil, errors.New(\"reply body is required\")\n\t}\n\n\tid := parent.Board.ThreadsSequence.Next()\n\treturn \u0026Post{\n\t\tID:        id,\n\t\tParentID:  parent.ID,\n\t\tThreadID:  parent.ThreadID,\n\t\tBoard:     parent.Board,\n\t\tBody:      body,\n\t\tReplies:   NewPostStorage(),\n\t\tFlags:     NewFlagStorage(),\n\t\tCreator:   creator,\n\t\tCreatedAt: time.Now(),\n\t}, nil\n}\n\n// MustNewReply creates a new reply or panics on error.\nfunc MustNewReply(parent *Post, creator address, body string) *Post {\n\tp, err := NewReply(parent, creator, body)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn p\n}\n"},{"name":"reply_test.gno","body":"package boards_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nfunc TestNewReply(t *testing.T) {\n\ttests := []struct {\n\t\tname    string\n\t\tparent  func() *boards.Post\n\t\tcreator address\n\t\tbody    string\n\t\terrMsg  string\n\t}{\n\t\t{\n\t\t\tname: \"ok\",\n\t\t\tparent: func() *boards.Post {\n\t\t\t\tboard := boards.New(1)\n\t\t\t\tid := board.ThreadsSequence.Next()\n\t\t\t\treturn \u0026boards.Post{\n\t\t\t\t\tID:       id,\n\t\t\t\t\tThreadID: id,\n\t\t\t\t\tBoard:    board,\n\t\t\t\t}\n\t\t\t},\n\t\t\tcreator: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tbody:    \"Foo\",\n\t\t},\n\t\t{\n\t\t\tname:   \"nil parent\",\n\t\t\tparent: func() *boards.Post { return nil },\n\t\t\terrMsg: \"reply requires a parent thread or reply\",\n\t\t},\n\t\t{\n\t\t\tname: \"parent without thread ID\",\n\t\t\tparent: func() *boards.Post {\n\t\t\t\treturn \u0026boards.Post{ID: 1}\n\t\t\t},\n\t\t\terrMsg: \"parent has no thread ID assigned\",\n\t\t},\n\t\t{\n\t\t\tname: \"parent without board\",\n\t\t\tparent: func() *boards.Post {\n\t\t\t\treturn \u0026boards.Post{ID: 1, ThreadID: 1}\n\t\t\t},\n\t\t\terrMsg: \"parent has no board assigned\",\n\t\t},\n\t\t{\n\t\t\tname: \"invalid creator\",\n\t\t\tparent: func() *boards.Post {\n\t\t\t\treturn \u0026boards.Post{ID: 1, ThreadID: 1, Board: boards.New(1)}\n\t\t\t},\n\t\t\tcreator: \"foo\",\n\t\t\terrMsg:  \"invalid reply creator address: foo\",\n\t\t},\n\t\t{\n\t\t\tname: \"empty body\",\n\t\t\tparent: func() *boards.Post {\n\t\t\t\treturn \u0026boards.Post{ID: 1, ThreadID: 1, Board: boards.New(1)}\n\t\t\t},\n\t\t\tcreator: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tbody:    \"\",\n\t\t\terrMsg:  \"reply body is required\",\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tparent := tt.parent()\n\n\t\t\treply, err := boards.NewReply(parent, tt.creator, tt.body)\n\n\t\t\tif tt.errMsg != \"\" {\n\t\t\t\turequire.Error(t, err, \"expect an error\")\n\t\t\t\turequire.ErrorContains(t, err, tt.errMsg, \"expect error to match\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.NoError(t, err, \"expect no error\")\n\t\t\turequire.True(t, parent.Board.ThreadsSequence.Last() == reply.ID, \"expect ID to match\")\n\t\t\turequire.True(t, parent.ID == reply.ParentID, \"expect parent ID to match\")\n\t\t\turequire.True(t, parent.ThreadID == reply.ThreadID, \"expect thread ID to match\")\n\t\t\turequire.False(t, reply.Board == nil, \"expect board to be assigned\")\n\t\t\turequire.True(t, parent.Board.ID == reply.Board.ID, \"expect board ID to match\")\n\t\t\turequire.Equal(t, tt.body, reply.Body, \"expect body to match\")\n\t\t\turequire.True(t, reply.Replies != nil, \"expect reply to support sub-replies\")\n\t\t\turequire.True(t, reply.Flags != nil, \"expect reply to support flagging\")\n\t\t\turequire.Equal(t, tt.creator, reply.Creator, \"expect creator to match\")\n\t\t\turequire.False(t, reply.CreatedAt.IsZero(), \"expect creation date to be assigned\")\n\t\t})\n\t}\n}\n"},{"name":"repost_storage.gno","body":"package boards\n\nimport (\n\t\"errors\"\n\n\t\"gno.land/p/nt/avl\"\n\t\"gno.land/p/nt/seqid\"\n)\n\ntype (\n\t// RepostIterFn defines a function type to iterate reposts.\n\tRepostIterFn func(board, repost ID) bool\n\n\t// RepostStorage defines an interface for storing reposts.\n\tRepostStorage interface {\n\t\t// Get returns the repost ID for a board.\n\t\tGet(board ID) (repost ID, found bool)\n\n\t\t// Add adds a new repost to the storage.\n\t\tAdd(repost *Post) error\n\n\t\t// Remove removes repost for a board.\n\t\tRemove(board ID) (removed bool)\n\n\t\t// Size returns the number of reposts in the storage.\n\t\tSize() int\n\n\t\t// Iterate iterates reposts.\n\t\t// To reverse iterate reposts use a negative count.\n\t\t// If the callback returns true, the iteration is stopped.\n\t\tIterate(start, count int, fn RepostIterFn) bool\n\t}\n)\n\n// NewRepostStorage creates a new storage for reposts.\n// The new storage uses an AVL tree to store reposts.\nfunc NewRepostStorage() RepostStorage {\n\treturn \u0026repostStorage{avl.NewTree()}\n}\n\ntype repostStorage struct {\n\treposts *avl.Tree // string(Board.ID) -\u003e Post.ID\n}\n\n// Get returns the repost ID for a board.\nfunc (s repostStorage) Get(boardID ID) (ID, bool) {\n\tv, found := s.reposts.Get(boardID.Key())\n\tif !found {\n\t\treturn 0, false\n\t}\n\treturn v.(ID), true\n}\n\n// Add adds a new repost to the storage.\nfunc (s *repostStorage) Add(repost *Post) error {\n\tif repost == nil {\n\t\treturn errors.New(\"saving nil reposts is not allowed\")\n\t}\n\n\ts.reposts.Set(repost.Board.ID.Key(), repost.ID)\n\treturn nil\n}\n\n// Remove removes repost for a board.\nfunc (s *repostStorage) Remove(boardID ID) bool {\n\t_, removed := s.reposts.Remove(boardID.Key())\n\treturn removed\n}\n\n// Size returns the number of reposts in the storage.\nfunc (s repostStorage) Size() int {\n\treturn s.reposts.Size()\n}\n\n// Iterate iterates reposts.\n// To reverse iterate reposts use a negative count.\n// If the callback returns true, the iteration is stopped.\nfunc (s repostStorage) Iterate(start, count int, fn RepostIterFn) bool {\n\tif count \u003c 0 {\n\t\treturn s.reposts.ReverseIterateByOffset(start, -count, func(k string, v any) bool {\n\t\t\tid, err := seqid.FromString(k)\n\t\t\tif err != nil {\n\t\t\t\tpanic(err)\n\t\t\t}\n\n\t\t\treturn fn(ID(id), v.(ID))\n\t\t})\n\t}\n\n\treturn s.reposts.IterateByOffset(start, count, func(k string, v any) bool {\n\t\tid, err := seqid.FromString(k)\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\n\t\treturn fn(ID(id), v.(ID))\n\t})\n}\n"},{"name":"repost_storage_test.gno","body":"package boards_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nfunc TestRepostStorageGet(t *testing.T) {\n\ttests := []struct {\n\t\tname              string\n\t\tsetup             func() boards.RepostStorage\n\t\tboardID, repostID boards.ID\n\t\tfound             bool\n\t}{\n\t\t{\n\t\t\tname: \"single repost\",\n\t\t\tsetup: func() boards.RepostStorage {\n\t\t\t\ts := boards.NewRepostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    1,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 1},\n\t\t\t\t})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tboardID:  1,\n\t\t\trepostID: 1,\n\t\t\tfound:    true,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple reposts\",\n\t\t\tsetup: func() boards.RepostStorage {\n\t\t\t\ts := boards.NewRepostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    2,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 1},\n\t\t\t\t})\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    5,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 2},\n\t\t\t\t})\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    10,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 3},\n\t\t\t\t})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tboardID:  1,\n\t\t\trepostID: 2,\n\t\t\tfound:    true,\n\t\t},\n\t\t{\n\t\t\tname: \"not found\",\n\t\t\tsetup: func() boards.RepostStorage {\n\t\t\t\treturn boards.NewRepostStorage()\n\t\t\t},\n\t\t\tboardID: 404,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\trepostID, found := s.Get(tt.boardID)\n\n\t\t\tif !tt.found {\n\t\t\t\turequire.False(t, found, \"expect repost not to be found\")\n\t\t\t\turequire.True(t, int(repostID) == 0, \"expect repost ID to be 0\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.True(t, found, \"expect post to be found\")\n\t\t\turequire.Equal(t, tt.repostID.String(), repostID.String(), \"expect repost ID to match\")\n\t\t})\n\t}\n}\n\nfunc TestRepostStorageAdd(t *testing.T) {\n\ttests := []struct {\n\t\tname   string\n\t\trepost *boards.Post\n\t\terrMsg string\n\t}{\n\t\t{\n\t\t\tname: \"ok\",\n\t\t\trepost: \u0026boards.Post{\n\t\t\t\tID:    1,\n\t\t\t\tBoard: \u0026boards.Board{ID: 1},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:   \"nil repost\",\n\t\t\trepost: nil,\n\t\t\terrMsg: \"saving nil reposts is not allowed\",\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := boards.NewRepostStorage()\n\n\t\t\terr := s.Add(tt.repost)\n\n\t\t\tif tt.errMsg != \"\" {\n\t\t\t\turequire.Error(t, err, \"expect an error\")\n\t\t\t\turequire.ErrorContains(t, err, tt.errMsg, \"expect error to match\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.NoError(t, err, \"expect no error\")\n\n\t\t\t_, found := s.Get(tt.repost.ID)\n\t\t\turequire.True(t, found, \"expect repost to be found\")\n\t\t})\n\t}\n}\n\nfunc TestRepostStorageRemove(t *testing.T) {\n\ttests := []struct {\n\t\tname    string\n\t\tsetup   func() boards.RepostStorage\n\t\tboardID boards.ID\n\t\tremoved bool\n\t}{\n\t\t{\n\t\t\tname: \"ok\",\n\t\t\tsetup: func() boards.RepostStorage {\n\t\t\t\ts := boards.NewRepostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    100,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 1},\n\t\t\t\t})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tboardID: 1,\n\t\t\tremoved: true,\n\t\t},\n\t\t{\n\t\t\tname: \"not found\",\n\t\t\tsetup: func() boards.RepostStorage {\n\t\t\t\treturn boards.NewRepostStorage()\n\t\t\t},\n\t\t\tboardID: 404,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\tremoved := s.Remove(tt.boardID)\n\n\t\t\tif !tt.removed {\n\t\t\t\turequire.False(t, removed, \"expect repost not to be removed\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.True(t, removed, \"expect repost to be removed\")\n\n\t\t\t_, found := s.Get(tt.boardID)\n\t\t\turequire.False(t, found, \"expect repost not to be found\")\n\t\t})\n\t}\n}\n\nfunc TestRepostStorageSize(t *testing.T) {\n\ttests := []struct {\n\t\tname  string\n\t\tsetup func() boards.RepostStorage\n\t\tsize  int\n\t}{\n\t\t{\n\t\t\tname: \"empty\",\n\t\t\tsetup: func() boards.RepostStorage {\n\t\t\t\treturn boards.NewRepostStorage()\n\t\t\t},\n\t\t\tsize: 0,\n\t\t},\n\t\t{\n\t\t\tname: \"one repost\",\n\t\t\tsetup: func() boards.RepostStorage {\n\t\t\t\ts := boards.NewRepostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    1,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 1},\n\t\t\t\t})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple reposts\",\n\t\t\tsetup: func() boards.RepostStorage {\n\t\t\t\ts := boards.NewRepostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    1,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 1},\n\t\t\t\t})\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    1,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 2},\n\t\t\t\t})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 2,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\turequire.Equal(t, tt.size, s.Size())\n\t\t})\n\t}\n}\n\nfunc TestRepostStorageIterate(t *testing.T) {\n\ttests := []struct {\n\t\tname    string\n\t\tsetup   func() boards.RepostStorage\n\t\treverse bool\n\t\tids     [][2]boards.ID\n\t}{\n\t\t{\n\t\t\tname: \"default\",\n\t\t\tsetup: func() boards.RepostStorage {\n\t\t\t\ts := boards.NewRepostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    10,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 1},\n\t\t\t\t})\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    20,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 2},\n\t\t\t\t})\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    30,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 3},\n\t\t\t\t})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tids: [][2]boards.ID{\n\t\t\t\t{1, 10},\n\t\t\t\t{2, 20},\n\t\t\t\t{3, 30},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"reverse\",\n\t\t\tsetup: func() boards.RepostStorage {\n\t\t\t\ts := boards.NewRepostStorage()\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    10,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 1},\n\t\t\t\t})\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    20,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 2},\n\t\t\t\t})\n\t\t\t\ts.Add(\u0026boards.Post{\n\t\t\t\t\tID:    30,\n\t\t\t\t\tBoard: \u0026boards.Board{ID: 3},\n\t\t\t\t})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\treverse: true,\n\t\t\tids: [][2]boards.ID{\n\t\t\t\t{3, 30},\n\t\t\t\t{2, 20},\n\t\t\t\t{1, 10},\n\t\t\t},\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\t\t\tcount := s.Size()\n\t\t\tif tt.reverse {\n\t\t\t\tcount = -count\n\t\t\t}\n\n\t\t\tvar i int\n\t\t\ts.Iterate(0, count, func(boardID, repostID boards.ID) bool {\n\t\t\t\turequire.True(t, tt.ids[i][0] == boardID, \"expect board ID to match\")\n\t\t\t\turequire.True(t, tt.ids[i][1] == repostID, \"expect repost ID to match\")\n\n\t\t\t\ti++\n\t\t\t\treturn false\n\t\t\t})\n\t\t})\n\t}\n}\n"},{"name":"storage.gno","body":"package boards\n\nimport (\n\t\"errors\"\n\t\"strings\"\n\n\t\"gno.land/p/nt/avl\"\n)\n\ntype (\n\t// BoardIterFn defines a function type to iterate boards.\n\tBoardIterFn func(*Board) bool\n\n\t// Storage defines an interface for boards storage.\n\tStorage interface {\n\t\t// Get retruns a boards that matches an ID.\n\t\tGet(ID) (_ *Board, found bool)\n\n\t\t// GetByName retruns a boards that matches a name.\n\t\tGetByName(name string) (_ *Board, found bool)\n\n\t\t// Remove removes a board from the storage.\n\t\tRemove(ID) (_ *Board, removed bool)\n\n\t\t// Add adds a board to the storage.\n\t\tAdd(*Board) error\n\n\t\t// Size returns the number of boards in the storage.\n\t\tSize() int\n\n\t\t// Iterate iterates boards.\n\t\t// To reverse iterate boards use a negative count.\n\t\t// If the callback returns true, the iteration is stopped.\n\t\tIterate(start, count int, fn BoardIterFn) bool\n\t}\n)\n\n// NewStorage creates a new boards storage.\nfunc NewStorage() Storage {\n\treturn \u0026storage{\n\t\tbyID:   avl.NewTree(),\n\t\tbyName: avl.NewTree(),\n\t}\n}\n\ntype storage struct {\n\tbyID   *avl.Tree // string(Board.ID) -\u003e *Board\n\tbyName *avl.Tree // Board.Name -\u003e Board.ID\n}\n\n// Get returns a board for a specific ID.\nfunc (s storage) Get(boardID ID) (*Board, bool) {\n\tkey := makeBoardKey(boardID)\n\tv, found := s.byID.Get(key)\n\tif !found {\n\t\treturn nil, false\n\t}\n\treturn v.(*Board), true\n}\n\n// Get returns a board for a specific name.\nfunc (s storage) GetByName(name string) (*Board, bool) {\n\tkey := makeBoardNameKey(name)\n\tv, found := s.byName.Get(key)\n\tif !found {\n\t\treturn nil, false\n\t}\n\treturn s.Get(v.(ID))\n}\n\n// Remove removes a board from the storage.\n// It returns false when board is not found.\nfunc (s *storage) Remove(boardID ID) (*Board, bool) {\n\tboard, found := s.Get(boardID)\n\tif !found {\n\t\treturn nil, false\n\t}\n\n\t// Remove indexes for current and previous board names\n\tnames := append([]string{board.Name}, board.Aliases...)\n\tfor _, name := range names {\n\t\tkey := makeBoardNameKey(name)\n\n\t\t// Make sure that name is indexed to the board being removed\n\t\tv, found := s.byName.Get(key)\n\t\tif found \u0026\u0026 v.(ID) == boardID {\n\t\t\ts.byName.Remove(key)\n\t\t}\n\t}\n\n\tkey := makeBoardKey(board.ID)\n\t_, removed := s.byID.Remove(key)\n\treturn board, removed\n}\n\n// Add adds a board to the storage.\n// If board already exists it updates storage by reindexing the board by ID and name.\n// When board name changes it's indexed so it can be found with the new and previous names.\nfunc (s *storage) Add(board *Board) error {\n\tif board == nil {\n\t\treturn errors.New(\"adding nil boards to the storage is not allowed\")\n\t}\n\n\tkey := makeBoardKey(board.ID)\n\ts.byID.Set(key, board)\n\n\t// Index by name when the optional board name is not empty\n\tif key = makeBoardNameKey(board.Name); key != \"\" {\n\t\ts.byName.Set(key, board.ID)\n\t}\n\treturn nil\n}\n\n// Size returns the number of boards in the storage.\nfunc (s storage) Size() int {\n\treturn s.byID.Size()\n}\n\n// Iterate iterates boards.\n// To reverse iterate boards use a negative count.\n// If the callback returns true, the iteration is stopped.\nfunc (s storage) Iterate(start, count int, fn BoardIterFn) bool {\n\tif count \u003c 0 {\n\t\treturn s.byID.ReverseIterateByOffset(start, -count, func(_ string, v any) bool {\n\t\t\treturn fn(v.(*Board))\n\t\t})\n\t}\n\n\treturn s.byID.IterateByOffset(start, count, func(_ string, v any) bool {\n\t\treturn fn(v.(*Board))\n\t})\n}\n\nfunc makeBoardKey(boardID ID) string {\n\treturn boardID.Key()\n}\n\nfunc makeBoardNameKey(name string) string {\n\tname = strings.TrimSpace(name)\n\treturn strings.ToLower(name)\n}\n"},{"name":"storage_test.gno","body":"package boards_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nfunc TestStorageGet(t *testing.T) {\n\ttests := []struct {\n\t\tname    string\n\t\tsetup   func() boards.Storage\n\t\tboardID boards.ID\n\t\tfound   bool\n\t}{\n\t\t{\n\t\t\tname: \"single board\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\ts := boards.NewStorage()\n\t\t\t\ts.Add(\u0026boards.Board{ID: 1})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tboardID: 1,\n\t\t\tfound:   true,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple boards\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\ts := boards.NewStorage()\n\t\t\t\ts.Add(\u0026boards.Board{ID: 1})\n\t\t\t\ts.Add(\u0026boards.Board{ID: 2})\n\t\t\t\ts.Add(\u0026boards.Board{ID: 3})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tboardID: 2,\n\t\t\tfound:   true,\n\t\t},\n\t\t{\n\t\t\tname: \"not found\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\treturn boards.NewStorage()\n\t\t\t},\n\t\t\tboardID: 404,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\tboard, found := s.Get(tt.boardID)\n\n\t\t\tif !tt.found {\n\t\t\t\turequire.False(t, found, \"expect board not to be found\")\n\t\t\t\turequire.True(t, board == nil, \"expect board to be nil\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.True(t, found, \"expect board to be found\")\n\t\t\turequire.False(t, board == nil, \"expect board not to be nil\")\n\t\t\turequire.Equal(t, tt.boardID.String(), board.ID.String(), \"expect board ID to match\")\n\t\t})\n\t}\n}\n\nfunc TestStorageGetByName(t *testing.T) {\n\ttests := []struct {\n\t\tname      string\n\t\tsetup     func() boards.Storage\n\t\tboardName string\n\t\tfound     bool\n\t}{\n\t\t{\n\t\t\tname: \"single board\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\ts := boards.NewStorage()\n\t\t\t\ts.Add(\u0026boards.Board{ID: 1, Name: \"A\"})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tboardName: \"A\",\n\t\t\tfound:     true,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple boards\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\ts := boards.NewStorage()\n\t\t\t\ts.Add(\u0026boards.Board{ID: 1, Name: \"A\"})\n\t\t\t\ts.Add(\u0026boards.Board{ID: 2, Name: \"B\"})\n\t\t\t\ts.Add(\u0026boards.Board{ID: 3, Name: \"C\"})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tboardName: \"B\",\n\t\t\tfound:     true,\n\t\t},\n\t\t{\n\t\t\tname: \"not found\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\treturn boards.NewStorage()\n\t\t\t},\n\t\t\tboardName: \"foo\",\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\tboard, found := s.GetByName(tt.boardName)\n\n\t\t\tif !tt.found {\n\t\t\t\turequire.False(t, found, \"expect board not to be found\")\n\t\t\t\turequire.True(t, board == nil, \"expect board to be nil\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.True(t, found, \"expect board to be found\")\n\t\t\turequire.False(t, board == nil, \"expect board not to be nil\")\n\t\t\turequire.Equal(t, tt.boardName, board.Name, \"expect board name to match\")\n\t\t})\n\t}\n}\n\nfunc TestStorageRemove(t *testing.T) {\n\ttests := []struct {\n\t\tname       string\n\t\tsetup      func() boards.Storage\n\t\tboardID    boards.ID\n\t\tboardNames []string\n\t\tremoved    bool\n\t}{\n\t\t{\n\t\t\tname: \"ok\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\ts := boards.NewStorage()\n\t\t\t\ts.Add(\u0026boards.Board{ID: 1, Name: \"A\"})\n\t\t\t\ts.Add(\u0026boards.Board{ID: 2, Name: \"B\"})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tboardID:    2,\n\t\t\tboardNames: []string{\"B\"},\n\t\t\tremoved:    true,\n\t\t},\n\t\t{\n\t\t\tname: \"ok with aliases\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\ts := boards.NewStorage()\n\t\t\t\ts.Add(\u0026boards.Board{ID: 1, Name: \"A\"})\n\n\t\t\t\tb := \u0026boards.Board{ID: 2, Name: \"B\"}\n\t\t\t\ts.Add(b)\n\n\t\t\t\tb.Aliases = []string{\"A\"}\n\t\t\t\tb.Name = \"C\"\n\t\t\t\ts.Add(b)\n\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tboardID:    2,\n\t\t\tboardNames: []string{\"B\", \"C\"},\n\t\t\tremoved:    true,\n\t\t},\n\t\t{\n\t\t\tname: \"not found\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\treturn boards.NewStorage()\n\t\t\t},\n\t\t\tboardID: 404,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\tboard, removed := s.Remove(tt.boardID)\n\n\t\t\tif !tt.removed {\n\t\t\t\turequire.False(t, removed, \"expect board not to be removed\")\n\t\t\t\turequire.True(t, board == nil, \"expect board to be nil\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.True(t, removed, \"expect board to be removed\")\n\t\t\turequire.False(t, board == nil, \"expect board not to be nil\")\n\t\t\turequire.Equal(t, tt.boardID.String(), board.ID.String(), \"expect board ID to match\")\n\n\t\t\t_, found := s.Get(tt.boardID)\n\t\t\turequire.False(t, found, \"expect board not to be found by ID\")\n\n\t\t\tfor _, name := range tt.boardNames {\n\t\t\t\t_, found = s.GetByName(name)\n\t\t\t\turequire.False(t, found, \"expect board not to be found by name: \"+name)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunc TestStorageAdd(t *testing.T) {\n\ttests := []struct {\n\t\tname   string\n\t\tsetup  func() boards.Storage\n\t\tboard  *boards.Board\n\t\terrMsg string\n\t}{\n\t\t{\n\t\t\tname:  \"ok\",\n\t\t\tboard: \u0026boards.Board{ID: 1, Name: \"A\"},\n\t\t},\n\t\t{\n\t\t\tname:   \"nil board\",\n\t\t\tboard:  nil,\n\t\t\terrMsg: \"adding nil boards to the storage is not allowed\",\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := boards.NewStorage()\n\n\t\t\terr := s.Add(tt.board)\n\n\t\t\tif tt.errMsg != \"\" {\n\t\t\t\turequire.Error(t, err, \"expect an error\")\n\t\t\t\turequire.ErrorContains(t, err, tt.errMsg, \"expect error to match\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.NoError(t, err, \"expect no error\")\n\n\t\t\t_, found := s.Get(tt.board.ID)\n\t\t\turequire.True(t, found, \"expect board to be found by ID\")\n\n\t\t\t_, found = s.GetByName(tt.board.Name)\n\t\t\turequire.True(t, found, \"expect board to be found by name\")\n\t\t})\n\t}\n}\n\nfunc TestStorageSize(t *testing.T) {\n\ttests := []struct {\n\t\tname  string\n\t\tsetup func() boards.Storage\n\t\tsize  int\n\t}{\n\t\t{\n\t\t\tname: \"empty\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\treturn boards.NewStorage()\n\t\t\t},\n\t\t\tsize: 0,\n\t\t},\n\t\t{\n\t\t\tname: \"one board\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\ts := boards.NewStorage()\n\t\t\t\ts.Add(\u0026boards.Board{ID: 1})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple boards\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\ts := boards.NewStorage()\n\t\t\t\ts.Add(\u0026boards.Board{ID: 1})\n\t\t\t\ts.Add(\u0026boards.Board{ID: 2})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 2,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\n\t\t\turequire.Equal(t, tt.size, s.Size())\n\t\t})\n\t}\n}\n\nfunc TestStorageIterate(t *testing.T) {\n\ttests := []struct {\n\t\tname    string\n\t\tsetup   func() boards.Storage\n\t\treverse bool\n\t\tids     []boards.ID\n\t}{\n\t\t{\n\t\t\tname: \"default\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\ts := boards.NewStorage()\n\t\t\t\ts.Add(\u0026boards.Board{ID: 1})\n\t\t\t\ts.Add(\u0026boards.Board{ID: 2})\n\t\t\t\ts.Add(\u0026boards.Board{ID: 3})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tids: []boards.ID{1, 2, 3},\n\t\t},\n\t\t{\n\t\t\tname: \"reverse\",\n\t\t\tsetup: func() boards.Storage {\n\t\t\t\ts := boards.NewStorage()\n\t\t\t\ts.Add(\u0026boards.Board{ID: 1})\n\t\t\t\ts.Add(\u0026boards.Board{ID: 2})\n\t\t\t\ts.Add(\u0026boards.Board{ID: 3})\n\t\t\t\treturn s\n\t\t\t},\n\t\t\treverse: true,\n\t\t\tids:     []boards.ID{3, 2, 1},\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := tt.setup()\n\t\t\tcount := s.Size()\n\t\t\tif tt.reverse {\n\t\t\t\tcount = -count\n\t\t\t}\n\n\t\t\tvar i int\n\t\t\ts.Iterate(0, count, func(p *boards.Board) bool {\n\t\t\t\turequire.True(t, tt.ids[i] == p.ID, \"expect board ID to match\")\n\n\t\t\t\ti++\n\t\t\t\treturn false\n\t\t\t})\n\t\t})\n\t}\n}\n"},{"name":"thread.gno","body":"package boards\n\nimport (\n\t\"errors\"\n\t\"strings\"\n\t\"time\"\n\n\t\"gno.land/p/nt/ufmt\"\n)\n\n// NewThread creates a new board thread.\nfunc NewThread(b *Board, creator address, title, body string) (*Post, error) {\n\tif b == nil {\n\t\treturn nil, errors.New(\"thread requires a parent board\")\n\t}\n\n\tif !creator.IsValid() {\n\t\treturn nil, ufmt.Errorf(\"invalid thread creator address: %s\", creator)\n\t}\n\n\ttitle = strings.TrimSpace(title)\n\tif title == \"\" {\n\t\treturn nil, errors.New(\"thread title is required\")\n\t}\n\n\tbody = strings.TrimSpace(body)\n\tif body == \"\" {\n\t\treturn nil, errors.New(\"thread body is required\")\n\t}\n\n\tid := b.ThreadsSequence.Next()\n\treturn \u0026Post{\n\t\tID:        id,\n\t\tThreadID:  id,\n\t\tBoard:     b,\n\t\tTitle:     title,\n\t\tBody:      body,\n\t\tReplies:   NewPostStorage(),\n\t\tReposts:   NewRepostStorage(),\n\t\tFlags:     NewFlagStorage(),\n\t\tCreator:   creator,\n\t\tCreatedAt: time.Now(),\n\t}, nil\n}\n\n// MustNewThread creates a new thread or panics on error.\nfunc MustNewThread(b *Board, creator address, title, body string) *Post {\n\tt, err := NewThread(b, creator, title, body)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn t\n}\n\n// NewRepost creates a new thread that is a repost of a thread from another board.\nfunc NewRepost(thread *Post, dst *Board, creator address) (*Post, error) {\n\tif thread == nil {\n\t\treturn nil, errors.New(\"thread to repost is required\")\n\t}\n\n\tif thread.Board == nil {\n\t\treturn nil, errors.New(\"original thread has no board assigned\")\n\t}\n\n\tif dst == nil {\n\t\treturn nil, errors.New(\"thread repost requires a destination board\")\n\t}\n\n\tif IsRepost(thread) {\n\t\treturn nil, errors.New(\"reposting a thread that is a repost is not allowed\")\n\t}\n\n\tif !IsThread(thread) {\n\t\treturn nil, errors.New(\"post must be a thread to be reposted to another board\")\n\t}\n\n\tif !creator.IsValid() {\n\t\treturn nil, ufmt.Errorf(\"invalid thread repost creator address: %s\", creator)\n\t}\n\n\tid := dst.ThreadsSequence.Next()\n\treturn \u0026Post{\n\t\tID:              id,\n\t\tThreadID:        id,\n\t\tParentID:        thread.ID,\n\t\tOriginalBoardID: thread.Board.ID,\n\t\tBoard:           dst,\n\t\tReplies:         NewPostStorage(),\n\t\tReposts:         NewRepostStorage(),\n\t\tFlags:           NewFlagStorage(),\n\t\tCreator:         creator,\n\t\tCreatedAt:       time.Now(),\n\t}, nil\n}\n\n// MustNewRepost creates a new thread that is a repost of a thread from another board or panics on error.\nfunc MustNewRepost(thread *Post, dst *Board, creator address) *Post {\n\tr, err := NewRepost(thread, dst, creator)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn r\n}\n"},{"name":"thread_test.gno","body":"package boards_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/nt/urequire\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nfunc TestNewThread(t *testing.T) {\n\ttests := []struct {\n\t\tname        string\n\t\tboard       *boards.Board\n\t\tcreator     address\n\t\ttitle, body string\n\t\terrMsg      string\n\t}{\n\t\t{\n\t\t\tname:    \"ok\",\n\t\t\tboard:   boards.New(1),\n\t\t\tcreator: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\ttitle:   \"Test\",\n\t\t\tbody:    \"Foo\",\n\t\t},\n\t\t{\n\t\t\tname:   \"nil board\",\n\t\t\tboard:  nil,\n\t\t\terrMsg: \"thread requires a parent board\",\n\t\t},\n\t\t{\n\t\t\tname:    \"invalid creator\",\n\t\t\tboard:   boards.New(1),\n\t\t\tcreator: \"foo\",\n\t\t\terrMsg:  \"invalid thread creator address: foo\",\n\t\t},\n\t\t{\n\t\t\tname:    \"empty title\",\n\t\t\tboard:   boards.New(1),\n\t\t\tcreator: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\ttitle:   \"\",\n\t\t\terrMsg:  \"thread title is required\",\n\t\t},\n\t\t{\n\t\t\tname:    \"empty body\",\n\t\t\tboard:   boards.New(1),\n\t\t\tcreator: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\ttitle:   \"Test\",\n\t\t\tbody:    \"\",\n\t\t\terrMsg:  \"thread body is required\",\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tthread, err := boards.NewThread(tt.board, tt.creator, tt.title, tt.body)\n\n\t\t\tif tt.errMsg != \"\" {\n\t\t\t\turequire.Error(t, err, \"expect an error\")\n\t\t\t\turequire.ErrorContains(t, err, tt.errMsg, \"expect error to match\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.NoError(t, err, \"expect no error\")\n\t\t\turequire.True(t, tt.board.ThreadsSequence.Last() == thread.ID, \"expect ID to match\")\n\t\t\turequire.True(t, thread.ThreadID == thread.ID, \"expect thread ID to match\")\n\t\t\turequire.False(t, thread.Board == nil, \"expect board to be assigned\")\n\t\t\turequire.True(t, tt.board.ID == thread.Board.ID, \"expect board ID to match\")\n\t\t\turequire.Equal(t, tt.title, thread.Title, \"expect title to match\")\n\t\t\turequire.Equal(t, tt.body, thread.Body, \"expect body to match\")\n\t\t\turequire.True(t, thread.Replies != nil, \"expect thread to support sub-replies\")\n\t\t\turequire.True(t, thread.Reposts != nil, \"expect thread to support reposts\")\n\t\t\turequire.True(t, thread.Flags != nil, \"expect thread to support flagging\")\n\t\t\turequire.Equal(t, tt.creator, thread.Creator, \"expect creator to match\")\n\t\t\turequire.False(t, thread.CreatedAt.IsZero(), \"expect creation date to be assigned\")\n\t\t})\n\t}\n}\n\nfunc TestNewRepost(t *testing.T) {\n\ttests := []struct {\n\t\tname       string\n\t\torigThread *boards.Post\n\t\tdstBoard   *boards.Board\n\t\tcreator    address\n\t\terrMsg     string\n\t}{\n\t\t{\n\t\t\tname: \"ok\",\n\t\t\torigThread: boards.MustNewThread(\n\t\t\t\tboards.New(1),\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"Title\",\n\t\t\t\t\"Body\",\n\t\t\t),\n\t\t\tdstBoard: boards.New(2),\n\t\t\tcreator:  \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t},\n\t\t{\n\t\t\tname:       \"nil original thread\",\n\t\t\torigThread: nil,\n\t\t\terrMsg:     \"thread to repost is required\",\n\t\t},\n\t\t{\n\t\t\tname:       \"original thread without board\",\n\t\t\torigThread: \u0026boards.Post{ID: 1},\n\t\t\terrMsg:     \"original thread has no board assigned\",\n\t\t},\n\t\t{\n\t\t\tname: \"nil destination board\",\n\t\t\torigThread: boards.MustNewThread(\n\t\t\t\tboards.New(1),\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"Title\",\n\t\t\t\t\"Body\",\n\t\t\t),\n\t\t\tdstBoard: nil,\n\t\t\terrMsg:   \"thread repost requires a destination board\",\n\t\t},\n\t\t{\n\t\t\tname: \"original thread is not a thread\",\n\t\t\torigThread: \u0026boards.Post{\n\t\t\t\tID:       1,\n\t\t\t\tThreadID: 2,\n\t\t\t\tBoard:    boards.New(1),\n\t\t\t},\n\t\t\tdstBoard: boards.New(2),\n\t\t\terrMsg:   \"post must be a thread to be reposted to another board\",\n\t\t},\n\t\t{\n\t\t\tname: \"original thread is a repost\",\n\t\t\torigThread: \u0026boards.Post{\n\t\t\t\tID:              1,\n\t\t\t\tThreadID:        1,\n\t\t\t\tOriginalBoardID: 1,\n\t\t\t\tBoard:           boards.New(1),\n\t\t\t},\n\t\t\tdstBoard: boards.New(2),\n\t\t\terrMsg:   \"reposting a thread that is a repost is not allowed\",\n\t\t},\n\t\t{\n\t\t\tname: \"invalid creator\",\n\t\t\torigThread: boards.MustNewThread(\n\t\t\t\tboards.New(1),\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t\t\"Title\",\n\t\t\t\t\"Body\",\n\t\t\t),\n\t\t\tdstBoard: boards.New(2),\n\t\t\tcreator:  \"foo\",\n\t\t\terrMsg:   \"invalid thread repost creator address: foo\",\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tthread, err := boards.NewRepost(tt.origThread, tt.dstBoard, tt.creator)\n\n\t\t\tif tt.errMsg != \"\" {\n\t\t\t\turequire.Error(t, err, \"expect an error\")\n\t\t\t\turequire.ErrorContains(t, err, tt.errMsg, \"expect error to match\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.NoError(t, err, \"expect no error\")\n\t\t\turequire.True(t, thread.ID == tt.dstBoard.ThreadsSequence.Last(), \"expect ID to match\")\n\t\t\turequire.True(t, thread.ThreadID == thread.ID, \"expect thread ID to match\")\n\t\t\turequire.True(t, thread.ParentID == tt.origThread.ID, \"expect parent ID to match\")\n\t\t\turequire.True(t, thread.OriginalBoardID == tt.origThread.Board.ID, \"expect original board ID to match\")\n\t\t\turequire.False(t, thread.Board == nil, \"expect board to be assigned\")\n\t\t\turequire.True(t, thread.Board.ID == tt.dstBoard.ID, \"expect board ID to match\")\n\t\t\turequire.Empty(t, thread.Title, \"expect title to be empty\")\n\t\t\turequire.Empty(t, thread.Body, \"expect body to be empty\")\n\t\t\turequire.True(t, thread.Replies != nil, \"expect thread to support sub-replies\")\n\t\t\turequire.True(t, thread.Reposts != nil, \"expect thread to support reposts\")\n\t\t\turequire.True(t, thread.Flags != nil, \"expect thread to support flagging\")\n\t\t\turequire.Equal(t, tt.creator, thread.Creator, \"expect creator to match\")\n\t\t\turequire.False(t, thread.CreatedAt.IsZero(), \"expect creation date to be assigned\")\n\t\t})\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"80000000","gas_fee":"800000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"f5lNhtV5pwc5PAEauU7Rt2u7TWbiaqjttsr1fUqMhwTE80oJgCuDB5X/nQMpIvRjhFyhRl3CC9ahxRZt2+k0BQ=="}],"memo":""},"metadata":{"timestamp":"1761557525"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq","package":{"name":"dao","path":"gno.land/p/devx000/wip/gnoland/boards/dao","files":[{"name":"gnomod.toml","body":"module = \"gno.land/p/devx000/wip/gnoland/boards/dao\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\"\n"},{"name":"member_storage.gno","body":"package dao\n\nimport (\n\t\"gno.land/p/jeronimo000/message\"\n\t\"gno.land/p/nt/avl\"\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\nconst (\n\tmsgMemberAdd    message.Topic = \"MemberAdd\"\n\tmsgMemberRemove               = \"MemberRemove\"\n)\n\n// GetMemberGroups returns the groups that a member belongs to.\n// It can be used on boards member storage instances, instead of iterating\n// all groups checking for user existance which would be more expensive.\nfunc GetMemberGroups(s commondao.MemberStorage, member address) []string {\n\tstorage, ok := s.(*memberStorage)\n\tif !ok {\n\t\treturn nil\n\t}\n\n\tv, found := storage.memberGroups.Get(member.String())\n\tif !found {\n\t\treturn nil\n\t}\n\n\ttree := v.(*avl.Tree)\n\tgroups := make([]string, 0, tree.Size())\n\ttree.Iterate(\"\", \"\", func(group string, _ any) bool {\n\t\tgroups = append(groups, group)\n\t\treturn false\n\t})\n\treturn groups\n}\n\n// NewMemberStorage creates a new CommonDAO member storage with grouping support.\n// This is a custom storage that automatically adds or removes members that are added\n// or removed from any of the member groups. This allows for quick and inexpensive\n// checks for the number of total unique storage users, including users added to groups,\n// and also to iterate all of them without needing to iterate individual groups.\nfunc NewMemberStorage() commondao.MemberStorage {\n\t// Create a new broker to allow storages to publish and subscribe to messages\n\t// It is used to add/remove users from the storage each time one or more groups change.\n\tbroker := message.NewBroker()\n\n\t// Define a factory for creating custom member storages when groups are created.\n\t// Custom storage publishes when a member is added or removed from a group.\n\tinnerFactory := func(group string) commondao.MemberStorage {\n\t\treturn \u0026groupMemberStorage{\n\t\t\tMemberStorage: commondao.NewMemberStorage(),\n\t\t\tmessages:      broker,\n\t\t\tgroup:         group,\n\t\t}\n\t}\n\n\t// Create a member storage that automatically adds or removes members each time\n\t// a member group changes. This allows the storage to keep all members within\n\t// the same \"root\" storage for easier iteration.\n\tstorage := \u0026memberStorage{\n\t\tMemberStorage: commondao.NewMemberStorageWithGrouping(\n\t\t\tcommondao.UseStorageFactory(innerFactory),\n\t\t),\n\t\tmessages: broker,\n\t}\n\n\t// Subscribe to messages published by member groups\n\tstorage.messages.Subscribe(msgMemberAdd, storage.handleMemberAddMsg)\n\tstorage.messages.Subscribe(msgMemberRemove, storage.handleMemberRemoveMsg)\n\treturn storage\n}\n\ntype memberStorage struct {\n\tcommondao.MemberStorage\n\n\tmemberGroups avl.Tree // string(address) -\u003e *avl.Tree(group -\u003e struct{})\n\tmessages     message.Subscriber\n}\n\nfunc (s *memberStorage) handleMemberAddMsg(msg message.Message) {\n\tdata := msg.Data.(groupMemberUpdateData)\n\tkey := data.Member.String()\n\tv, _ := s.memberGroups.Get(key)\n\tgroups, ok := v.(*avl.Tree)\n\tif !ok {\n\t\t// Create a new tree to track member's groups\n\t\tgroups = avl.NewTree()\n\t\ts.memberGroups.Set(key, groups)\n\n\t\t// Add the new member to the storage\n\t\ts.MemberStorage.Add(data.Member)\n\t}\n\n\t// Keep track of the new member group\n\tgroups.Set(data.Group, struct{}{})\n}\n\nfunc (s *memberStorage) handleMemberRemoveMsg(msg message.Message) {\n\tdata := msg.Data.(groupMemberUpdateData)\n\tkey := data.Member.String()\n\tv, found := s.memberGroups.Get(key)\n\tif !found {\n\t\t// Member should always be found\n\t\treturn\n\t}\n\n\t// Remove the group from the list of groups member belongs\n\tgroups := v.(*avl.Tree)\n\tgroups.Remove(data.Group)\n\n\t// Remove the member from the storage when it doesn't belong to any group\n\tif groups.Size() == 0 {\n\t\ts.memberGroups.Remove(key)\n\t\ts.MemberStorage.Remove(data.Member)\n\t}\n}\n\n// Size returns the number of members in the storage.\n// It also includes unique members that belong to any number of member groups.\nfunc (s memberStorage) Size() int {\n\treturn s.MemberStorage.Size()\n}\n\n// IterateByOffset iterates members starting at the given offset.\n// The callback can return true to stop iteration.\n// It also iterates unique members that belong to any of the member groups.\nfunc (s memberStorage) IterateByOffset(offset, count int, fn func(address) bool) {\n\ts.MemberStorage.IterateByOffset(offset, count, fn)\n}\n\n// groupMemberUpdateData defines a data type for group member updates.\ntype groupMemberUpdateData struct {\n\tGroup  string\n\tMember address\n}\n\n// groupMemberStorage defines a member storage for member groups.\n// This type of storage publishes messages when a member is added or removed from a group.\ntype groupMemberStorage struct {\n\tcommondao.MemberStorage\n\n\tgroup    string\n\tmessages message.Publisher\n}\n\n// Add adds a member to the storage.\n// Returns true if the member is added, or false if it already existed.\nfunc (s *groupMemberStorage) Add(member address) bool {\n\ts.messages.Publish(msgMemberAdd, groupMemberUpdateData{\n\t\tGroup:  s.group,\n\t\tMember: member,\n\t})\n\treturn s.MemberStorage.Add(member)\n}\n\n// Remove removes a member from the storage.\n// Returns true if member was removed, or false if it was not found.\nfunc (s *groupMemberStorage) Remove(member address) bool {\n\ts.messages.Publish(msgMemberRemove, groupMemberUpdateData{\n\t\tGroup:  s.group,\n\t\tMember: member,\n\t})\n\treturn s.MemberStorage.Remove(member)\n}\n"},{"name":"member_storage_test.gno","body":"package dao_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n\t\"gno.land/p/nt/urequire\"\n\n\tboardsdao \"gno.land/p/devx000/wip/gnoland/boards/dao\"\n)\n\nfunc TestMemberStorageGroupingMemberAdd(t *testing.T) {\n\ttests := []struct {\n\t\tname   string\n\t\tsetup  func() commondao.MemberStorage\n\t\tgroup  string\n\t\tmember address\n\t}{\n\t\t{\n\t\t\tname: \"empty group\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\ts.Grouping().Add(\"foo\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tgroup:  \"foo\",\n\t\t\tmember: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t},\n\t\t{\n\t\t\tname: \"group with members\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\tgroup, _ := s.Grouping().Add(\"foo\")\n\t\t\t\tgroup.Members().Add(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\")\n\t\t\t\tgroup.Members().Add(\"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tgroup:  \"foo\",\n\t\t\tmember: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t},\n\t\t{\n\t\t\tname: \"multiple groups with members\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\tgroup, _ := s.Grouping().Add(\"foo\")\n\t\t\t\tgroup.Members().Add(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\")\n\t\t\t\tgroup, _ = s.Grouping().Add(\"bar\")\n\t\t\t\tgroup.Members().Add(\"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tgroup:  \"bar\",\n\t\t\tmember: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t// Arrange\n\t\t\ts := tt.setup()\n\t\t\tgroup, _ := s.Grouping().Get(tt.group)\n\n\t\t\t// Act\n\t\t\tgroup.Members().Add(tt.member)\n\n\t\t\t// Assert\n\t\t\turequire.True(t, s.Has(tt.member), \"expect member to also be added to parent storage\")\n\t\t})\n\t}\n}\n\nfunc TestMemberStorageGroupingMemberRemove(t *testing.T) {\n\ttests := []struct {\n\t\tname   string\n\t\tsetup  func() commondao.MemberStorage\n\t\tgroup  string\n\t\tmember address\n\t}{\n\t\t{\n\t\t\tname: \"one group one member\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\tgroup, _ := s.Grouping().Add(\"foo\")\n\t\t\t\tgroup.Members().Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tgroup:  \"foo\",\n\t\t\tmember: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t},\n\t\t{\n\t\t\tname: \"one group multiple members\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\tgroup, _ := s.Grouping().Add(\"foo\")\n\t\t\t\tgroup.Members().Add(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\")\n\t\t\t\tgroup.Members().Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\tgroup.Members().Add(\"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tgroup:  \"foo\",\n\t\t\tmember: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t},\n\t\t{\n\t\t\tname: \"multiple groups multiple members\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\tgroup, _ := s.Grouping().Add(\"foo\")\n\t\t\t\tgroup.Members().Add(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\")\n\t\t\t\tgroup.Members().Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\tgroup, _ = s.Grouping().Add(\"bar\")\n\t\t\t\tgroup.Members().Add(\"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tgroup:  \"foo\",\n\t\t\tmember: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t// Arrange\n\t\t\ts := tt.setup()\n\t\t\tgroup, _ := s.Grouping().Get(tt.group)\n\n\t\t\t// Act\n\t\t\tgroup.Members().Remove(tt.member)\n\n\t\t\t// Assert\n\t\t\turequire.False(t, s.Has(tt.member), \"expect member to also be removed from parent storage\")\n\t\t})\n\t}\n}\n\nfunc TestMemberStorageSize(t *testing.T) {\n\ttests := []struct {\n\t\tname  string\n\t\tsetup func() commondao.MemberStorage\n\t\tsize  int\n\t}{\n\t\t{\n\t\t\tname: \"empty\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\treturn boardsdao.NewMemberStorage()\n\t\t\t},\n\t\t\tsize: 0,\n\t\t},\n\t\t{\n\t\t\tname: \"member without group\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\ts.Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple members without group\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\ts.Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\ts.Add(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 2,\n\t\t},\n\t\t{\n\t\t\tname: \"member in group\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\tgroup, _ := s.Grouping().Add(\"foo\")\n\t\t\t\tgroup.Members().Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple members in group\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\tgroup, _ := s.Grouping().Add(\"foo\")\n\t\t\t\tgroup.Members().Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\tgroup.Members().Add(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 2,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple members in different groups\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\tgroup, _ := s.Grouping().Add(\"foo\")\n\t\t\t\tgroup.Members().Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\tgroup, _ = s.Grouping().Add(\"bar\")\n\t\t\t\tgroup.Members().Add(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 2,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t// Arrange\n\t\t\ts := tt.setup()\n\n\t\t\t// Act\n\t\t\tsize := s.Size()\n\n\t\t\t// Assert\n\t\t\turequire.Equal(t, tt.size, size)\n\t\t})\n\t}\n}\n\nfunc TestMemberStorageIterateByOffset(t *testing.T) {\n\ttests := []struct {\n\t\tname    string\n\t\tsetup   func() commondao.MemberStorage\n\t\tmembers []address\n\t}{\n\t\t{\n\t\t\tname: \"empty\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\treturn boardsdao.NewMemberStorage()\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"without group\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\ts.Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\ts.Add(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tmembers: []address{\n\t\t\t\t\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\",\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"single group\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\tgroup, _ := s.Grouping().Add(\"foo\")\n\t\t\t\tgroup.Members().Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\tgroup.Members().Add(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tmembers: []address{\n\t\t\t\t\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\",\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"multiple groups\",\n\t\t\tsetup: func() commondao.MemberStorage {\n\t\t\t\ts := boardsdao.NewMemberStorage()\n\t\t\t\tgroup, _ := s.Grouping().Add(\"foo\")\n\t\t\t\tgroup.Members().Add(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\tgroup, _ = s.Grouping().Add(\"bar\")\n\t\t\t\tgroup.Members().Add(\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\")\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tmembers: []address{\n\t\t\t\t\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\",\n\t\t\t\t\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\t},\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t// Arrange\n\t\t\tvar i int\n\t\t\ts := tt.setup()\n\t\t\tmembers := make([]address, s.Size())\n\n\t\t\t// Act\n\t\t\ts.IterateByOffset(0, s.Size(), func(addr address) bool {\n\t\t\t\tmembers[i] = addr\n\t\t\t\ti++\n\t\t\t\treturn false\n\t\t\t})\n\n\t\t\t// Assert\n\t\t\turequire.Equal(t, len(tt.members), len(members), \"expect iterated members to match\")\n\n\t\t\tfor i, member := range members {\n\t\t\t\turequire.Equal(t, tt.members[i], member, \"expect member to match\")\n\t\t\t}\n\t\t})\n\t}\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"80000000","gas_fee":"800000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"z2kACpbkVqCDyvPRkhD7+l97bPjujHij2avQZeW30sBqCEuXH70PNXjRAL4x7eTL90UD3AjhnnBBY8/nxtXbAw=="}],"memo":""},"metadata":{"timestamp":"1761557661"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"BwQl8ySwEks45RxOGIIXxzmfu+1B7fWR7xF8hB4zf2a5GLdniCzyquK8H2cL1u6AVnQUyUcCaOLFpLr9FgUQCw=="}],"memo":""},"metadata":{"timestamp":"1761557696"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g17wparzzj7stjzyxthf32csewkgr54ganvsmdc9","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"T1N+BtzlHS8Ckr5tx8V+pUeq6a9ehYv2I/dRgpjoogMpRjpf30kcfZUDMjN+D2muUUl8MPix3hBYa9L1QHWiBQ=="}],"memo":""},"metadata":{"timestamp":"1761557786"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g17wparzzj7stjzyxthf32csewkgr54ganvsmdc9","send":"1000000ugnot","max_deposit":"","pkg_path":"gno.land/r/gnoland/users/v1","func":"Register","args":["boards000"]}],"fee":{"gas_wanted":"50000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"JHLAznwJjr1ALyyKakYZxrvN4pe4dtLEJzlTPOjXl5U1x+/SvH3JMOx+wyWxFRkr8cAppftwDMNiNcRY+6MUCA=="}],"memo":""},"metadata":{"timestamp":"1761557932"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g17wparzzj7stjzyxthf32csewkgr54ganvsmdc9","amount":"10000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"eSONv3bizpGCnxt3XVlPJ6qxkXOepP/Wp9Rc2VItrJl3eOH8RqT8jerksd+jxCp/3Gkzzh318Z1dtOm9f6WdBg=="}],"memo":""},"metadata":{"timestamp":"1761557957"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g17wparzzj7stjzyxthf32csewkgr54ganvsmdc9","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"T1N+BtzlHS8Ckr5tx8V+pUeq6a9ehYv2I/dRgpjoogMpRjpf30kcfZUDMjN+D2muUUl8MPix3hBYa9L1QHWiBQ=="}],"memo":""},"metadata":{"timestamp":"1761557977"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g17wparzzj7stjzyxthf32csewkgr54ganvsmdc9","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"T1N+BtzlHS8Ckr5tx8V+pUeq6a9ehYv2I/dRgpjoogMpRjpf30kcfZUDMjN+D2muUUl8MPix3hBYa9L1QHWiBQ=="}],"memo":""},"metadata":{"timestamp":"1761558229"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g17wparzzj7stjzyxthf32csewkgr54ganvsmdc9","package":{"name":"boards2","path":"gno.land/r/boards000/v1rc1","files":[{"name":"boards.gno","body":"package boards2\n\nimport (\n\t\"chain/runtime\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/moul/realmpath\"\n\t\"gno.land/p/moul/txlink\"\n\t\"gno.land/p/nt/avl\"\n)\n\n// TODO: Refactor globals in favor of a cleaner pattern\nvar (\n\tgRealmLink        txlink.Realm\n\tgNotice           string\n\tgHelp             string\n\tgListedBoardsByID avl.Tree // string(id) -\u003e *boards.Board\n\tgInviteRequests   avl.Tree // string(board id) -\u003e *avl.Tree(address -\u003e time.Time)\n\tgBannedUsers      avl.Tree // string(board id) -\u003e *avl.Tree(address -\u003e time.Time)\n\tgLocked           struct {\n\t\trealm        bool\n\t\trealmMembers bool\n\t}\n)\n\nvar (\n\tgBoards         = boards.NewStorage()\n\tgBoardsSequence = boards.NewIdentifierGenerator()\n\tgPerms          = initRealmPermissions(\n\t\t\"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\", // @devx\n\t\t\"g1manfred47kzduec920z88wfr64ylksmdcedlf5\", // @moul\n\t)\n)\n\nfunc init() {\n\t// Save current realm path so it's available during render calls\n\tgRealmLink = txlink.Realm(runtime.CurrentRealm().PkgPath())\n}\n\n// initRealmPermissions returns the default realm permissions.\nfunc initRealmPermissions(owners ...address) boards.Permissions {\n\tperms := NewBasicPermissions()\n\tperms.SetSuperRole(RoleOwner)\n\tperms.AddRole(RoleAdmin, PermissionBoardCreate)\n\tfor _, owner := range owners {\n\t\tperms.SetUserRoles(cross, owner, RoleOwner)\n\t}\n\n\tperms.ValidateFunc(PermissionBoardCreate, validateBoardCreate)\n\tperms.ValidateFunc(PermissionMemberInvite, validateMemberInvite)\n\tperms.ValidateFunc(PermissionRoleChange, validateRoleChange)\n\treturn perms\n}\n\n// getInvitesRequests returns invite requests for a board.\nfunc getInviteRequests(boardID boards.ID) (_ *avl.Tree, found bool) {\n\tv, exists := gInviteRequests.Get(boardID.Key())\n\tif !exists {\n\t\treturn nil, false\n\t}\n\treturn v.(*avl.Tree), true\n}\n\n// getBannedUsers returns banned users within a board.\nfunc getBannedUsers(boardID boards.ID) (_ *avl.Tree, found bool) {\n\tv, exists := gBannedUsers.Get(boardID.Key())\n\tif !exists {\n\t\treturn nil, false\n\t}\n\treturn v.(*avl.Tree), true\n}\n\n// mustGetBoardByName returns a board or panics when it's not found.\nfunc mustGetBoardByName(name string) *boards.Board {\n\tboard, found := gBoards.GetByName(name)\n\tif !found {\n\t\tpanic(\"board does not exist with name: \" + name)\n\t}\n\treturn board\n}\n\n// mustGetBoard returns a board or panics when it's not found.\nfunc mustGetBoard(id boards.ID) *boards.Board {\n\tboard, found := gBoards.Get(id)\n\tif !found {\n\t\tpanic(\"board does not exist with ID: \" + id.String())\n\t}\n\treturn board\n}\n\n// mustGetThread returns a thread or panics when it's not found.\nfunc mustGetThread(board *boards.Board, threadID boards.ID) *boards.Post {\n\tthread, found := board.Threads.Get(threadID)\n\tif !found {\n\t\tpanic(\"thread does not exist with ID: \" + threadID.String())\n\t}\n\treturn thread\n}\n\n// mustGetReply returns a reply or panics when it's not found.\nfunc mustGetReply(thread *boards.Post, replyID boards.ID) *boards.Post {\n\treply, found := thread.Replies.Get(replyID)\n\tif !found {\n\t\tpanic(\"reply does not exist with ID: \" + replyID.String())\n\t}\n\treturn reply\n}\n\nfunc mustGetPermissions(bid boards.ID) boards.Permissions {\n\tif bid != 0 {\n\t\tboard := mustGetBoard(bid)\n\t\treturn board.Permissions\n\t}\n\treturn gPerms\n}\n\nfunc parseRealmPath(path string) *realmpath.Request {\n\t// Make sure request is using current realm path so paths can be parsed during Render\n\tr := realmpath.Parse(path)\n\tr.Realm = string(gRealmLink)\n\treturn r\n}\n"},{"name":"flag.gno","body":"package boards2\n\nimport (\n\t\"strconv\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/nt/avl\"\n)\n\n// DefaultFlaggingThreshold defines the default number of flags that hides flaggable items.\nconst DefaultFlaggingThreshold = 1\n\nvar gFlaggingThresholds avl.Tree // string(board ID) -\u003e int\n\n// flagItem adds a flag to a post.\n// Returns whether flag count threshold is reached and post can be hidden.\n// Panics if flag count threshold was already reached.\nfunc flagItem(post *boards.Post, user address, reason string, threshold int) bool {\n\tif post.Flags.Size() \u003e= threshold {\n\t\tpanic(\"flag count threshold exceeded: \" + strconv.Itoa(threshold))\n\t}\n\n\tif post.Flags.Exists(user) {\n\t\tpanic(\"post has been already flagged by \" + user.String())\n\t}\n\n\tpost.Flags.Add(boards.Flag{\n\t\tUser:   user,\n\t\tReason: reason,\n\t})\n\n\treturn post.Flags.Size() == threshold\n}\n\nfunc getFlaggingThreshold(bid boards.ID) int {\n\tif v, ok := gFlaggingThresholds.Get(bid.String()); ok {\n\t\treturn v.(int)\n\t}\n\treturn DefaultFlaggingThreshold\n}\n"},{"name":"format.gno","body":"package boards2\n\nimport (\n\t\"strconv\"\n\t\"strings\"\n\n\t\"gno.land/p/moul/md\"\n\n\t\"gno.land/r/sys/users\"\n)\n\nconst dateFormat = \"2006-01-02 3:04pm MST\"\n\nfunc padLeft(s string, length int) string {\n\tif len(s) \u003e= length {\n\t\treturn s\n\t}\n\treturn strings.Repeat(\" \", length-len(s)) + s\n}\n\nfunc padZero(u64 uint64, length int) string {\n\ts := strconv.Itoa(int(u64))\n\tif len(s) \u003e= length {\n\t\treturn s\n\t}\n\treturn strings.Repeat(\"0\", length-len(s)) + s\n}\n\nfunc indentBody(indent string, body string) string {\n\tvar (\n\t\tres   string\n\t\tlines = strings.Split(body, \"\\n\")\n\t)\n\tfor i, line := range lines {\n\t\tif i \u003e 0 {\n\t\t\tres += \"\\n\"\n\t\t}\n\t\tres += indent + line\n\t}\n\treturn res\n}\n\nfunc summaryOf(text string, length int) string {\n\tlines := strings.SplitN(text, \"\\n\", 2)\n\tline := lines[0]\n\tif len(line) \u003e length {\n\t\tline = line[:(length-3)] + \"...\"\n\t} else if len(lines) \u003e 1 {\n\t\tline = line + \"...\"\n\t}\n\treturn line\n}\n\nfunc userLink(addr address) string {\n\tif u := users.ResolveAddress(addr); u != nil {\n\t\treturn md.UserLink(u.Name())\n\t}\n\treturn md.UserLink(addr.String())\n}\n"},{"name":"gnomod.toml","body":"module = \"gno.land/r/boards000/v1rc1\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g17wparzzj7stjzyxthf32csewkgr54ganvsmdc9\"\n"},{"name":"permissions.gno","body":"package boards2\n\nimport (\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nconst (\n\tRoleOwner     boards.Role = \"owner\"\n\tRoleAdmin                 = \"admin\"\n\tRoleModerator             = \"moderator\"\n\tRoleGuest                 = \"guest\"\n)\n\nconst (\n\tPermissionBoardCreate         boards.Permission = \"board:create\"\n\tPermissionBoardFlaggingUpdate                   = \"board:flagging-update\"\n\tPermissionBoardFreeze                           = \"board:freeze\"\n\tPermissionBoardRename                           = \"board:rename\"\n\tPermissionMemberInvite                          = \"member:invite\"\n\tPermissionMemberInviteRevoke                    = \"member:invite-remove\"\n\tPermissionMemberRemove                          = \"member:remove\"\n\tPermissionPermissionsUpdate                     = \"permissions:update\"\n\tPermissionRealmHelp                             = \"realm:help\"\n\tPermissionRealmLock                             = \"realm:lock\"\n\tPermissionRealmNotice                           = \"realm:notice\"\n\tPermissionReplyCreate                           = \"reply:create\"\n\tPermissionReplyDelete                           = \"reply:delete\"\n\tPermissionReplyFlag                             = \"reply:flag\"\n\tPermissionRoleChange                            = \"role:change\"\n\tPermissionThreadCreate                          = \"thread:create\"\n\tPermissionThreadDelete                          = \"thread:delete\"\n\tPermissionThreadEdit                            = \"thread:edit\"\n\tPermissionThreadFlag                            = \"thread:flag\"\n\tPermissionThreadFreeze                          = \"thread:freeze\"\n\tPermissionThreadRepost                          = \"thread:repost\"\n\tPermissionUserBan                               = \"user:ban\"\n\tPermissionUserUnban                             = \"user:unban\"\n)\n\nfunc createBasicBoardPermissions(owner address) *BasicPermissions {\n\tperms := NewBasicPermissions()\n\tperms.SetSuperRole(RoleOwner)\n\tperms.AddRole(\n\t\tRoleAdmin,\n\t\tPermissionBoardRename,\n\t\tPermissionBoardFlaggingUpdate,\n\t\tPermissionMemberInvite,\n\t\tPermissionMemberInviteRevoke,\n\t\tPermissionMemberRemove,\n\t\tPermissionThreadCreate,\n\t\tPermissionThreadEdit,\n\t\tPermissionThreadDelete,\n\t\tPermissionThreadRepost,\n\t\tPermissionThreadFlag,\n\t\tPermissionThreadFreeze,\n\t\tPermissionReplyCreate,\n\t\tPermissionReplyDelete,\n\t\tPermissionReplyFlag,\n\t\tPermissionRoleChange,\n\t\tPermissionUserBan,\n\t\tPermissionUserUnban,\n\t)\n\tperms.AddRole(\n\t\tRoleModerator,\n\t\tPermissionThreadCreate,\n\t\tPermissionThreadEdit,\n\t\tPermissionThreadRepost,\n\t\tPermissionThreadFlag,\n\t\tPermissionReplyCreate,\n\t\tPermissionReplyFlag,\n\t\tPermissionUserBan,\n\t\tPermissionUserUnban,\n\t)\n\tperms.AddRole(\n\t\tRoleGuest,\n\t\tPermissionThreadCreate,\n\t\tPermissionThreadRepost,\n\t\tPermissionReplyCreate,\n\t)\n\tperms.SetUserRoles(cross, owner, RoleOwner)\n\tperms.ValidateFunc(PermissionBoardRename, validateBoardRename)\n\tperms.ValidateFunc(PermissionMemberInvite, validateMemberInvite)\n\tperms.ValidateFunc(PermissionRoleChange, validateRoleChange)\n\treturn perms\n}\n"},{"name":"permissions_basic.gno","body":"package boards2\n\nimport (\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\tboardsdao \"gno.land/p/devx000/wip/gnoland/boards/dao\"\n\t\"gno.land/p/nt/avl\"\n\t\"gno.land/p/devx000/wip/nt/commondao\"\n)\n\n// ValidatorFunc defines a function type for permissions validators.\ntype ValidatorFunc func(boards.Permissions, boards.Args) error\n\n// BasicPermissions manages users, roles and permissions.\ntype BasicPermissions struct {\n\tsuperRole  boards.Role\n\tdao        *commondao.CommonDAO\n\tvalidators *avl.Tree // string(boards.Permission) -\u003e BasicPermissionValidator\n\tpublic     *avl.Tree // string(boards.Permission) -\u003e struct{}{}\n}\n\n// NewBasicPermissions creates a new permissions type.\n// This type is a default implementation to handle users, roles and permissions.\n// It uses an underlying DAO to manage users and roles.\nfunc NewBasicPermissions() *BasicPermissions {\n\tstorage := boardsdao.NewMemberStorage()\n\treturn \u0026BasicPermissions{\n\t\tvalidators: avl.NewTree(),\n\t\tpublic:     avl.NewTree(),\n\t\tdao: commondao.New(\n\t\t\t// Use a custom boards member storage\n\t\t\tcommondao.WithMemberStorage(storage),\n\t\t),\n\t}\n}\n\n// DAO returns the underlying permissions DAO.\nfunc (bp BasicPermissions) DAO() *commondao.CommonDAO {\n\treturn bp.dao\n}\n\n// ValidateFunc add a validator function for a permission.\nfunc (bp *BasicPermissions) ValidateFunc(p boards.Permission, fn ValidatorFunc) {\n\tbp.validators.Set(string(p), fn)\n}\n\n// SetPublicPermissions assigns permissions that are available to anyone.\n// It removes previous public permissions and assigns the new ones.\n// By default there are no public permissions.\nfunc (bp *BasicPermissions) SetPublicPermissions(permissions ...boards.Permission) {\n\tbp.public = avl.NewTree()\n\tfor _, p := range permissions {\n\t\tbp.public.Set(string(p), struct{}{})\n\t}\n}\n\n// SetSuperRole assigns a super role.\n// A super role is one that have all permissions.\n// These type of role doesn't need to be mapped to any permission.\nfunc (bp *BasicPermissions) SetSuperRole(r boards.Role) {\n\tif bp.superRole == r {\n\t\treturn\n\t}\n\n\tname := string(r)\n\tbp.dao.Members().Grouping().Add(name)\n\tbp.superRole = r\n}\n\n// AddRole add a role with one or more assigned permissions.\n// If role exists its permissions are overwritten with the new ones.\nfunc (bp *BasicPermissions) AddRole(r boards.Role, p boards.Permission, extra ...boards.Permission) {\n\t// Get member group for the role if it exists or otherwise create a new group\n\tgrouping := bp.dao.Members().Grouping()\n\tname := string(r)\n\tgroup, found := grouping.Get(name)\n\tif !found {\n\t\tvar err error\n\t\tgroup, err = grouping.Add(name)\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t}\n\n\t// Save permissions within the member group overwritting any existing permissions\n\tgroup.SetMeta(append([]boards.Permission{p}, extra...))\n}\n\n// RoleExists checks if a role exists.\nfunc (bp BasicPermissions) RoleExists(r boards.Role) bool {\n\treturn (bp.superRole != \"\" \u0026\u0026 r == bp.superRole) || bp.dao.Members().Grouping().Has(string(r))\n}\n\n// GetUserRoles returns the list of roles assigned to a user.\nfunc (bp BasicPermissions) GetUserRoles(user address) []boards.Role {\n\tgroups := boardsdao.GetMemberGroups(bp.dao.Members(), user)\n\tif groups == nil {\n\t\treturn nil\n\t}\n\n\troles := make([]boards.Role, len(groups))\n\tfor i, name := range groups {\n\t\troles[i] = boards.Role(name)\n\t}\n\treturn roles\n}\n\n// HasRole checks if a user has a specific role assigned.\nfunc (bp BasicPermissions) HasRole(user address, r boards.Role) bool {\n\tname := string(r)\n\tgroup, found := bp.dao.Members().Grouping().Get(name)\n\tif !found {\n\t\treturn false\n\t}\n\treturn group.Members().Has(user)\n}\n\n// HasPermission checks if a user has a specific permission.\nfunc (bp BasicPermissions) HasPermission(user address, perm boards.Permission) bool {\n\tif bp.public.Has(string(perm)) {\n\t\treturn true\n\t}\n\n\tgroups := boardsdao.GetMemberGroups(bp.dao.Members(), user)\n\tif groups == nil {\n\t\treturn false\n\t}\n\n\tgrouping := bp.dao.Members().Grouping()\n\tfor _, name := range groups {\n\t\trole := boards.Role(name)\n\t\tif bp.superRole == role {\n\t\t\treturn true\n\t\t}\n\n\t\tgroup, found := grouping.Get(name)\n\t\tif !found {\n\t\t\tcontinue\n\t\t}\n\n\t\tmeta := group.GetMeta()\n\t\tfor _, p := range meta.([]boards.Permission) {\n\t\t\tif p == perm {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\treturn false\n}\n\n// SetUserRoles adds a new user when it doesn't exist and sets its roles.\n// Method can also be called to change the roles of an existing user.\n// All user's roles can be removed by calling this method without roles.\nfunc (bp *BasicPermissions) SetUserRoles(_ realm, user address, roles ...boards.Role) {\n\tgroups := boardsdao.GetMemberGroups(bp.dao.Members(), user)\n\tisGuest := len(roles) == 0\n\n\t// If user has roles remove it from the groups its currently assigned\n\tgrouping := bp.dao.Members().Grouping()\n\tif isGuest \u0026\u0026 groups != nil {\n\t\tfor _, name := range groups {\n\t\t\tgroup, found := grouping.Get(name)\n\t\t\tif !found {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tgroup.Members().Remove(user)\n\t\t}\n\t}\n\n\t// Add user to the storage as guest when no roles are assigned\n\tif isGuest {\n\t\tbp.dao.Members().Add(user)\n\t\treturn\n\t}\n\n\t// Add user to role groups\n\tfor _, r := range roles {\n\t\tname := string(r)\n\t\tgroup, found := grouping.Get(name)\n\t\tif !found {\n\t\t\tpanic(\"invalid role: \" + name)\n\t\t}\n\n\t\tgroup.Members().Add(user)\n\t}\n}\n\n// RemoveUser removes a user from permissions.\nfunc (bp *BasicPermissions) RemoveUser(_ realm, user address) bool {\n\tgroups := boardsdao.GetMemberGroups(bp.dao.Members(), user)\n\tif groups == nil {\n\t\treturn bp.dao.Members().Remove(user)\n\t}\n\n\tgrouping := bp.dao.Members().Grouping()\n\tfor _, name := range groups {\n\t\tgroup, found := grouping.Get(name)\n\t\tif !found {\n\t\t\tcontinue\n\t\t}\n\n\t\tgroup.Members().Remove(user)\n\t}\n\treturn true\n}\n\n// HasUser checks if a user exists.\nfunc (bp BasicPermissions) HasUser(user address) bool {\n\treturn bp.dao.Members().Has(user)\n}\n\n// UsersCount returns the total number of users the permissioner contains.\nfunc (bp BasicPermissions) UsersCount() int {\n\treturn bp.dao.Members().Size()\n}\n\n// IterateUsers iterates permissions' users.\nfunc (bp BasicPermissions) IterateUsers(start, count int, fn boards.UsersIterFn) (stopped bool) {\n\tbp.dao.Members().IterateByOffset(start, count, func(addr address) bool {\n\t\tuser := boards.User{Address: addr}\n\t\tgroups := boardsdao.GetMemberGroups(bp.dao.Members(), addr)\n\t\tif groups != nil {\n\t\t\tuser.Roles = make([]boards.Role, len(groups))\n\t\t\tfor i, name := range groups {\n\t\t\t\tuser.Roles[i] = boards.Role(name)\n\t\t\t}\n\t\t}\n\n\t\treturn fn(user)\n\t})\n\treturn\n}\n\n// WithPermission calls a callback when a user has a specific permission.\n// It panics on error or when a handler panics.\n// Callbacks are by default called when there is no handle registered for the permission.\nfunc (bp *BasicPermissions) WithPermission(_ realm, user address, p boards.Permission, args boards.Args, cb func(realm)) {\n\tif !bp.HasPermission(user, p) {\n\t\tpanic(\"unauthorized\")\n\t}\n\n\t// Execute custom validation before calling the callback\n\tv, found := bp.validators.Get(string(p))\n\tif found {\n\t\terr := v.(ValidatorFunc)(bp, args)\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t}\n\n\tcb(cross)\n}\n"},{"name":"permissions_basic_test.gno","body":"package boards2\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/nt/uassert\"\n\t\"gno.land/p/nt/urequire\"\n)\n\nvar _ boards.Permissions = (*BasicPermissions)(nil)\n\nfunc TestBasicPermissionsWithPermission(t *testing.T) {\n\tcases := []struct {\n\t\tname       string\n\t\tuser       address\n\t\tpermission boards.Permission\n\t\targs       boards.Args\n\t\tsetup      func() *BasicPermissions\n\t\terr        string\n\t\tcalled     bool\n\t}{\n\t\t{\n\t\t\tname:       \"ok\",\n\t\t\tuser:       \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tpermission: \"bar\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"foo\", \"bar\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"foo\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t\tcalled: true,\n\t\t},\n\t\t{\n\t\t\tname:       \"ok with arguments\",\n\t\t\tuser:       \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tpermission: \"bar\",\n\t\t\targs:       boards.Args{\"a\", \"b\"},\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"foo\", \"bar\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"foo\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t\tcalled: true,\n\t\t},\n\t\t{\n\t\t\tname:       \"no permission\",\n\t\t\tuser:       \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tpermission: \"bar\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"foo\", \"bar\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t\terr: \"unauthorized\",\n\t\t},\n\t\t{\n\t\t\tname:       \"is not a DAO member\",\n\t\t\tuser:       \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tpermission: \"bar\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\treturn NewBasicPermissions()\n\t\t\t},\n\t\t\terr: \"unauthorized\",\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tvar called bool\n\n\t\t\tperms := tc.setup()\n\t\t\tcallback := func(realm) { called = true }\n\n\t\t\ttestCaseFn := func() {\n\t\t\t\tperms.WithPermission(cross, tc.user, tc.permission, tc.args, callback)\n\t\t\t}\n\n\t\t\tif tc.err != \"\" {\n\t\t\t\turequire.AbortsWithMessage(t, tc.err, testCaseFn, \"expect panic with message\")\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\turequire.NotAborts(t, testCaseFn, \"expect no panic\")\n\t\t\t}\n\n\t\t\turequire.Equal(t, tc.called, called, \"expect callback to be called\")\n\t\t})\n\t}\n}\n\nfunc TestBasicPermissionsSetPublicPermissions(t *testing.T) {\n\tuser := address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\tperms := NewBasicPermissions()\n\n\t// Add a new role with permissions\n\tperms.AddRole(\"adminRole\", \"fooPerm\", \"barPerm\", \"bazPerm\")\n\turequire.False(t, perms.HasPermission(user, \"fooPerm\"))\n\turequire.False(t, perms.HasPermission(user, \"barPerm\"))\n\turequire.False(t, perms.HasPermission(user, \"bazPerm\"))\n\n\t// Assign a couple of public permissions\n\tperms.SetPublicPermissions(\"fooPerm\", \"bazPerm\")\n\turequire.True(t, perms.HasPermission(user, \"fooPerm\"))\n\turequire.False(t, perms.HasPermission(user, \"barPerm\"))\n\turequire.True(t, perms.HasPermission(user, \"bazPerm\"))\n\n\t// Clear all public permissions\n\tperms.SetPublicPermissions()\n\turequire.False(t, perms.HasPermission(user, \"fooPerm\"))\n\turequire.False(t, perms.HasPermission(user, \"barPerm\"))\n\turequire.False(t, perms.HasPermission(user, \"bazPerm\"))\n}\n\nfunc TestBasicPermissionsGetUserRoles(t *testing.T) {\n\tcases := []struct {\n\t\tname  string\n\t\tuser  address\n\t\troles []string\n\t\tsetup func() *BasicPermissions\n\t}{\n\t\t{\n\t\t\tname:  \"single role\",\n\t\t\tuser:  \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\troles: []string{\"admin\"},\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"admin\", \"x\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"admin\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:  \"multiple roles\",\n\t\t\tuser:  \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\troles: []string{\"admin\", \"bar\", \"foo\"},\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"admin\", \"x\")\n\t\t\t\tperms.AddRole(\"foo\", \"x\")\n\t\t\t\tperms.AddRole(\"bar\", \"x\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"admin\", \"foo\", \"bar\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"without roles\",\n\t\t\tuser: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"not a user\",\n\t\t\tuser: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\treturn NewBasicPermissions()\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:  \"multiple users\",\n\t\t\tuser:  \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\troles: []string{\"admin\"},\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"admin\", \"x\")\n\t\t\t\tperms.AddRole(\"bar\", \"x\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"admin\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\", \"admin\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\", \"admin\", \"bar\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tperms := tc.setup()\n\t\t\troles := perms.GetUserRoles(tc.user)\n\n\t\t\turequire.Equal(t, len(tc.roles), len(roles), \"user role count\")\n\t\t\tfor i, r := range roles {\n\t\t\t\tuassert.Equal(t, tc.roles[i], string(r))\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunc TestBasicPermissionsHasRole(t *testing.T) {\n\tcases := []struct {\n\t\tname  string\n\t\tuser  address\n\t\trole  boards.Role\n\t\tsetup func() *BasicPermissions\n\t\twant  bool\n\t}{\n\t\t{\n\t\t\tname: \"ok\",\n\t\t\tuser: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\trole: \"admin\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"admin\", \"x\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"admin\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t\twant: true,\n\t\t},\n\t\t{\n\t\t\tname: \"ok with multiple roles\",\n\t\t\tuser: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\trole: \"foo\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"admin\", \"x\")\n\t\t\t\tperms.AddRole(\"foo\", \"x\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"admin\", \"foo\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t\twant: true,\n\t\t},\n\t\t{\n\t\t\tname: \"user without roles\",\n\t\t\tuser: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"has no role\",\n\t\t\tuser: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\trole: \"bar\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"foo\", \"x\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"foo\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tperms := tc.setup()\n\t\t\tgot := perms.HasRole(tc.user, tc.role)\n\t\t\tuassert.Equal(t, got, tc.want)\n\t\t})\n\t}\n}\n\nfunc TestBasicPermissionsHasPermission(t *testing.T) {\n\tcases := []struct {\n\t\tname       string\n\t\tuser       address\n\t\tpermission boards.Permission\n\t\tsetup      func() *BasicPermissions\n\t\twant       bool\n\t}{\n\t\t{\n\t\t\tname:       \"ok\",\n\t\t\tuser:       \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tpermission: \"bar\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"foo\", \"bar\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"foo\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t\twant: true,\n\t\t},\n\t\t{\n\t\t\tname:       \"ok with multiple users\",\n\t\t\tuser:       \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tpermission: \"bar\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"foo\", \"bar\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"foo\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\", \"foo\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t\twant: true,\n\t\t},\n\t\t{\n\t\t\tname:       \"ok with multiple roles\",\n\t\t\tuser:       \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tpermission: \"other\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"foo\", \"bar\")\n\t\t\t\tperms.AddRole(\"baz\", \"other\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"foo\", \"baz\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t\twant: true,\n\t\t},\n\t\t{\n\t\t\tname:       \"no permission\",\n\t\t\tuser:       \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tpermission: \"other\",\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"foo\", \"bar\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"foo\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tperms := tc.setup()\n\t\t\tgot := perms.HasPermission(tc.user, tc.permission)\n\t\t\tuassert.Equal(t, tc.want, got)\n\t\t})\n\t}\n}\n\nfunc TestBasicPermissionsSetUserRoles(t *testing.T) {\n\tcases := []struct {\n\t\tname  string\n\t\tuser  address\n\t\troles []boards.Role\n\t\tsetup func() *BasicPermissions\n\t\terr   string\n\t}{\n\t\t{\n\t\t\tname:  \"add user\",\n\t\t\tuser:  address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"),\n\t\t\troles: []boards.Role{\"a\"},\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"a\", \"permission1\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:  \"add user with multiple roles\",\n\t\t\tuser:  address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"),\n\t\t\troles: []boards.Role{\"a\", \"b\"},\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"a\", \"permission1\")\n\t\t\t\tperms.AddRole(\"b\", \"permission2\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:  \"add when other users exists\",\n\t\t\tuser:  address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"),\n\t\t\troles: []boards.Role{\"a\"},\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"a\", \"permission1\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1w4ek2u33ta047h6lta047h6lta047h6ldvdwpn\", \"a\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1w4ek2u3jta047h6lta047h6lta047h6l9huexc\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:  \"update user roles\",\n\t\t\tuser:  address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"),\n\t\t\troles: []boards.Role{\"a\", \"b\"},\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"a\", \"permission1\")\n\t\t\t\tperms.AddRole(\"b\", \"permission2\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"a\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:  \"clear user roles\",\n\t\t\tuser:  address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"),\n\t\t\troles: []boards.Role{},\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"a\", \"permission1\")\n\t\t\t\tperms.AddRole(\"b\", \"permission2\")\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\", \"a\", \"b\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:  \"set invalid role\",\n\t\t\tuser:  address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"),\n\t\t\troles: []boards.Role{\"a\", \"foo\"},\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.AddRole(\"a\", \"permission1\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t\terr: \"invalid role: foo\",\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tperms := tc.setup()\n\n\t\t\tsetUserRoles := func() {\n\t\t\t\tperms.SetUserRoles(cross, tc.user, tc.roles...)\n\t\t\t}\n\n\t\t\tif tc.err != \"\" {\n\t\t\t\turequire.AbortsWithMessage(t, tc.err, setUserRoles, \"expected an error\")\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\turequire.NotAborts(t, setUserRoles, \"expected no error\")\n\t\t\t}\n\n\t\t\troles := perms.GetUserRoles(tc.user)\n\t\t\tuassert.Equal(t, len(tc.roles), len(roles))\n\t\t\tfor i, r := range roles {\n\t\t\t\turequire.Equal(t, string(tc.roles[i]), string(r))\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunc TestBasicPermissionsRemoveUser(t *testing.T) {\n\tcases := []struct {\n\t\tname  string\n\t\tuser  address\n\t\tsetup func() *BasicPermissions\n\t\twant  bool\n\t}{\n\t\t{\n\t\t\tname: \"ok\",\n\t\t\tuser: address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"),\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\tperms := NewBasicPermissions()\n\t\t\t\tperms.SetUserRoles(cross, \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\t\t\t\treturn perms\n\t\t\t},\n\t\t\twant: true,\n\t\t},\n\t\t{\n\t\t\tname: \"user not found\",\n\t\t\tuser: address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"),\n\t\t\tsetup: func() *BasicPermissions {\n\t\t\t\treturn NewBasicPermissions()\n\t\t\t},\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tperms := tc.setup()\n\t\t\tgot := perms.RemoveUser(cross, tc.user)\n\t\t\tuassert.Equal(t, tc.want, got)\n\t\t})\n\t}\n}\n\nfunc TestBasicPermissionsIterateUsers(t *testing.T) {\n\tusers := []boards.User{\n\t\t{\n\t\t\tAddress: \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\",\n\t\t\tRoles:   []boards.Role{\"foo\"},\n\t\t},\n\t\t{\n\t\t\tAddress: \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\",\n\t\t\tRoles:   []boards.Role{\"bar\", \"foo\"},\n\t\t},\n\t\t{\n\t\t\tAddress: \"g1vh7krmmzfua5xjmkatvmx09z37w34lsvd2mxa5\",\n\t\t\tRoles:   []boards.Role{\"bar\"},\n\t\t},\n\t}\n\n\tperms := NewBasicPermissions()\n\tperms.AddRole(\"foo\", \"perm1\")\n\tperms.AddRole(\"bar\", \"perm2\")\n\tfor _, u := range users {\n\t\tperms.SetUserRoles(cross, u.Address, u.Roles...)\n\t}\n\n\tcases := []struct {\n\t\tname               string\n\t\tstart, count, want int\n\t}{\n\t\t{\n\t\t\tname:  \"exceed users count\",\n\t\t\tcount: 50,\n\t\t\twant:  3,\n\t\t},\n\t\t{\n\t\t\tname:  \"exact users count\",\n\t\t\tcount: 3,\n\t\t\twant:  3,\n\t\t},\n\t\t{\n\t\t\tname:  \"two users\",\n\t\t\tstart: 1,\n\t\t\tcount: 2,\n\t\t\twant:  2,\n\t\t},\n\t\t{\n\t\t\tname:  \"one user\",\n\t\t\tstart: 1,\n\t\t\tcount: 1,\n\t\t\twant:  1,\n\t\t},\n\t\t{\n\t\t\tname:  \"no iteration\",\n\t\t\tstart: 50,\n\t\t},\n\t}\n\n\tfor _, tc := range cases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\tvar i int\n\t\t\tperms.IterateUsers(0, len(users), func(u boards.User) bool {\n\t\t\t\turequire.True(t, i \u003c len(users), \"expect iterator to respect number of users\")\n\t\t\t\tuassert.Equal(t, users[i].Address, u.Address)\n\n\t\t\t\turequire.Equal(t, len(users[i].Roles), len(u.Roles), \"expect number of roles to match\")\n\t\t\t\tfor j := range u.Roles {\n\t\t\t\t\tuassert.Equal(t, string(users[i].Roles[j]), string(u.Roles[j]))\n\t\t\t\t}\n\n\t\t\t\ti++\n\t\t\t\treturn false\n\t\t\t})\n\n\t\t\tuassert.Equal(t, i, len(users), \"expect iterator to iterate all users\")\n\t\t})\n\t}\n}\n"},{"name":"permissions_validators.gno","body":"package boards2\n\nimport (\n\t\"errors\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\n\t\"gno.land/r/sys/users\"\n)\n\n// validateBoardCreate validates PermissionBoardCreate.\n//\n// Expected `args` values:\n// 1. Caller address\n// 2. Board name\n// 3. Board ID\n// 4. Is board listed\nfunc validateBoardCreate(_ boards.Permissions, args boards.Args) error {\n\tcaller, ok := args[0].(address)\n\tif !ok {\n\t\treturn errors.New(\"expected a valid caller address\")\n\t}\n\n\tname, ok := args[1].(string)\n\tif !ok {\n\t\treturn errors.New(\"expected board name to be a string\")\n\t}\n\n\tif err := checkBoardNameIsNotAddress(name); err != nil {\n\t\treturn err\n\t}\n\n\tif err := checkBoardNameBelongsToAddress(caller, name); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\n// validateBoardRename validates PermissionBoardRename.\n//\n// Expected `args` values:\n// 1. Caller address\n// 2. Board ID\n// 3. Current board name\n// 4. New board name\nfunc validateBoardRename(_ boards.Permissions, args boards.Args) error {\n\tcaller, ok := args[0].(address)\n\tif !ok {\n\t\treturn errors.New(\"expected a valid caller address\")\n\t}\n\n\tnewName, ok := args[3].(string)\n\tif !ok {\n\t\treturn errors.New(\"expected new board name to be a string\")\n\t}\n\n\tif err := checkBoardNameIsNotAddress(newName); err != nil {\n\t\treturn err\n\t}\n\n\tif err := checkBoardNameBelongsToAddress(caller, newName); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\n// validateMemberInvite validates PermissionMemberInvite.\n//\n// Expected `args` values:\n// 1. Caller address\n// 2. Board ID\n// 3. Invites\nfunc validateMemberInvite(perms boards.Permissions, args boards.Args) error {\n\tcaller, ok := args[0].(address)\n\tif !ok {\n\t\treturn errors.New(\"expected a valid caller address\")\n\t}\n\n\tinvites, ok := args[2].([]Invite)\n\tif !ok {\n\t\treturn errors.New(\"expected valid user invites\")\n\t}\n\n\t// Make sure that only owners invite other owners\n\tcallerIsOwner := perms.HasRole(caller, RoleOwner)\n\tfor _, v := range invites {\n\t\tif v.Role == RoleOwner \u0026\u0026 !callerIsOwner {\n\t\t\treturn errors.New(\"only owners are allowed to invite other owners\")\n\t\t}\n\t}\n\treturn nil\n}\n\n// validateRoleChange validates PermissionRoleChange.\n//\n// Expected `args` values:\n// 1. Caller address\n// 2. Board ID\n// 3. Member address\n// 4. Role\nfunc validateRoleChange(perms boards.Permissions, args boards.Args) error {\n\tcaller, ok := args[0].(address)\n\tif !ok {\n\t\treturn errors.New(\"expected a valid caller address\")\n\t}\n\n\t// Owners and Admins can change roles.\n\t// Admins should not be able to assign or remove the Owner role from members.\n\tif perms.HasRole(caller, RoleAdmin) {\n\t\trole, ok := args[3].(boards.Role)\n\t\tif !ok {\n\t\t\treturn errors.New(\"expected a valid member role\")\n\t\t}\n\n\t\tif role == RoleOwner {\n\t\t\treturn errors.New(\"admins are not allowed to promote members to Owner\")\n\t\t} else {\n\t\t\tmember, ok := args[2].(address)\n\t\t\tif !ok {\n\t\t\t\treturn errors.New(\"expected a valid member address\")\n\t\t\t}\n\n\t\t\tif perms.HasRole(member, RoleOwner) {\n\t\t\t\treturn errors.New(\"admins are not allowed to remove the Owner role\")\n\t\t\t}\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc checkBoardNameIsNotAddress(s string) error {\n\tif address(s).IsValid() {\n\t\treturn errors.New(\"addresses are not allowed as board name\")\n\t}\n\treturn nil\n}\n\nfunc checkBoardNameBelongsToAddress(owner address, name string) error {\n\t// When the board name is the name of a registered user\n\t// check that caller is the owner of the name.\n\tuser, _ := users.ResolveName(name)\n\tif user != nil \u0026\u0026 user.Addr() != owner {\n\t\treturn errors.New(\"board name is a user name registered to a different user\")\n\t}\n\treturn nil\n}\n"},{"name":"public.gno","body":"package boards2\n\nimport (\n\t\"chain\"\n\t\"chain/runtime\"\n\t\"regexp\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nconst (\n\t// MaxBoardNameLength defines the maximum length allowed for board names.\n\tMaxBoardNameLength = 50\n\n\t// MaxThreadTitleLength defines the maximum length allowed for thread titles.\n\tMaxThreadTitleLength = 100\n\n\t// MaxReplyLength defines the maximum length allowed for replies.\n\tMaxReplyLength = 300\n)\n\nvar (\n\treBoardName = regexp.MustCompile(`(?i)^[a-z]+[a-z0-9_\\-]{2,50}$`)\n\n\t// Minimalistic Markdown line prefix checks that if allowed would\n\t// break the current UI when submitting a reply. It denies replies\n\t// with headings, blockquotes or horizontal lines.\n\treDeniedReplyLinePrefixes = regexp.MustCompile(`(?m)^\\s*(#|---|\u003e)+`)\n)\n\n// SetHelp sets or updates boards realm help content.\nfunc SetHelp(_ realm, content string) {\n\tcontent = strings.TrimSpace(content)\n\tcaller := runtime.PreviousRealm().Address()\n\targs := boards.Args{content}\n\tgPerms.WithPermission(cross, caller, PermissionRealmHelp, args, func(realm) {\n\t\tgHelp = content\n\t})\n}\n\n// SetPermissions sets a permissions implementation for boards2 realm or a board.\nfunc SetPermissions(_ realm, boardID boards.ID, p boards.Permissions) {\n\tassertRealmIsNotLocked()\n\tassertBoardExists(boardID)\n\n\tif p == nil {\n\t\tpanic(\"permissions is required\")\n\t}\n\n\tcaller := runtime.PreviousRealm().Address()\n\targs := boards.Args{boardID}\n\tgPerms.WithPermission(cross, caller, PermissionPermissionsUpdate, args, func(realm) {\n\t\tassertRealmIsNotLocked()\n\n\t\t// When board ID is zero it means that realm permissions are being updated\n\t\tif boardID == 0 {\n\t\t\tgPerms = p\n\n\t\t\tchain.Emit(\n\t\t\t\t\"RealmPermissionsUpdated\",\n\t\t\t\t\"caller\", caller.String(),\n\t\t\t)\n\t\t\treturn\n\t\t}\n\n\t\t// Otherwise update the permissions of a single board\n\t\tboard := mustGetBoard(boardID)\n\t\tboard.Permissions = p\n\n\t\tchain.Emit(\n\t\t\t\"BoardPermissionsUpdated\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t)\n\t})\n}\n\n// SetRealmNotice sets a notice to be displayed globally by the realm.\n// An empty message removes the realm notice.\nfunc SetRealmNotice(_ realm, message string) {\n\tmessage = strings.TrimSpace(message)\n\tcaller := runtime.PreviousRealm().Address()\n\targs := boards.Args{message}\n\tgPerms.WithPermission(cross, caller, PermissionRealmNotice, args, func(realm) {\n\t\tgNotice = message\n\n\t\tchain.Emit(\n\t\t\t\"RealmNoticeChanged\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"message\", message,\n\t\t)\n\t})\n}\n\n// GetBoardIDFromName searches a board by name and returns it's ID.\nfunc GetBoardIDFromName(_ realm, name string) (_ boards.ID, found bool) {\n\tboard, found := gBoards.GetByName(name)\n\tif !found {\n\t\treturn 0, false\n\t}\n\treturn board.ID, true\n}\n\n// CreateBoard creates a new board.\n//\n// Listed boards are included in the list of boards.\nfunc CreateBoard(_ realm, name string, listed bool) boards.ID {\n\tassertRealmIsNotLocked()\n\n\tname = strings.TrimSpace(name)\n\tassertIsValidBoardName(name)\n\tassertBoardNameNotExists(name)\n\n\tcaller := runtime.PreviousRealm().Address()\n\tid := gBoardsSequence.Next()\n\tboard := boards.New(id)\n\targs := boards.Args{caller, name, board.ID, listed}\n\tgPerms.WithPermission(cross, caller, PermissionBoardCreate, args, func(realm) {\n\t\tassertRealmIsNotLocked()\n\t\tassertBoardNameNotExists(name)\n\n\t\tboard.Name = name\n\t\tboard.Permissions = createBasicBoardPermissions(caller)\n\t\tboard.Creator = caller\n\n\t\tif err := gBoards.Add(board); err != nil {\n\t\t\tpanic(err)\n\t\t}\n\n\t\t// Listed boards are also indexed separately for easier iteration and pagination\n\t\tif listed {\n\t\t\tgListedBoardsByID.Set(board.ID.Key(), board)\n\t\t}\n\n\t\tchain.Emit(\n\t\t\t\"BoardCreated\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"name\", name,\n\t\t)\n\t})\n\treturn board.ID\n}\n\n// RenameBoard changes the name of an existing board.\n//\n// A history of previous board names is kept when boards are renamed.\n// Because of that boards are also accesible using previous name(s).\nfunc RenameBoard(_ realm, name, newName string) {\n\tassertRealmIsNotLocked()\n\n\tnewName = strings.TrimSpace(newName)\n\tassertIsValidBoardName(newName)\n\tassertBoardNameNotExists(newName)\n\n\tboard := mustGetBoardByName(name)\n\tassertBoardIsNotFrozen(board)\n\n\tcaller := runtime.PreviousRealm().Address()\n\targs := boards.Args{caller, board.ID, name, newName}\n\tboard.Permissions.WithPermission(cross, caller, PermissionBoardRename, args, func(realm) {\n\t\tassertRealmIsNotLocked()\n\t\tassertBoardNameNotExists(newName)\n\n\t\tboard.Aliases = append(board.Aliases, board.Name)\n\t\tboard.Name = newName\n\n\t\t// Index board for the new name keeping previous indexes for older names\n\t\tgBoards.Add(board)\n\n\t\tchain.Emit(\n\t\t\t\"BoardRenamed\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"name\", name,\n\t\t\t\"newName\", newName,\n\t\t)\n\t})\n}\n\n// CreateThread creates a new thread within a board.\nfunc CreateThread(_ realm, boardID boards.ID, title, body string) boards.ID {\n\tassertRealmIsNotLocked()\n\n\ttitle = strings.TrimSpace(title)\n\tassertTitleIsValid(title)\n\n\tcaller := runtime.PreviousRealm().Address()\n\tassertUserIsNotBanned(boardID, caller)\n\n\tboard := mustGetBoard(boardID)\n\tassertBoardIsNotFrozen(board)\n\n\tthread := boards.MustNewThread(board, caller, title, body)\n\targs := boards.Args{caller, board.ID, thread.ID, title, body}\n\tboard.Permissions.WithPermission(cross, caller, PermissionThreadCreate, args, func(realm) {\n\t\tassertRealmIsNotLocked()\n\t\tassertUserIsNotBanned(board.ID, caller)\n\n\t\tthread.Replies = NewReplyStorage()\n\n\t\tif err := board.Threads.Add(thread); err != nil {\n\t\t\tpanic(err)\n\t\t}\n\n\t\tchain.Emit(\n\t\t\t\"ThreadCreated\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"threadID\", thread.ID.String(),\n\t\t\t\"title\", title,\n\t\t)\n\t})\n\treturn thread.ID\n}\n\n// CreateReply creates a new comment or reply within a thread.\n//\n// The value of `replyID` is only required when creating a reply of another reply.\nfunc CreateReply(_ realm, boardID, threadID, replyID boards.ID, body string) boards.ID {\n\tassertRealmIsNotLocked()\n\n\tbody = strings.TrimSpace(body)\n\tassertReplyBodyIsValid(body)\n\n\tcaller := runtime.PreviousRealm().Address()\n\tassertUserIsNotBanned(boardID, caller)\n\n\tboard := mustGetBoard(boardID)\n\tassertBoardIsNotFrozen(board)\n\n\tthread := mustGetThread(board, threadID)\n\tassertThreadIsVisible(thread)\n\tassertThreadIsNotFrozen(thread)\n\n\t// By default consider that reply's parent is the thread.\n\t// Or when replyID is assigned use that reply as the parent.\n\tparent := thread\n\tif replyID \u003e 0 {\n\t\tparent = mustGetReply(thread, replyID)\n\t\tif parent.Hidden || parent.Readonly {\n\t\t\tpanic(\"replying to a hidden or frozen reply is not allowed\")\n\t\t}\n\t}\n\n\treply := boards.MustNewReply(parent, caller, body)\n\targs := boards.Args{caller, board.ID, thread.ID, parent.ID, reply.ID, body}\n\tboard.Permissions.WithPermission(cross, caller, PermissionReplyCreate, args, func(realm) {\n\t\tassertRealmIsNotLocked()\n\n\t\t// Add reply to its parent\n\t\tif err := parent.Replies.Add(reply); err != nil {\n\t\t\tpanic(err)\n\t\t}\n\n\t\t// When parent is not a thread also add reply to the thread.\n\t\t// The thread contains all replies and sub-replies, while each\n\t\t// reply only contains direct sub-replies.\n\t\tif parent.ID != thread.ID {\n\t\t\tif err := thread.Replies.Add(reply); err != nil {\n\t\t\t\tpanic(err)\n\t\t\t}\n\t\t}\n\n\t\tchain.Emit(\n\t\t\t\"ReplyCreate\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"threadID\", thread.ID.String(),\n\t\t\t\"replyID\", reply.ID.String(),\n\t\t)\n\t})\n\treturn reply.ID\n}\n\n// CreateRepost reposts a thread into another board.\nfunc CreateRepost(_ realm, boardID, threadID, destinationBoardID boards.ID, title, body string) boards.ID {\n\tassertRealmIsNotLocked()\n\n\ttitle = strings.TrimSpace(title)\n\tassertTitleIsValid(title)\n\n\tcaller := runtime.PreviousRealm().Address()\n\tassertUserIsNotBanned(destinationBoardID, caller)\n\n\tdst := mustGetBoard(destinationBoardID)\n\tassertBoardIsNotFrozen(dst)\n\n\tboard := mustGetBoard(boardID)\n\tthread := mustGetThread(board, threadID)\n\tassertThreadIsVisible(thread)\n\n\trepost := boards.MustNewRepost(thread, dst, caller)\n\targs := boards.Args{caller, board.ID, thread.ID, dst.ID, repost.ID, title, body}\n\tdst.Permissions.WithPermission(cross, caller, PermissionThreadRepost, args, func(realm) {\n\t\tassertRealmIsNotLocked()\n\n\t\trepost.Title = title\n\t\trepost.Body = strings.TrimSpace(body)\n\n\t\tif err := dst.Threads.Add(repost); err != nil {\n\t\t\tpanic(err)\n\t\t}\n\n\t\tif err := thread.Reposts.Add(repost); err != nil {\n\t\t\tpanic(err)\n\t\t}\n\n\t\tchain.Emit(\n\t\t\t\"Repost\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"threadID\", thread.ID.String(),\n\t\t\t\"destinationBoardID\", dst.ID.String(),\n\t\t\t\"repostID\", repost.ID.String(),\n\t\t\t\"title\", title,\n\t\t)\n\t})\n\treturn repost.ID\n}\n\n// DeleteThread deletes a thread from a board.\n//\n// Threads can be deleted by the users who created them or otherwise by users with special permissions.\nfunc DeleteThread(_ realm, boardID, threadID boards.ID) {\n\tassertRealmIsNotLocked()\n\n\tcaller := runtime.PreviousRealm().Address()\n\tboard := mustGetBoard(boardID)\n\tassertUserIsNotBanned(boardID, caller)\n\n\tisRealmOwner := gPerms.HasRole(caller, RoleOwner) // TODO: Add DeleteThread filetest cases for realm owners\n\tif !isRealmOwner {\n\t\tassertBoardIsNotFrozen(board)\n\t}\n\n\tthread := mustGetThread(board, threadID)\n\tdeleteThread := func() {\n\t\tboard.Threads.Remove(thread.ID)\n\n\t\tchain.Emit(\n\t\t\t\"ThreadDeleted\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"threadID\", thread.ID.String(),\n\t\t)\n\t}\n\n\t// Thread can be directly deleted by user that created it.\n\t// It can also be deleted by realm owners, to be able to delete inappropriate content.\n\t// TODO: Discuss and decide if realm owners should be able to delete threads.\n\tif isRealmOwner || caller == thread.Creator {\n\t\tdeleteThread()\n\t\treturn\n\t}\n\n\targs := boards.Args{caller, board.ID, thread.ID}\n\tboard.Permissions.WithPermission(cross, caller, PermissionThreadDelete, args, func(realm) {\n\t\tassertRealmIsNotLocked()\n\t\tdeleteThread()\n\t})\n}\n\n// DeleteReply deletes a reply from a thread.\n//\n// Replies can be deleted by the users who created them or otherwise by users with special permissions.\n// Soft deletion is used when the deleted reply contains sub replies, in which case the reply content\n// is replaced by a text informing that reply has been deleted to avoid deleting sub-replies.\nfunc DeleteReply(_ realm, boardID, threadID, replyID boards.ID) {\n\tassertRealmIsNotLocked()\n\n\tcaller := runtime.PreviousRealm().Address()\n\tboard := mustGetBoard(boardID)\n\tassertUserIsNotBanned(boardID, caller)\n\n\tthread := mustGetThread(board, threadID)\n\treply := mustGetReply(thread, replyID)\n\tisRealmOwner := gPerms.HasRole(caller, RoleOwner) // TODO: Add DeleteReply filetest cases for realm owners\n\tif !isRealmOwner {\n\t\tassertBoardIsNotFrozen(board)\n\t\tassertThreadIsNotFrozen(thread)\n\t\tassertReplyIsVisible(reply)\n\t}\n\n\tdeleteReply := func() {\n\t\t// Soft delete reply by changing its body when it contains\n\t\t// sub-replies, otherwise hard delete it.\n\t\tif reply.Replies.Size() \u003e 0 {\n\t\t\treply.Body = \"This reply has been deleted\"\n\t\t\treply.UpdatedAt = time.Now()\n\t\t} else {\n\t\t\t// Remove reply from the thread\n\t\t\treply, removed := thread.Replies.Remove(replyID)\n\t\t\tif !removed {\n\t\t\t\tpanic(\"reply not found\")\n\t\t\t}\n\n\t\t\t// Remove reply from reply's parent\n\t\t\tif reply.ParentID != thread.ID {\n\t\t\t\tparent, found := thread.Replies.Get(reply.ParentID)\n\t\t\t\tif found {\n\t\t\t\t\tparent.Replies.Remove(replyID)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tchain.Emit(\n\t\t\t\"ReplyDeleted\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"threadID\", thread.ID.String(),\n\t\t\t\"replyID\", reply.ID.String(),\n\t\t)\n\t}\n\n\t// Reply can be directly deleted by user that created it.\n\t// It can also be deleted by realm owners, to be able to delete inappropriate content.\n\t// TODO: Discuss and decide if realm owners should be able to delete replies.\n\tif isRealmOwner || caller == reply.Creator {\n\t\tdeleteReply()\n\t\treturn\n\t}\n\n\targs := boards.Args{caller, board.ID, thread.ID, reply.ID}\n\tboard.Permissions.WithPermission(cross, caller, PermissionReplyDelete, args, func(realm) {\n\t\tassertRealmIsNotLocked()\n\t\tdeleteReply()\n\t})\n}\n\n// EditThread updates the title and body of thread.\n//\n// Threads can be updated by the users who created them or otherwise by users with special permissions.\nfunc EditThread(_ realm, boardID, threadID boards.ID, title, body string) {\n\tassertRealmIsNotLocked()\n\n\ttitle = strings.TrimSpace(title)\n\tassertTitleIsValid(title)\n\n\tboard := mustGetBoard(boardID)\n\tassertBoardIsNotFrozen(board)\n\n\tcaller := runtime.PreviousRealm().Address()\n\tassertUserIsNotBanned(boardID, caller)\n\n\tthread := mustGetThread(board, threadID)\n\tassertThreadIsNotFrozen(thread)\n\n\tbody = strings.TrimSpace(body)\n\tif !boards.IsRepost(thread) {\n\t\tassertBodyIsNotEmpty(body)\n\t}\n\n\teditThread := func() {\n\t\tthread.Title = title\n\t\tthread.Body = body\n\t\tthread.UpdatedAt = time.Now()\n\n\t\tchain.Emit(\n\t\t\t\"ThreadEdited\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"threadID\", thread.ID.String(),\n\t\t\t\"title\", title,\n\t\t)\n\t}\n\n\tif caller == thread.Creator {\n\t\teditThread()\n\t\treturn\n\t}\n\n\targs := boards.Args{caller, board.ID, thread.ID, title, body}\n\tboard.Permissions.WithPermission(cross, caller, PermissionThreadEdit, args, func(realm) {\n\t\tassertRealmIsNotLocked()\n\t\teditThread()\n\t})\n}\n\n// EditReply updates the body of comment or reply.\n//\n// Replies can be updated only by the users who created them.\nfunc EditReply(_ realm, boardID, threadID, replyID boards.ID, body string) {\n\tassertRealmIsNotLocked()\n\n\tbody = strings.TrimSpace(body)\n\tassertReplyBodyIsValid(body)\n\n\tboard := mustGetBoard(boardID)\n\tassertBoardIsNotFrozen(board)\n\n\tcaller := runtime.PreviousRealm().Address()\n\tassertUserIsNotBanned(boardID, caller)\n\n\tthread := mustGetThread(board, threadID)\n\tassertThreadIsNotFrozen(thread)\n\n\treply := mustGetReply(thread, replyID)\n\tassertReplyIsVisible(reply)\n\n\tif caller != reply.Creator {\n\t\tpanic(\"only the reply creator is allowed to edit it\")\n\t}\n\n\treply.Body = body\n\treply.UpdatedAt = time.Now()\n\n\tchain.Emit(\n\t\t\"ReplyEdited\",\n\t\t\"caller\", caller.String(),\n\t\t\"boardID\", board.ID.String(),\n\t\t\"threadID\", thread.ID.String(),\n\t\t\"replyID\", reply.ID.String(),\n\t\t\"body\", body,\n\t)\n}\n\n// RemoveMember removes a member from the realm or a boards.\n//\n// Board ID is only required when removing a member from board.\nfunc RemoveMember(_ realm, boardID boards.ID, member address) {\n\tassertMembersUpdateIsEnabled(boardID)\n\tassertMemberAddressIsValid(member)\n\n\tperms := mustGetPermissions(boardID)\n\torigin := runtime.OriginCaller()\n\tcaller := runtime.PreviousRealm().Address()\n\tremoveMember := func() {\n\t\tif !perms.RemoveUser(cross, member) {\n\t\t\tpanic(\"member not found\")\n\t\t}\n\n\t\tchain.Emit(\n\t\t\t\"MemberRemoved\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"origin\", origin.String(), // When origin and caller match it means self removal\n\t\t\t\"boardID\", boardID.String(),\n\t\t\t\"member\", member.String(),\n\t\t)\n\t}\n\n\t// Members can remove themselves without permission\n\tif origin == member {\n\t\tremoveMember()\n\t\treturn\n\t}\n\n\targs := boards.Args{boardID, member}\n\tperms.WithPermission(cross, caller, PermissionMemberRemove, args, func(realm) {\n\t\tassertMembersUpdateIsEnabled(boardID)\n\t\tremoveMember()\n\t})\n}\n\n// IsMember checks if an user is a member of the realm or a board.\n//\n// Board ID is only required when checking if a user is a member of a board.\nfunc IsMember(boardID boards.ID, user address) bool {\n\tassertUserAddressIsValid(user)\n\n\tif boardID != 0 {\n\t\tboard := mustGetBoard(boardID)\n\t\tassertBoardIsNotFrozen(board)\n\t}\n\n\tperms := mustGetPermissions(boardID)\n\treturn perms.HasUser(user)\n}\n\n// HasMemberRole checks if a realm or board member has a specific role assigned.\n//\n// Board ID is only required when checking a member of a board.\nfunc HasMemberRole(boardID boards.ID, member address, role boards.Role) bool {\n\tassertMemberAddressIsValid(member)\n\n\tif boardID != 0 {\n\t\tboard := mustGetBoard(boardID)\n\t\tassertBoardIsNotFrozen(board)\n\t}\n\n\tperms := mustGetPermissions(boardID)\n\treturn perms.HasRole(member, role)\n}\n\n// ChangeMemberRole changes the role of a realm or board member.\n//\n// Board ID is only required when changing the role for a member of a board.\nfunc ChangeMemberRole(_ realm, boardID boards.ID, member address, role boards.Role) {\n\tassertMemberAddressIsValid(member)\n\tassertMembersUpdateIsEnabled(boardID)\n\n\tif role == \"\" {\n\t\trole = RoleGuest\n\t}\n\n\tperms := mustGetPermissions(boardID)\n\tcaller := runtime.PreviousRealm().Address()\n\targs := boards.Args{caller, boardID, member, role}\n\tperms.WithPermission(cross, caller, PermissionRoleChange, args, func(realm) {\n\t\tassertMembersUpdateIsEnabled(boardID)\n\n\t\tperms.SetUserRoles(cross, member, role)\n\n\t\tchain.Emit(\n\t\t\t\"RoleChanged\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", boardID.String(),\n\t\t\t\"member\", member.String(),\n\t\t\t\"newRole\", string(role),\n\t\t)\n\t})\n}\n\n// IterateRealmMembers iterates boards realm members.\n// The iteration is done only for realm members, board members are not iterated.\nfunc IterateRealmMembers(offset int, fn boards.UsersIterFn) (halted bool) {\n\tcount := gPerms.UsersCount() - offset\n\treturn gPerms.IterateUsers(offset, count, fn)\n}\n\n// GetBoard returns a single board.\nfunc GetBoard(boardID boards.ID) *boards.Board {\n\tboard := mustGetBoard(boardID)\n\tif !board.Permissions.HasRole(runtime.OriginCaller(), RoleOwner) {\n\t\tpanic(\"forbidden\")\n\t}\n\treturn board\n}\n\nfunc assertMemberAddressIsValid(member address) {\n\tif !member.IsValid() {\n\t\tpanic(\"invalid member address: \" + member.String())\n\t}\n}\n\nfunc assertUserAddressIsValid(user address) {\n\tif !user.IsValid() {\n\t\tpanic(\"invalid user address: \" + user.String())\n\t}\n}\n\nfunc assertHasPermission(perms boards.Permissions, user address, p boards.Permission) {\n\tif !perms.HasPermission(user, p) {\n\t\tpanic(\"unauthorized\")\n\t}\n}\n\nfunc assertBoardExists(id boards.ID) {\n\tif id == 0 { // ID zero is used to refer to the realm\n\t\treturn\n\t}\n\n\tif _, found := gBoards.Get(id); !found {\n\t\tpanic(\"board not found: \" + id.String())\n\t}\n}\n\nfunc assertBoardIsNotFrozen(b *boards.Board) {\n\tif b.Readonly {\n\t\tpanic(\"board is frozen\")\n\t}\n}\n\nfunc assertIsValidBoardName(name string) {\n\tsize := len(name)\n\tif size == 0 {\n\t\tpanic(\"board name is empty\")\n\t}\n\n\tif size \u003c 3 {\n\t\tpanic(\"board name is too short, minimum length is 3 characters\")\n\t}\n\n\tif size \u003e MaxBoardNameLength {\n\t\tn := strconv.Itoa(MaxBoardNameLength)\n\t\tpanic(\"board name is too long, maximum allowed is \" + n + \" characters\")\n\t}\n\n\tif !reBoardName.MatchString(name) {\n\t\tpanic(\"board name contains invalid characters\")\n\t}\n}\n\nfunc assertThreadIsNotFrozen(t *boards.Post) {\n\tif t.Readonly {\n\t\tpanic(\"thread is frozen\")\n\t}\n}\n\nfunc assertNameIsNotEmpty(name string) {\n\tif name == \"\" {\n\t\tpanic(\"name is empty\")\n\t}\n}\n\nfunc assertTitleIsValid(title string) {\n\tif title == \"\" {\n\t\tpanic(\"title is empty\")\n\t}\n\n\tif len(title) \u003e MaxThreadTitleLength {\n\t\tn := strconv.Itoa(MaxThreadTitleLength)\n\t\tpanic(\"title is too long, maximum allowed is \" + n + \" characters\")\n\t}\n}\n\nfunc assertBodyIsNotEmpty(body string) {\n\tif body == \"\" {\n\t\tpanic(\"body is empty\")\n\t}\n}\n\nfunc assertBoardNameNotExists(name string) {\n\tname = strings.ToLower(name)\n\tif _, found := gBoards.GetByName(name); found {\n\t\tpanic(\"board already exists\")\n\t}\n}\n\nfunc assertThreadExists(b *boards.Board, threadID boards.ID) {\n\tif _, found := b.Threads.Get(threadID); !found {\n\t\tpanic(\"thread not found: \" + threadID.String())\n\t}\n}\n\nfunc assertReplyExists(thread *boards.Post, replyID boards.ID) {\n\tif _, found := thread.Replies.Get(replyID); !found {\n\t\tpanic(\"reply not found: \" + replyID.String())\n\t}\n}\n\nfunc assertThreadIsVisible(thread *boards.Post) {\n\tif thread.Hidden {\n\t\tpanic(\"thread is hidden\")\n\t}\n}\n\nfunc assertReplyIsVisible(thread *boards.Post) {\n\tif thread.Hidden {\n\t\tpanic(\"reply is hidden\")\n\t}\n}\n\nfunc assertReplyBodyIsValid(body string) {\n\tassertBodyIsNotEmpty(body)\n\n\tif len(body) \u003e MaxReplyLength {\n\t\tn := strconv.Itoa(MaxReplyLength)\n\t\tpanic(\"reply is too long, maximum allowed is \" + n + \" characters\")\n\t}\n\n\tif reDeniedReplyLinePrefixes.MatchString(body) {\n\t\tpanic(\"using Markdown headings, blockquotes or horizontal lines is not allowed in replies\")\n\t}\n}\n\nfunc assertMembersUpdateIsEnabled(boardID boards.ID) {\n\tif boardID != 0 {\n\t\tassertRealmIsNotLocked()\n\t} else {\n\t\tassertRealmMembersAreNotLocked()\n\t}\n}\n"},{"name":"public_ban.gno","body":"package boards2\n\nimport (\n\t\"chain\"\n\t\"chain/runtime\"\n\t\"strings\"\n\t\"time\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/nt/avl\"\n)\n\n// Constants for different banning periods.\nconst (\n\tBanDay  = uint(24)\n\tBanWeek = BanDay * 7\n\tBanYear = BanDay * 365\n)\n\n// Ban bans a user from a board for a period of time.\n// Only invited guest members and external users can be banned.\n// Banning board owners, admins and moderators is not allowed.\nfunc Ban(_ realm, boardID boards.ID, user address, hours uint, reason string) {\n\tassertAddressIsValid(user)\n\n\tif hours == 0 {\n\t\tpanic(\"ban period in hours is required\")\n\t}\n\n\treason = strings.TrimSpace(reason)\n\tif reason == \"\" {\n\t\tpanic(\"ban reason is required\")\n\t}\n\n\tboard := mustGetBoard(boardID)\n\tcaller := runtime.PreviousRealm().Address()\n\tuntil := time.Now().Add(time.Minute * 60 * time.Duration(hours))\n\targs := boards.Args{boardID, user, until, reason}\n\tboard.Permissions.WithPermission(cross, caller, PermissionUserBan, args, func(realm) {\n\t\t// When banning invited members make sure they are guests, otherwise\n\t\t// disallow banning. Only guest or external users can be banned.\n\t\tif board.Permissions.HasUser(user) \u0026\u0026 !board.Permissions.HasRole(user, RoleGuest) {\n\t\t\tpanic(\"owner, admin and moderator banning is not allowed\")\n\t\t}\n\n\t\tbanned, found := getBannedUsers(boardID)\n\t\tif !found {\n\t\t\tbanned = avl.NewTree()\n\t\t\tgBannedUsers.Set(boardID.Key(), banned)\n\t\t}\n\n\t\tbanned.Set(user.String(), until)\n\n\t\tchain.Emit(\n\t\t\t\"UserBanned\",\n\t\t\t\"bannedBy\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"user\", user.String(),\n\t\t\t\"until\", until.Format(time.RFC3339),\n\t\t\t\"reason\", reason,\n\t\t)\n\t})\n}\n\n// Unban unbans a user from a board.\nfunc Unban(_ realm, boardID boards.ID, user address, reason string) {\n\tassertAddressIsValid(user)\n\n\tboard := mustGetBoard(boardID)\n\tcaller := runtime.PreviousRealm().Address()\n\targs := boards.Args{boardID, user, reason}\n\tboard.Permissions.WithPermission(cross, caller, PermissionUserUnban, args, func(realm) {\n\t\tbanned, found := getBannedUsers(boardID)\n\t\tif !found || !banned.Has(user.String()) {\n\t\t\tpanic(\"user is not banned\")\n\t\t}\n\n\t\tbanned.Remove(user.String())\n\n\t\tchain.Emit(\n\t\t\t\"UserUnbanned\",\n\t\t\t\"bannedBy\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"user\", user.String(),\n\t\t\t\"reason\", reason,\n\t\t)\n\t})\n}\n\n// IsBanned checks if a user is banned from a board.\nfunc IsBanned(boardID boards.ID, user address) bool {\n\tbanned, found := getBannedUsers(boardID)\n\treturn found \u0026\u0026 banned.Has(user.String())\n}\n\nfunc assertAddressIsValid(addr address) {\n\tif !addr.IsValid() {\n\t\tpanic(\"invalid address: \" + addr.String())\n\t}\n}\n\nfunc assertUserIsNotBanned(boardID boards.ID, user address) {\n\tbanned, found := getBannedUsers(boardID)\n\tif !found {\n\t\treturn\n\t}\n\n\tv, found := banned.Get(user.String())\n\tif !found {\n\t\treturn\n\t}\n\n\tuntil := v.(time.Time)\n\tif time.Now().Before(until) {\n\t\tpanic(user.String() + \" is banned until \" + until.Format(dateFormat))\n\t}\n}\n"},{"name":"public_flag.gno","body":"package boards2\n\nimport (\n\t\"chain\"\n\t\"chain/runtime\"\n\t\"strconv\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\n// SetFlaggingThreshold sets the number of flags required to hide a thread or comment.\n//\n// Threshold is only applicable within the board where it's setted.\nfunc SetFlaggingThreshold(_ realm, boardID boards.ID, threshold int) {\n\tif threshold \u003c 1 {\n\t\tpanic(\"invalid flagging threshold\")\n\t}\n\n\tassertRealmIsNotLocked()\n\n\tboard := mustGetBoard(boardID)\n\tassertBoardIsNotFrozen(board)\n\n\tcaller := runtime.PreviousRealm().Address()\n\targs := boards.Args{board.ID, threshold}\n\tboard.Permissions.WithPermission(cross, caller, PermissionBoardFlaggingUpdate, args, func(realm) {\n\t\tassertRealmIsNotLocked()\n\n\t\tgFlaggingThresholds.Set(boardID.String(), threshold)\n\n\t\tchain.Emit(\n\t\t\t\"FlaggingThresholdUpdated\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"threshold\", strconv.Itoa(threshold),\n\t\t)\n\t})\n}\n\n// GetFlaggingThreshold returns the number of flags required to hide a thread or comment within a board.\nfunc GetFlaggingThreshold(boardID boards.ID) int {\n\tassertBoardExists(boardID)\n\treturn getFlaggingThreshold(boardID)\n}\n\n// FlagThread adds a new flag to a thread.\n//\n// Flagging requires special permissions and hides the thread when\n// the number of flags reaches a pre-defined flagging threshold.\nfunc FlagThread(_ realm, boardID, threadID boards.ID, reason string) {\n\tcaller := runtime.PreviousRealm().Address()\n\tboard := mustGetBoard(boardID)\n\tisRealmOwner := gPerms.HasRole(caller, RoleOwner)\n\tif !isRealmOwner {\n\t\tassertRealmIsNotLocked()\n\t\tassertBoardIsNotFrozen(board)\n\t}\n\n\tthread, found := board.Threads.Get(threadID)\n\tif !found {\n\t\tpanic(\"thread not found\")\n\t}\n\n\tassertThreadIsNotFrozen(thread)\n\n\tflagThread := func() {\n\t\thide := flagItem(thread, caller, reason, getFlaggingThreshold(board.ID))\n\t\tif hide || isRealmOwner {\n\t\t\t// Realm owners can hide with a single flag\n\t\t\tthread.Hidden = true\n\t\t}\n\n\t\tchain.Emit(\n\t\t\t\"ThreadFlagged\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"threadID\", thread.ID.String(),\n\t\t\t\"reason\", reason,\n\t\t)\n\t}\n\n\t// Realm owners should be able to flag without permissions even when board is frozen\n\tif isRealmOwner {\n\t\tflagThread()\n\t\treturn\n\t}\n\n\targs := boards.Args{caller, board.ID, thread.ID, reason}\n\tboard.Permissions.WithPermission(cross, caller, PermissionThreadFlag, args, func(realm) {\n\t\tflagThread()\n\t})\n}\n\n// FlagReply adds a new flag to a comment or reply.\n//\n// Flagging requires special permissions and hides the comment or reply\n// when the number of flags reaches a pre-defined flagging threshold.\nfunc FlagReply(_ realm, boardID, threadID, replyID boards.ID, reason string) {\n\tcaller := runtime.PreviousRealm().Address()\n\tboard := mustGetBoard(boardID)\n\tisRealmOwner := gPerms.HasRole(caller, RoleOwner)\n\tif !isRealmOwner {\n\t\tassertRealmIsNotLocked()\n\t\tassertBoardIsNotFrozen(board)\n\t}\n\n\tthread := mustGetThread(board, threadID)\n\tassertThreadIsNotFrozen(thread)\n\n\treply := mustGetReply(thread, replyID)\n\tflagReply := func() {\n\t\thide := flagItem(reply, caller, reason, getFlaggingThreshold(board.ID))\n\t\tif hide || isRealmOwner {\n\t\t\t// Realm owners can hide with a single flag\n\t\t\treply.Hidden = true\n\t\t}\n\n\t\tchain.Emit(\n\t\t\t\"ReplyFlagged\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"threadID\", thread.ID.String(),\n\t\t\t\"replyID\", reply.ID.String(),\n\t\t\t\"reason\", reason,\n\t\t)\n\t}\n\n\t// Realm owners should be able to flag without permissions even when board is frozen\n\tif isRealmOwner {\n\t\tflagReply()\n\t\treturn\n\t}\n\n\targs := boards.Args{caller, board.ID, thread.ID, reply.ID, reason}\n\tboard.Permissions.WithPermission(cross, caller, PermissionReplyFlag, args, func(realm) {\n\t\tflagReply()\n\t})\n}\n"},{"name":"public_freeze.gno","body":"package boards2\n\nimport (\n\t\"chain\"\n\t\"chain/runtime\"\n\t\"strconv\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\n// FreezeBoard freezes a board so no more threads and comments can be created or modified.\nfunc FreezeBoard(_ realm, boardID boards.ID) {\n\tsetBoardReadonly(boardID, true)\n}\n\n// UnfreezeBoard removes frozen status from a board.\nfunc UnfreezeBoard(_ realm, boardID boards.ID) {\n\tsetBoardReadonly(boardID, false)\n}\n\n// IsBoardFrozen checks if a board has been frozen.\nfunc IsBoardFrozen(boardID boards.ID) bool {\n\tboard := mustGetBoard(boardID)\n\treturn board.Readonly\n}\n\n// FreezeThread freezes a thread so thread cannot be replied, modified or deleted.\n//\n// Fails if board is frozen.\nfunc FreezeThread(_ realm, boardID, threadID boards.ID) {\n\tsetThreadReadonly(boardID, threadID, true)\n}\n\n// UnfreezeThread removes frozen status from a thread.\n//\n// Fails if board is frozen.\nfunc UnfreezeThread(_ realm, boardID, threadID boards.ID) {\n\tsetThreadReadonly(boardID, threadID, false)\n}\n\n// IsThreadFrozen checks if a thread has been frozen.\n//\n// Returns true if board is frozen.\nfunc IsThreadFrozen(boardID, threadID boards.ID) bool {\n\tboard := mustGetBoard(boardID)\n\tthread := mustGetThread(board, threadID)\n\treturn board.Readonly || thread.Readonly\n}\n\nfunc setBoardReadonly(boardID boards.ID, readonly bool) {\n\tassertRealmIsNotLocked()\n\n\tboard := mustGetBoard(boardID)\n\tif readonly {\n\t\tassertBoardIsNotFrozen(board)\n\t}\n\n\tcaller := runtime.PreviousRealm().Address()\n\targs := boards.Args{caller, board.ID, readonly}\n\tboard.Permissions.WithPermission(cross, caller, PermissionBoardFreeze, args, func(realm) {\n\t\tassertRealmIsNotLocked()\n\n\t\tboard.Readonly = readonly\n\n\t\tchain.Emit(\n\t\t\t\"BoardFreeze\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"frozen\", strconv.FormatBool(readonly),\n\t\t)\n\t})\n}\n\nfunc setThreadReadonly(boardID, threadID boards.ID, readonly bool) {\n\tassertRealmIsNotLocked()\n\n\tboard := mustGetBoard(boardID)\n\tassertBoardIsNotFrozen(board)\n\n\tthread := mustGetThread(board, threadID)\n\tif readonly {\n\t\tassertThreadIsNotFrozen(thread)\n\t}\n\n\tcaller := runtime.PreviousRealm().Address()\n\targs := boards.Args{caller, board.ID, thread.ID, readonly}\n\tboard.Permissions.WithPermission(cross, caller, PermissionThreadFreeze, args, func(realm) {\n\t\tassertRealmIsNotLocked()\n\n\t\tthread.Readonly = readonly\n\n\t\tchain.Emit(\n\t\t\t\"ThreadFreeze\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"threadID\", thread.ID.String(),\n\t\t\t\"frozen\", strconv.FormatBool(readonly),\n\t\t)\n\t})\n}\n"},{"name":"public_invite.gno","body":"package boards2\n\nimport (\n\t\"chain\"\n\t\"chain/runtime\"\n\t\"strings\"\n\t\"time\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/nt/avl\"\n)\n\n// Invite contains a user invitation.\ntype Invite struct {\n\t// User is the user to invite.\n\tUser address\n\n\t// Role is the optional role to assign to the user.\n\tRole boards.Role\n}\n\n// InviteMember adds a member to the realm or to a board.\n//\n// A role can optionally be specified to be assigned to the new member.\nfunc InviteMember(_ realm, boardID boards.ID, user address, role boards.Role) {\n\tinviteMembers(boardID, Invite{\n\t\tUser: user,\n\t\tRole: role,\n\t})\n}\n\n// InviteMembers adds one or more members to the realm or to a board.\n//\n// Board ID is only required when inviting a member to a specific board.\nfunc InviteMembers(_ realm, boardID boards.ID, invites ...Invite) {\n\tinviteMembers(boardID, invites...)\n}\n\n// RequestInvite request to be invited to a board.\nfunc RequestInvite(_ realm, boardID boards.ID) {\n\tassertMembersUpdateIsEnabled(boardID)\n\n\tif !runtime.PreviousRealm().IsUser() {\n\t\tpanic(\"caller must be user\")\n\t}\n\n\t// TODO: Request a fee (returned on accept) or registered user to avoid spam?\n\t// TODO: Make open invite requests optional (per board)\n\n\tboard := mustGetBoard(boardID)\n\tuser := runtime.PreviousRealm().Address()\n\tif board.Permissions.HasUser(user) {\n\t\tpanic(\"caller is already a member\")\n\t}\n\n\tinvitee := user.String()\n\trequests, found := getInviteRequests(boardID)\n\tif !found {\n\t\trequests = avl.NewTree()\n\t\trequests.Set(invitee, time.Now())\n\t\tgInviteRequests.Set(boardID.Key(), requests)\n\t\treturn\n\t}\n\n\tif requests.Has(invitee) {\n\t\tpanic(\"invite request already exists\")\n\t}\n\n\trequests.Set(invitee, time.Now())\n}\n\n// AcceptInvite accepts a board invite request.\nfunc AcceptInvite(_ realm, boardID boards.ID, user address) {\n\tassertMembersUpdateIsEnabled(boardID)\n\tassertInviteRequestExists(boardID, user)\n\n\tboard := mustGetBoard(boardID)\n\tif board.Permissions.HasUser(user) {\n\t\tpanic(\"user is already a member\")\n\t}\n\n\tcaller := runtime.PreviousRealm().Address()\n\tinvite := Invite{\n\t\tUser: user,\n\t\tRole: RoleGuest,\n\t}\n\targs := boards.Args{caller, boardID, []Invite{invite}}\n\tboard.Permissions.WithPermission(cross, caller, PermissionMemberInvite, args, func(realm) {\n\t\tassertMembersUpdateIsEnabled(boardID)\n\n\t\tinvitee := user.String()\n\t\trequests, found := getInviteRequests(boardID)\n\t\tif !found || !requests.Has(invitee) {\n\t\t\tpanic(\"invite request not found\")\n\t\t}\n\n\t\tif board.Permissions.HasUser(user) {\n\t\t\tpanic(\"user is already a member\")\n\t\t}\n\n\t\tboard.Permissions.SetUserRoles(cross, user)\n\t\trequests.Remove(invitee)\n\n\t\tchain.Emit(\n\t\t\t\"MembersInvited\",\n\t\t\t\"invitedBy\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"members\", user.String()+\":\"+string(RoleGuest), // TODO: Support optional role assign\n\t\t)\n\t})\n}\n\n// RevokeInvite revokes a board invite request.\nfunc RevokeInvite(_ realm, boardID boards.ID, user address) {\n\tassertInviteRequestExists(boardID, user)\n\n\tboard := mustGetBoard(boardID)\n\tcaller := runtime.PreviousRealm().Address()\n\targs := boards.Args{boardID, user, RoleGuest}\n\tboard.Permissions.WithPermission(cross, caller, PermissionMemberInviteRevoke, args, func(realm) {\n\t\tinvitee := user.String()\n\t\trequests, found := getInviteRequests(boardID)\n\t\tif !found || !requests.Has(invitee) {\n\t\t\tpanic(\"invite request not found\")\n\t\t}\n\n\t\trequests.Remove(invitee)\n\n\t\tchain.Emit(\n\t\t\t\"InviteRevoked\",\n\t\t\t\"revokedBy\", caller.String(),\n\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\"user\", user.String(),\n\t\t)\n\t})\n}\n\nfunc inviteMembers(boardID boards.ID, invites ...Invite) {\n\tassertMembersUpdateIsEnabled(boardID)\n\n\tif len(invites) == 0 {\n\t\tpanic(\"one or more user invites are required\")\n\t}\n\n\tperms := mustGetPermissions(boardID)\n\tcaller := runtime.PreviousRealm().Address()\n\targs := boards.Args{caller, boardID, invites}\n\tperms.WithPermission(cross, caller, PermissionMemberInvite, args, func(realm) {\n\t\tassertMembersUpdateIsEnabled(boardID)\n\n\t\tusers := make([]string, len(invites))\n\t\tfor _, v := range invites {\n\t\t\tassertMemberAddressIsValid(v.User)\n\n\t\t\tif perms.HasUser(v.User) {\n\t\t\t\tpanic(\"user is already a member: \" + v.User.String())\n\t\t\t}\n\n\t\t\t// NOTE: Permissions implementation should check that role is valid\n\t\t\tperms.SetUserRoles(cross, v.User, v.Role)\n\t\t\tusers = append(users, v.User.String()+\":\"+string(v.Role))\n\t\t}\n\n\t\tchain.Emit(\n\t\t\t\"MembersInvited\",\n\t\t\t\"invitedBy\", caller.String(),\n\t\t\t\"boardID\", boardID.String(),\n\t\t\t\"members\", strings.Join(users, \",\"),\n\t\t)\n\t})\n}\n\nfunc assertInviteRequestExists(boardID boards.ID, user address) {\n\tinvitee := user.String()\n\trequests, found := getInviteRequests(boardID)\n\tif !found || !requests.Has(invitee) {\n\t\tpanic(\"invite request not found\")\n\t}\n}\n"},{"name":"public_lock.gno","body":"package boards2\n\nimport (\n\t\"chain\"\n\t\"chain/runtime\"\n\t\"strconv\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\n// LockRealm locks the realm making it readonly.\n//\n// WARNING: Realm can't be unlocked once locked.\n//\n// Realm can also be locked without locking realm members.\n// Realm members can be locked when locking the realm or afterwards.\n// This is relevant for two reasons, one so members can be modified after lock.\n// The other is for realm owners, which can delete threads and comments after lock.\nfunc LockRealm(_ realm, lockRealmMembers bool) {\n\tassertRealmMembersAreNotLocked()\n\n\t// If realm members are not being locked assert that realm is no locked.\n\t// Members can be locked after locking the realm, in a second `LockRealm` call.\n\tif !lockRealmMembers {\n\t\tassertRealmIsNotLocked()\n\t}\n\n\tcaller := runtime.PreviousRealm().Address()\n\tgPerms.WithPermission(cross, caller, PermissionRealmLock, boards.Args{}, func(realm) {\n\t\tgLocked.realm = true\n\t\tgLocked.realmMembers = lockRealmMembers\n\n\t\tchain.Emit(\n\t\t\t\"RealmLocked\",\n\t\t\t\"caller\", caller.String(),\n\t\t\t\"lockRealmMembers\", strconv.FormatBool(lockRealmMembers),\n\t\t)\n\t})\n}\n\n// IsRealmLocked checks if boards realm has been locked.\nfunc IsRealmLocked() bool {\n\treturn gLocked.realm\n}\n\n// AreRealmMembersLocked checks if realm members has been locked.\nfunc AreRealmMembersLocked() bool {\n\treturn gLocked.realmMembers\n}\n\nfunc assertRealmIsNotLocked() { // TODO: Add filtests for locked realm case to all public functions\n\tif gLocked.realm {\n\t\tpanic(\"realm is locked\")\n\t}\n}\n\nfunc assertRealmMembersAreNotLocked() { // TODO: Add filtests for locked members case to all public member functions\n\tif gLocked.realmMembers {\n\t\tpanic(\"realm and members are locked\")\n\t}\n}\n"},{"name":"render.gno","body":"package boards2\n\nimport (\n\t\"net/url\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/jeronimoalbi/pager\"\n\t\"gno.land/p/moul/md\"\n\t\"gno.land/p/moul/mdtable\"\n\t\"gno.land/p/nt/mux\"\n)\n\nconst (\n\tpageSizeDefault = 6\n\tpageSizeReplies = 10\n)\n\nconst menuManageBoard = \"manageBoard\"\n\nfunc Render(path string) string {\n\tvar (\n\t\tb      strings.Builder\n\t\trouter = mux.NewRouter()\n\t)\n\n\trouter.HandleFunc(\"\", renderBoardsList)\n\trouter.HandleFunc(\"help\", renderHelp)\n\trouter.HandleFunc(\"admin-users\", renderMembers)\n\trouter.HandleFunc(\"{board}\", renderBoard)\n\trouter.HandleFunc(\"{board}/members\", renderMembers)\n\trouter.HandleFunc(\"{board}/invites\", renderInvites)\n\trouter.HandleFunc(\"{board}/banned-users\", renderBannedUsers)\n\trouter.HandleFunc(\"{board}/{thread}\", renderThread)\n\trouter.HandleFunc(\"{board}/{thread}/{reply}\", renderReply)\n\n\trouter.NotFoundHandler = func(res *mux.ResponseWriter, _ *mux.Request) {\n\t\tres.Write(md.Blockquote(\"Path not found\"))\n\t}\n\n\t// Render common realm header before resolving render path\n\tif gNotice != \"\" {\n\t\tb.WriteString(infoAlert(\"Notice\", gNotice))\n\t}\n\n\t// Render view for current path\n\tb.WriteString(router.Render(path))\n\n\treturn b.String()\n}\n\nfunc renderHelp(res *mux.ResponseWriter, _ *mux.Request) {\n\tres.Write(md.H1(\"Boards Help\"))\n\tif gHelp != \"\" {\n\t\tres.Write(gHelp)\n\t\treturn\n\t}\n\n\tlink := gRealmLink.Call(\"SetHelp\", \"content\", \"\")\n\tres.Write(md.H3(\"Help content has not been uploaded\"))\n\tres.Write(\"Do you want to \" + md.Link(\"upload boards help\", link) + \" ?\")\n}\n\nfunc renderBoardsList(res *mux.ResponseWriter, req *mux.Request) {\n\tres.Write(md.H1(\"Boards\"))\n\trenderBoardListMenu(res, req)\n\tres.Write(md.HorizontalRule())\n\n\tif gListedBoardsByID.Size() == 0 {\n\t\tlink := gRealmLink.Call(\"CreateBoard\", \"name\", \"\", \"listed\", \"true\")\n\t\tres.Write(md.H3(\"Currently there are no boards\"))\n\t\tres.Write(\"Be the first to \" + md.Link(\"create a new board\", link) + \" !\")\n\t\treturn\n\t}\n\n\tp, err := pager.New(req.RawPath, gListedBoardsByID.Size(), pager.WithPageSize(pageSizeDefault))\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\trender := func(_ string, v any) bool {\n\t\tboard := v.(*boards.Board)\n\t\tuserLink := userLink(board.Creator)\n\t\tdate := board.CreatedAt.Format(dateFormat)\n\n\t\tres.Write(md.Bold(md.Link(board.Name, makeBoardURI(board))) + \"  \\n\")\n\t\tres.Write(\"Created by \" + userLink + \" on \" + date + \", #\" + board.ID.String() + \"  \\n\")\n\n\t\tstatus := strconv.Itoa(board.Threads.Size()) + \" threads\"\n\t\tif board.Readonly {\n\t\t\tstatus += \", read-only\"\n\t\t}\n\n\t\tres.Write(md.Bold(status) + \"\\n\\n\")\n\t\treturn false\n\t}\n\n\tres.Write(\"Sort by: \")\n\tr := parseRealmPath(req.RawPath)\n\tif r.Query.Get(\"order\") == \"desc\" {\n\t\tr.Query.Set(\"order\", \"asc\")\n\t\tres.Write(md.Link(\"newest first\", r.String()) + \"\\n\\n\")\n\t\tgListedBoardsByID.ReverseIterateByOffset(p.Offset(), p.PageSize(), render)\n\t} else {\n\t\tr.Query.Set(\"order\", \"desc\")\n\t\tres.Write(md.Link(\"oldest first\", r.String()) + \"\\n\\n\")\n\t\tgListedBoardsByID.IterateByOffset(p.Offset(), p.PageSize(), render)\n\t}\n\n\tif p.HasPages() {\n\t\tres.Write(md.HorizontalRule())\n\t\tres.Write(pager.Picker(p))\n\t}\n}\n\nfunc renderBoardListMenu(res *mux.ResponseWriter, req *mux.Request) {\n\tpath := strings.TrimPrefix(string(gRealmLink), \"gno.land\")\n\n\tres.Write(md.Link(\"Create Board\", gRealmLink.Call(\"CreateBoard\", \"name\", \"\", \"listed\", \"true\")))\n\tres.Write(\" • \")\n\tres.Write(md.Link(\"List Admin Users\", path+\":admin-users\"))\n\tres.Write(\" • \")\n\tres.Write(md.Link(\"Help\", path+\":help\"))\n\tres.Write(\"\\n\\n\")\n}\n\nfunc renderBoardMenu(board *boards.Board, req *mux.Request) string {\n\tvar (\n\t\tb               strings.Builder\n\t\tboardMembersURL = makeBoardURI(board) + \"/members\"\n\t)\n\n\tb.WriteString(\"\\n\")\n\tif board.Readonly {\n\t\tb.WriteString(md.Link(\"List Members\", boardMembersURL))\n\t\tb.WriteString(\" • \")\n\t\tb.WriteString(md.Link(\"Unfreeze Board\", makeUnfreezeBoardURI(board)))\n\t\tb.WriteString(\"\\n\")\n\t} else {\n\t\tb.WriteString(md.Link(\"Create Thread\", makeCreateThreadURI(board)))\n\t\tb.WriteString(\" • \")\n\t\tb.WriteString(md.Link(\"Request Invite\", makeRequestInviteURI(board)))\n\t\tb.WriteString(\" • \")\n\n\t\tmenu := getCurrentMenu(req.RawPath)\n\t\tif menu == menuManageBoard {\n\t\t\tb.WriteString(md.Bold(\"Manage Board\"))\n\t\t} else {\n\t\t\tb.WriteString(md.Link(\"Manage Board\", menuURL(menuManageBoard)))\n\t\t}\n\n\t\tb.WriteString(\"  \\n\")\n\n\t\tif menu == menuManageBoard {\n\t\t\tb.WriteString(\"↳\")\n\t\t\tb.WriteString(md.Link(\"Invite Member\", makeInviteMemberURI(board)))\n\t\t\tb.WriteString(\" • \")\n\t\t\tb.WriteString(md.Link(\"List Invite Requests\", makeBoardURI(board)+\"/invites\"))\n\t\t\tb.WriteString(\" • \")\n\t\t\tb.WriteString(md.Link(\"List Members\", boardMembersURL))\n\t\t\tb.WriteString(\" • \")\n\t\t\tb.WriteString(md.Link(\"List Banned Users\", makeBoardURI(board)+\"/banned-users\"))\n\t\t\tb.WriteString(\" • \")\n\t\t\tb.WriteString(md.Link(\"Freeze Board\", makeFreezeBoardURI(board)))\n\t\t\tb.WriteString(\"\\n\")\n\t\t}\n\t}\n\n\tb.WriteString(\"\\n\")\n\treturn b.String()\n}\n\nfunc renderMembers(res *mux.ResponseWriter, req *mux.Request) {\n\tboardID := boards.ID(0)\n\tperms := gPerms\n\tname := req.GetVar(\"board\")\n\tif name != \"\" {\n\t\tboard, found := gBoards.GetByName(name)\n\t\tif !found {\n\t\t\tres.Write(md.H3(\"Board not found\"))\n\t\t\treturn\n\t\t}\n\n\t\tboardID = board.ID\n\t\tperms = board.Permissions\n\n\t\tres.Write(md.H1(board.Name + \" Members\"))\n\t\tres.Write(md.H3(\"These are the board members\"))\n\t} else {\n\t\tres.Write(md.H1(\"Admin Users\"))\n\t\tres.Write(md.H3(\"These are the admin users of the realm\"))\n\t}\n\n\t// Create a pager with a small page size to reduce\n\t// the number of username lookups per page.\n\tp, err := pager.New(req.RawPath, perms.UsersCount(), pager.WithPageSize(pageSizeDefault))\n\tif err != nil {\n\t\tres.Write(err.Error())\n\t\treturn\n\t}\n\n\ttable := mdtable.Table{\n\t\tHeaders: []string{\"Member\", \"Role\", \"Actions\"},\n\t}\n\n\tperms.IterateUsers(p.Offset(), p.PageSize(), func(u boards.User) bool {\n\t\tactions := []string{\n\t\t\tmd.Link(\"remove\", gRealmLink.Call(\n\t\t\t\t\"RemoveMember\",\n\t\t\t\t\"boardID\", boardID.String(),\n\t\t\t\t\"member\", u.Address.String(),\n\t\t\t)),\n\t\t\tmd.Link(\"change role\", gRealmLink.Call(\n\t\t\t\t\"ChangeMemberRole\",\n\t\t\t\t\"boardID\", boardID.String(),\n\t\t\t\t\"member\", u.Address.String(),\n\t\t\t\t\"role\", \"\",\n\t\t\t)),\n\t\t}\n\n\t\ttable.Append([]string{\n\t\t\tuserLink(u.Address),\n\t\t\trolesToString(u.Roles),\n\t\t\tstrings.Join(actions, \" • \"),\n\t\t})\n\t\treturn false\n\t})\n\tres.Write(table.String())\n\n\tif p.HasPages() {\n\t\tres.Write(\"\\n\" + pager.Picker(p))\n\t}\n}\n\nfunc renderInvites(res *mux.ResponseWriter, req *mux.Request) {\n\tname := req.GetVar(\"board\")\n\tboard, found := gBoards.GetByName(name)\n\tif !found {\n\t\tres.Write(md.H3(\"Board not found\"))\n\t\treturn\n\t}\n\n\tres.Write(md.H1(board.Name + \" Invite Requests\"))\n\n\trequests, found := getInviteRequests(board.ID)\n\tif !found || requests.Size() == 0 {\n\t\tres.Write(md.H3(\"Board has no invite requests\"))\n\t\treturn\n\t}\n\n\tp, err := pager.New(req.RawPath, requests.Size(), pager.WithPageSize(pageSizeDefault))\n\tif err != nil {\n\t\tres.Write(err.Error())\n\t\treturn\n\t}\n\n\ttable := mdtable.Table{\n\t\tHeaders: []string{\"User\", \"Request Date\", \"Actions\"},\n\t}\n\n\tres.Write(md.H3(\"These users have requested to be invited to the board\"))\n\trequests.ReverseIterateByOffset(p.Offset(), p.PageSize(), func(addr string, v any) bool {\n\t\tactions := []string{\n\t\t\tmd.Link(\"accept\", gRealmLink.Call(\n\t\t\t\t\"AcceptInvite\",\n\t\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\t\"user\", addr,\n\t\t\t)),\n\t\t\tmd.Link(\"revoke\", gRealmLink.Call(\n\t\t\t\t\"RevokeInvite\",\n\t\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\t\"user\", addr,\n\t\t\t)),\n\t\t}\n\n\t\ttable.Append([]string{\n\t\t\tuserLink(address(addr)),\n\t\t\tv.(time.Time).Format(dateFormat),\n\t\t\tstrings.Join(actions, \" • \"),\n\t\t})\n\t\treturn false\n\t})\n\n\tres.Write(table.String())\n\n\tif p.HasPages() {\n\t\tres.Write(\"\\n\" + pager.Picker(p))\n\t}\n}\n\nfunc renderBannedUsers(res *mux.ResponseWriter, req *mux.Request) {\n\tname := req.GetVar(\"board\")\n\tboard, found := gBoards.GetByName(name)\n\tif !found {\n\t\tres.Write(md.H3(\"Board not found\"))\n\t\treturn\n\t}\n\n\tres.Write(md.H1(board.Name + \" Banned Users\"))\n\n\tbanned, found := getBannedUsers(board.ID)\n\tif !found || banned.Size() == 0 {\n\t\tres.Write(md.H3(\"Board has no banned users\"))\n\t\treturn\n\t}\n\n\tp, err := pager.New(req.RawPath, banned.Size(), pager.WithPageSize(pageSizeDefault))\n\tif err != nil {\n\t\tres.Write(err.Error())\n\t\treturn\n\t}\n\n\ttable := mdtable.Table{\n\t\tHeaders: []string{\"User\", \"Banned Until\", \"Actions\"},\n\t}\n\n\tres.Write(md.H3(\"These users have been banned from the board\"))\n\tbanned.ReverseIterateByOffset(p.Offset(), p.PageSize(), func(addr string, v any) bool {\n\t\ttable.Append([]string{\n\t\t\tuserLink(address(addr)),\n\t\t\tv.(time.Time).Format(dateFormat),\n\t\t\tmd.Link(\"unban\", gRealmLink.Call(\n\t\t\t\t\"Unban\",\n\t\t\t\t\"boardID\", board.ID.String(),\n\t\t\t\t\"user\", addr,\n\t\t\t\t\"reason\", \"\",\n\t\t\t)),\n\t\t})\n\t\treturn false\n\t})\n\n\tres.Write(table.String())\n\n\tif p.HasPages() {\n\t\tres.Write(\"\\n\" + pager.Picker(p))\n\t}\n}\n\nfunc infoAlert(title, msg string) string {\n\theader := strings.TrimSpace(\"[!INFO] \" + title)\n\treturn md.Blockquote(header + \"\\n\" + msg)\n}\n\nfunc rolesToString(roles []boards.Role) string {\n\tif len(roles) == 0 {\n\t\treturn \"\"\n\t}\n\n\tnames := make([]string, len(roles))\n\tfor i, r := range roles {\n\t\tnames[i] = string(r)\n\t}\n\treturn strings.Join(names, \", \")\n}\n\nfunc menuURL(name string) string {\n\t// TODO: Menu URL works because no other GET arguments are being used\n\treturn \"?menu=\" + name\n}\n\nfunc getCurrentMenu(rawURL string) string {\n\t_, rawQuery, found := strings.Cut(rawURL, \"?\")\n\tif !found {\n\t\treturn \"\"\n\t}\n\n\tquery, _ := url.ParseQuery(rawQuery)\n\treturn query.Get(\"menu\")\n}\n"},{"name":"render_board.gno","body":"package boards2\n\nimport (\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/jeronimoalbi/pager\"\n\t\"gno.land/p/moul/md\"\n\t\"gno.land/p/nt/mux\"\n)\n\nfunc renderBoard(res *mux.ResponseWriter, req *mux.Request) {\n\tname := req.GetVar(\"board\")\n\tboard, found := gBoards.GetByName(name)\n\tif !found {\n\t\tlink := md.Link(\"create a new board\", gRealmLink.Call(\"CreateBoard\", \"name\", name, \"listed\", \"true\"))\n\t\tres.Write(md.H3(\"The board you are looking for does not exist\"))\n\t\tres.Write(\"Do you want to \" + link + \" ?\")\n\t\treturn\n\t}\n\n\tcreatorLink := userLink(board.Creator)\n\tdate := board.CreatedAt.Format(dateFormat)\n\n\tres.Write(md.H1(board.Name))\n\tres.Write(\"Board created by \" + creatorLink + \" on \" + date + \", #\" + board.ID.String())\n\tif board.Readonly {\n\t\tres.Write(\"  \\n_\" + md.Bold(\"Starting new threads and commenting is disabled\") + \"_\")\n\t}\n\n\tres.Write(\"\\n\" + renderBoardMenu(board, req))\n\tres.Write(md.HorizontalRule())\n\n\tif board.Threads.Size() == 0 {\n\t\tres.Write(md.H3(\"This board doesn't have any threads\"))\n\t\tif !board.Readonly {\n\t\t\tstartConversationLink := md.Link(\"start a new conversation\", makeCreateThreadURI(board))\n\t\t\tres.Write(\"Do you want to \" + startConversationLink + \" in this board ?\")\n\t\t}\n\t\treturn\n\t}\n\n\tp, err := pager.New(req.RawPath, board.Threads.Size(), pager.WithPageSize(pageSizeDefault))\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\trender := func(thread *boards.Post) bool {\n\t\tif !thread.Hidden {\n\t\t\tres.Write(renderThreadSummary(thread) + \"\\n\")\n\t\t}\n\t\treturn false\n\t}\n\n\tres.Write(\"Sort by: \")\n\n\tr := parseRealmPath(req.RawPath)\n\tsortOrder := r.Query.Get(\"order\")\n\tif sortOrder == \"desc\" {\n\t\tr.Query.Set(\"order\", \"asc\")\n\t\tres.Write(md.Link(\"newest first\", r.String()) + \"\\n\\n\")\n\t} else {\n\t\tr.Query.Set(\"order\", \"desc\")\n\t\tres.Write(md.Link(\"oldest first\", r.String()) + \"\\n\\n\")\n\t}\n\n\tcount := p.PageSize()\n\tif sortOrder == \"desc\" {\n\t\tcount = -count // Reverse iterate\n\t}\n\n\tboard.Threads.Iterate(p.Offset(), count, render)\n\n\tif p.HasPages() {\n\t\tres.Write(md.HorizontalRule())\n\t\tres.Write(pager.Picker(p))\n\t}\n}\n"},{"name":"render_post.gno","body":"package boards2\n\nimport (\n\t\"strconv\"\n\t\"strings\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/moul/md\"\n)\n\nfunc renderPost(post *boards.Post, path, indent string, levels int) string {\n\tvar b strings.Builder\n\n\t// Thread reposts might not have a title, if so get title from source thread\n\ttitle := post.Title\n\tif boards.IsRepost(post) \u0026\u0026 title == \"\" {\n\t\tif board, ok := gBoards.Get(post.OriginalBoardID); ok {\n\t\t\tif src, ok := board.Threads.Get(post.ParentID); ok {\n\t\t\t\ttitle = src.Title\n\t\t\t}\n\t\t}\n\t}\n\n\tif title != \"\" { // Replies don't have a title\n\t\tb.WriteString(md.H1(title))\n\t}\n\n\tb.WriteString(indent + \"\\n\")\n\tb.WriteString(renderPostContent(post, indent, levels))\n\n\tif post.Replies.Size() == 0 {\n\t\treturn b.String()\n\t}\n\n\t// XXX: This triggers for reply views\n\tif levels == 0 {\n\t\tb.WriteString(indent + \"\\n\")\n\t\treturn b.String()\n\t}\n\n\tif path != \"\" {\n\t\tb.WriteString(renderTopLevelReplies(post, path, indent, levels-1))\n\t} else {\n\t\tb.WriteString(renderSubReplies(post, indent, levels-1))\n\t}\n\treturn b.String()\n}\n\nfunc renderPostContent(post *boards.Post, indent string, levels int) string {\n\tvar b strings.Builder\n\n\tif post.Hidden {\n\t\t// Flagged comment should be hidden, but replies still visible (see: #3480)\n\t\t// Flagged threads will be hidden by render function caller.\n\t\treturn indentBody(indent, md.Italic(\"⚠ Reply is hidden as it has been flagged as inappropriate\")) + \"\\n\"\n\t}\n\n\tsrcContent, srcPost := renderSourcePost(post, indent)\n\tif boards.IsRepost(post) \u0026\u0026 srcPost != nil {\n\t\toriginLink := md.Link(\"another thread\", makeThreadURI(srcPost))\n\t\tb.WriteString(\"  \\nThis thread is a repost of \" + originLink + \": \\n\")\n\t}\n\n\tb.WriteString(srcContent)\n\n\tif boards.IsRepost(post) \u0026\u0026 srcPost == nil \u0026\u0026 len(post.Body) \u003e 0 {\n\t\t// Add a newline to separate source deleted message from repost body content\n\t\tb.WriteString(\"\\n\")\n\t}\n\n\tb.WriteString(indentBody(indent, post.Body))\n\tb.WriteString(\"\\n\")\n\n\tif boards.IsThread(post) {\n\t\t// Split content and controls for threads.\n\t\tb.WriteString(\"\\n\")\n\t}\n\n\t// Buttons \u0026 counters\n\tb.WriteString(indent)\n\tif !boards.IsThread(post) {\n\t\tb.WriteString(\"  \\n\")\n\t\tb.WriteString(indent)\n\t}\n\n\tcreatorLink := userLink(post.Creator)\n\tdate := post.CreatedAt.Format(dateFormat)\n\tb.WriteString(\"Created by \" + creatorLink + \" on \" + date)\n\n\t// Add a reply view link to each top level reply\n\tif !boards.IsThread(post) {\n\t\tb.WriteString(\", \" + md.Link(\"#\"+post.ID.String(), makeReplyURI(post)))\n\t} else if post.Reposts.Size() \u003e 0 { // Post is a thread\n\t\tb.WriteString(\", \" + strconv.Itoa(post.Reposts.Size()) + \" repost(s)\")\n\t}\n\n\tb.WriteString(\"  \\n\")\n\n\tactions := []string{\n\t\tmd.Link(\"Flag\", makeFlagURI(post)),\n\t}\n\n\tif boards.IsThread(post) {\n\t\tactions = append(actions, md.Link(\"Repost\", makeCreateRepostURI(post)))\n\t}\n\n\tisReadonly := post.Readonly || post.Board.Readonly\n\tif !isReadonly {\n\t\tactions = append(\n\t\t\tactions,\n\t\t\tmd.Link(\"Reply\", makeCreateReplyURI(post)),\n\t\t\tmd.Link(\"Edit\", makeEditPostURI(post)),\n\t\t\tmd.Link(\"Delete\", makeDeletePostURI(post)),\n\t\t)\n\t}\n\n\tif levels == 0 {\n\t\tif boards.IsThread(post) {\n\t\t\tactions = append(actions, md.Link(\"Show all Replies\", makeThreadURI(post)))\n\t\t} else {\n\t\t\tactions = append(actions, md.Link(\"View Thread\", makeThreadURI(post)))\n\t\t}\n\t}\n\n\tb.WriteString(strings.Join(actions, \" • \") + \" \\n\")\n\treturn b.String()\n}\n\nfunc renderPostInner(post *boards.Post) string {\n\tif boards.IsThread(post) {\n\t\treturn \"\"\n\t}\n\n\tvar (\n\t\ts         string\n\t\tthreadID  = post.ThreadID\n\t\tthread, _ = post.Board.Threads.Get(threadID)\n\t)\n\n\t// Fully render parent if it's not a repost.\n\tif !boards.IsRepost(post) {\n\t\tparentID := post.ParentID\n\t\tparent := thread\n\n\t\tif thread.ID != parentID {\n\t\t\tparent, _ = thread.Replies.Get(parentID)\n\t\t}\n\n\t\ts += renderPost(parent, \"\", \"\", 0) + \"\\n\"\n\t}\n\n\ts += renderPost(post, \"\", \"\u003e \", 5)\n\treturn s\n}\n\nfunc renderSourcePost(post *boards.Post, indent string) (string, *boards.Post) {\n\tif !boards.IsRepost(post) {\n\t\treturn \"\", nil\n\t}\n\n\tindent += \"\u003e \"\n\n\t// TODO: figure out a way to decouple posts from a global storage.\n\tboard, ok := gBoards.Get(post.OriginalBoardID)\n\tif !ok {\n\t\t// TODO: Boards can't be deleted so this might be redundant\n\t\treturn indentBody(indent, md.Italic(\"⚠ Source board has been deleted\")+\"\\n\"), nil\n\t}\n\n\tsrcPost, ok := board.Threads.Get(post.ParentID)\n\tif !ok {\n\t\treturn indentBody(indent, md.Italic(\"⚠ Source post has been deleted\")+\"\\n\"), nil\n\t}\n\n\tif srcPost.Hidden {\n\t\treturn indentBody(indent, md.Italic(\"⚠ Source post has been flagged as inappropriate\")+\"\\n\"), nil\n\t}\n\n\treturn indentBody(indent, srcPost.Summary()) + \"\\n\\n\", srcPost\n}\n"},{"name":"render_reply.gno","body":"package boards2\n\nimport (\n\t\"strconv\"\n\t\"strings\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/jeronimoalbi/pager\"\n\t\"gno.land/p/moul/md\"\n\t\"gno.land/p/nt/mux\"\n)\n\nfunc renderReply(res *mux.ResponseWriter, req *mux.Request) {\n\tname := req.GetVar(\"board\")\n\tboard, found := gBoards.GetByName(name)\n\tif !found {\n\t\tres.Write(\"Board does not exist: \" + name)\n\t\treturn\n\t}\n\n\trawID := req.GetVar(\"thread\")\n\ttID, err := strconv.Atoi(rawID)\n\tif err != nil {\n\t\tres.Write(\"Invalid thread ID: \" + rawID)\n\t\treturn\n\t}\n\n\trawID = req.GetVar(\"reply\")\n\trID, err := strconv.Atoi(rawID)\n\tif err != nil {\n\t\tres.Write(\"Invalid reply ID: \" + rawID)\n\t\treturn\n\t}\n\n\tthread, found := board.Threads.Get(boards.ID(tID))\n\tif !found {\n\t\tres.Write(\"Thread does not exist with ID: \" + req.GetVar(\"thread\"))\n\t\treturn\n\t}\n\n\treply, found := thread.Replies.Get(boards.ID(rID))\n\tif !found {\n\t\tres.Write(\"Reply does not exist with ID: \" + rawID)\n\t\treturn\n\t}\n\n\t// Call render even for hidden replies to display children.\n\t// Original comment content will be hidden under the hood.\n\t// See: #3480\n\tres.Write(renderPostInner(reply))\n}\n\nfunc renderTopLevelReplies(post *boards.Post, path, indent string, levels int) string {\n\tp, err := pager.New(path, post.Replies.Size(), pager.WithPageSize(pageSizeReplies))\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tvar (\n\t\tb              strings.Builder\n\t\tcommentsIndent = indent + \"\u003e \"\n\t)\n\n\trender := func(reply *boards.Post) bool {\n\t\tb.WriteString(indent + \"\\n\" + renderPost(reply, \"\", commentsIndent, levels-1))\n\t\treturn false\n\t}\n\n\tb.WriteString(\"\\n\" + md.HorizontalRule() + \"Sort by: \")\n\n\tr := parseRealmPath(path)\n\tsortOrder := r.Query.Get(\"order\")\n\tif sortOrder == \"desc\" {\n\t\tr.Query.Set(\"order\", \"asc\")\n\t\tb.WriteString(md.Link(\"newest first\", r.String()) + \"\\n\")\n\n\t} else {\n\t\tr.Query.Set(\"order\", \"desc\")\n\t\tb.WriteString(md.Link(\"oldest first\", r.String()) + \"\\n\")\n\t}\n\n\tcount := p.PageSize()\n\tif sortOrder == \"desc\" {\n\t\tcount = -count // Reverse iterate\n\t}\n\n\tpost.Replies.Iterate(p.Offset(), count, render)\n\n\tif p.HasPages() {\n\t\tb.WriteString(md.HorizontalRule())\n\t\tb.WriteString(pager.Picker(p))\n\t}\n\treturn b.String()\n}\n\nfunc renderSubReplies(post *boards.Post, indent string, levels int) string {\n\tvar (\n\t\tb              strings.Builder\n\t\tcommentsIndent = indent + \"\u003e \"\n\t)\n\n\tpost.Replies.Iterate(0, post.Replies.Size(), func(reply *boards.Post) bool {\n\t\tb.WriteString(indent + \"\\n\" + renderPost(reply, \"\", commentsIndent, levels-1))\n\t\treturn false\n\t})\n\treturn b.String()\n}\n"},{"name":"render_thread.gno","body":"package boards2\n\nimport (\n\t\"strconv\"\n\t\"strings\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/moul/md\"\n\t\"gno.land/p/nt/mux\"\n)\n\nfunc renderThread(res *mux.ResponseWriter, req *mux.Request) {\n\tname := req.GetVar(\"board\")\n\tboard, found := gBoards.GetByName(name)\n\tif !found {\n\t\tres.Write(\"Board does not exist: \" + name)\n\t\treturn\n\t}\n\n\trawID := req.GetVar(\"thread\")\n\ttID, err := strconv.Atoi(rawID)\n\tif err != nil {\n\t\tres.Write(\"Invalid thread ID: \" + rawID)\n\t\treturn\n\t}\n\n\tthread, found := board.Threads.Get(boards.ID(tID))\n\tif !found {\n\t\tres.Write(\"Thread does not exist with ID: \" + rawID)\n\t\treturn\n\t}\n\n\tif thread.Hidden {\n\t\tres.Write(\"Thread with ID: \" + rawID + \" has been flagged as inappropriate\")\n\t\treturn\n\t}\n\n\tres.Write(renderPost(thread, req.RawPath, \"\", 5))\n}\n\nfunc renderThreadSummary(thread *boards.Post) string {\n\tvar (\n\t\tb           strings.Builder\n\t\tpostURI     = makeThreadURI(thread)\n\t\tsummary     = summaryOf(thread.Title, 80)\n\t\tcreatorLink = userLink(thread.Creator)\n\t\tdate        = thread.CreatedAt.Format(dateFormat)\n\t)\n\n\tb.WriteString(md.Bold(\"≡ \"+md.Link(summary, postURI)) + \"  \\n\")\n\tb.WriteString(\"Created by \" + creatorLink + \" on \" + date + \"  \\n\")\n\n\tstatus := []string{\n\t\tstrconv.Itoa(thread.Replies.Size()) + \" replies\",\n\t\tstrconv.Itoa(thread.Reposts.Size()) + \" reposts\",\n\t}\n\tb.WriteString(md.Bold(strings.Join(status, \" • \")) + \"\\n\")\n\treturn b.String()\n}\n"},{"name":"replies_storage.gno","body":"package boards2\n\nimport (\n\t\"errors\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/nt/avl\"\n)\n\n// NewReplyStorage creates a new storage for thread replies.\n// This is a customized post storage that also keeps a flat index with all replies\n// that exists within a thread, which allows to get any reply from their thread.\nfunc NewReplyStorage() boards.PostStorage {\n\treturn \u0026replyStorage{\n\t\tPostStorage: boards.NewPostStorage(),\n\t\tall:         avl.NewTree(),\n\t}\n}\n\ntype replyStorage struct {\n\tboards.PostStorage\n\n\t// Flat index to store all replies that exists within a thread\n\tall *avl.Tree // string(Post.ID) -\u003e *Post\n}\n\n// Get retruns a reply that matches an ID.\n// Reply can be a direct thread reply or a sub-reply.\nfunc (s replyStorage) Get(id boards.ID) (*boards.Post, bool) {\n\tpost, found := s.PostStorage.Get(id)\n\tif found {\n\t\treturn post, true\n\t}\n\n\tk := makeReplyKey(id)\n\tv, found := s.all.Get(k)\n\tif !found {\n\t\treturn nil, false\n\t}\n\treturn v.(*boards.Post), true\n}\n\n// Remove removes a post from the storage.\nfunc (s *replyStorage) Remove(id boards.ID) (*boards.Post, bool) {\n\tpost, removed := s.PostStorage.Remove(id)\n\tif removed {\n\t\treturn post, true\n\t}\n\n\t// When reply is not a direct thread reply try to remove it from the flat index\n\tk := makeReplyKey(id)\n\tv, removed := s.all.Remove(k)\n\tif !removed {\n\t\treturn nil, false\n\t}\n\treturn v.(*boards.Post), true\n}\n\n// Add adds a post in the storage.\n// It updates existing posts when storage contains one with the same ID.\nfunc (s *replyStorage) Add(p *boards.Post) error {\n\tif p == nil {\n\t\treturn errors.New(\"saving nil replies is not allowed\")\n\t}\n\n\t// If post is a direct thread child add it to the post storage\n\tif p.ParentID == p.ThreadID {\n\t\treturn s.PostStorage.Add(p)\n\t}\n\n\t// Otherwise when post is a sub-reply add it to the flat index\n\tk := makeReplyKey(p.ID)\n\ts.all.Set(k, p)\n\treturn nil\n}\n\n// Size returns the number of direct replies in the storage.\n// It doesn't includes sub-replies.\nfunc (s replyStorage) Size() int {\n\treturn s.PostStorage.Size()\n}\n\n// Iterate iterates direct replies.\n// To reverse iterate posts use a negative count.\n// If the callback returns true, the iteration is stopped.\n// Sub-replies are NOT iterated.\nfunc (s replyStorage) Iterate(start, count int, fn boards.PostIterFn) bool {\n\treturn s.PostStorage.Iterate(start, count, fn)\n}\n\nfunc makeReplyKey(id boards.ID) string {\n\treturn id.Key()\n}\n"},{"name":"replies_storage_test.gno","body":"package boards2_test\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/nt/urequire\"\n\n\tboards2 \"gno.land/r/boards000/v1rc1\"\n)\n\nfunc TestReplyStorageGet(t *testing.T) {\n\tcreator := address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\ttests := []struct {\n\t\tname   string\n\t\tsetup  func(thread *boards.Post) boards.PostStorage\n\t\tpostID boards.ID\n\t\tfound  bool\n\t}{\n\t\t{\n\t\t\tname: \"single reply\",\n\t\t\tsetup: func(t *boards.Post) boards.PostStorage {\n\t\t\t\ts := boards2.NewReplyStorage()\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"A\")) // ID=2\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tpostID: 2,\n\t\t\tfound:  true,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple replies\",\n\t\t\tsetup: func(t *boards.Post) boards.PostStorage {\n\t\t\t\ts := boards2.NewReplyStorage()\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"A\"))\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"B\")) // ID=3\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"C\"))\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tpostID: 3,\n\t\t\tfound:  true,\n\t\t},\n\t\t{\n\t\t\tname: \"single sub reply\",\n\t\t\tsetup: func(t *boards.Post) boards.PostStorage {\n\t\t\t\tparent := boards.MustNewReply(t, creator, \"A\")\n\t\t\t\ts := boards2.NewReplyStorage()\n\t\t\t\ts.Add(parent)\n\t\t\t\ts.Add(boards.MustNewReply(parent, creator, \"B\")) // ID=3\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tpostID: 3,\n\t\t\tfound:  true,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple sub replies\",\n\t\t\tsetup: func(t *boards.Post) boards.PostStorage {\n\t\t\t\tparent := boards.MustNewReply(t, creator, \"A\")\n\t\t\t\ts := boards2.NewReplyStorage()\n\t\t\t\ts.Add(parent)\n\t\t\t\ts.Add(boards.MustNewReply(parent, creator, \"C\"))\n\t\t\t\ts.Add(boards.MustNewReply(parent, creator, \"D\")) // ID=4\n\t\t\t\ts.Add(boards.MustNewReply(parent, creator, \"E\"))\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tpostID: 4,\n\t\t\tfound:  true,\n\t\t},\n\t\t{\n\t\t\tname: \"not found\",\n\t\t\tsetup: func(*boards.Post) boards.PostStorage {\n\t\t\t\treturn boards2.NewReplyStorage()\n\t\t\t},\n\t\t\tpostID: 404,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tboard := boards.New(1)\n\t\t\tthread := boards.MustNewThread(board, creator, \"Title\", \"Body\")\n\t\t\ts := tt.setup(thread)\n\n\t\t\treply, found := s.Get(tt.postID)\n\n\t\t\tif !tt.found {\n\t\t\t\turequire.False(t, found, \"expect reply not to be found\")\n\t\t\t\turequire.True(t, reply == nil, \"expect reply to be nil\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.True(t, found, \"expect reply to be found\")\n\t\t\turequire.False(t, reply == nil, \"expect reply not to be nil\")\n\t\t\turequire.Equal(t, tt.postID.String(), reply.ID.String(), \"expect reply ID to match\")\n\t\t})\n\t}\n}\n\nfunc TestReplyStorageRemove(t *testing.T) {\n\tcreator := address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\ttests := []struct {\n\t\tname    string\n\t\tsetup   func(thread *boards.Post) boards.PostStorage\n\t\tpostID  boards.ID\n\t\tremoved bool\n\t}{\n\t\t{\n\t\t\tname: \"reply\",\n\t\t\tsetup: func(t *boards.Post) boards.PostStorage {\n\t\t\t\ts := boards2.NewReplyStorage()\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"A\"))\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"B\")) // ID=3\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tpostID:  3,\n\t\t\tremoved: true,\n\t\t},\n\t\t{\n\t\t\tname: \"sub reply\",\n\t\t\tsetup: func(t *boards.Post) boards.PostStorage {\n\t\t\t\tparent := boards.MustNewReply(t, creator, \"A\")\n\t\t\t\ts := boards2.NewReplyStorage()\n\t\t\t\ts.Add(parent)\n\t\t\t\ts.Add(boards.MustNewReply(parent, creator, \"A\"))\n\t\t\t\ts.Add(boards.MustNewReply(parent, creator, \"B\")) // ID=4\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tpostID:  4,\n\t\t\tremoved: true,\n\t\t},\n\t\t{\n\t\t\tname: \"not found\",\n\t\t\tsetup: func(*boards.Post) boards.PostStorage {\n\t\t\t\treturn boards2.NewReplyStorage()\n\t\t\t},\n\t\t\tpostID: 404,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tboard := boards.New(1)\n\t\t\tthread := boards.MustNewThread(board, creator, \"Title\", \"Body\")\n\t\t\ts := tt.setup(thread)\n\n\t\t\treply, removed := s.Remove(tt.postID)\n\n\t\t\tif !tt.removed {\n\t\t\t\turequire.False(t, removed, \"expect reply not to be removed\")\n\t\t\t\turequire.True(t, reply == nil, \"expect reply to be nil\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.True(t, removed, \"expect reply to be removed\")\n\t\t\turequire.False(t, reply == nil, \"expect reply not to be nil\")\n\t\t\turequire.Equal(t, tt.postID.String(), reply.ID.String(), \"expect reply ID to match\")\n\n\t\t\t_, found := s.Get(tt.postID)\n\t\t\turequire.False(t, found, \"expect reply not to be found\")\n\t\t})\n\t}\n}\n\nfunc TestReplyStorageAdd(t *testing.T) {\n\ttests := []struct {\n\t\tname   string\n\t\tpost   *boards.Post\n\t\terrMsg string\n\t}{\n\t\t{\n\t\t\tname: \"reply\",\n\t\t\tpost: \u0026boards.Post{ID: 2, ParentID: 1, ThreadID: 1},\n\t\t},\n\t\t{\n\t\t\tname: \"sub reply\",\n\t\t\tpost: \u0026boards.Post{ID: 3, ParentID: 2, ThreadID: 1},\n\t\t},\n\t\t{\n\t\t\tname:   \"nil reply\",\n\t\t\tpost:   nil,\n\t\t\terrMsg: \"saving nil replies is not allowed\",\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\ts := boards2.NewReplyStorage()\n\n\t\t\terr := s.Add(tt.post)\n\n\t\t\tif tt.errMsg != \"\" {\n\t\t\t\turequire.Error(t, err, \"expect an error\")\n\t\t\t\turequire.ErrorContains(t, err, tt.errMsg, \"expect error to match\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\turequire.NoError(t, err, \"expect no error\")\n\n\t\t\t_, found := s.Get(tt.post.ID)\n\t\t\turequire.True(t, found, \"expect reply to be found\")\n\t\t})\n\t}\n}\n\nfunc TestReplyStorageSize(t *testing.T) {\n\tcreator := address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\ttests := []struct {\n\t\tname  string\n\t\tsetup func(thread *boards.Post) boards.PostStorage\n\t\tsize  int\n\t}{\n\t\t{\n\t\t\tname: \"empty\",\n\t\t\tsetup: func(*boards.Post) boards.PostStorage {\n\t\t\t\treturn boards2.NewReplyStorage()\n\t\t\t},\n\t\t\tsize: 0,\n\t\t},\n\t\t{\n\t\t\tname: \"one reply\",\n\t\t\tsetup: func(t *boards.Post) boards.PostStorage {\n\t\t\t\ts := boards2.NewReplyStorage()\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"A\"))\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple replies\",\n\t\t\tsetup: func(t *boards.Post) boards.PostStorage {\n\t\t\t\ts := boards2.NewReplyStorage()\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"A\"))\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"B\"))\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 2,\n\t\t},\n\t\t{\n\t\t\tname: \"multiple replies and sub reply\",\n\t\t\tsetup: func(t *boards.Post) boards.PostStorage {\n\t\t\t\tparent := boards.MustNewReply(t, creator, \"A\")\n\t\t\t\ts := boards2.NewReplyStorage()\n\t\t\t\ts.Add(parent)\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"B\"))\n\t\t\t\ts.Add(boards.MustNewReply(parent, creator, \"A2\"))\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tsize: 2, // Sub-replies are not counted\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tboard := boards.New(1)\n\t\t\tthread := boards.MustNewThread(board, creator, \"Title\", \"Body\")\n\t\t\ts := tt.setup(thread)\n\n\t\t\turequire.Equal(t, tt.size, s.Size())\n\t\t})\n\t}\n}\n\nfunc TestReplyStorageIterate(t *testing.T) {\n\tcreator := address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\ttests := []struct {\n\t\tname    string\n\t\tsetup   func(thread *boards.Post) boards.PostStorage\n\t\treverse bool\n\t\tids     []boards.ID\n\t}{\n\t\t{\n\t\t\tname: \"default\",\n\t\t\tsetup: func(t *boards.Post) boards.PostStorage {\n\t\t\t\tparent := boards.MustNewReply(t, creator, \"A\")\n\t\t\t\ts := boards2.NewReplyStorage()\n\t\t\t\ts.Add(parent)\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"B\"))\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"C\"))\n\t\t\t\ts.Add(boards.MustNewReply(parent, creator, \"A2\")) // Sub-replies are ignored\n\t\t\t\treturn s\n\t\t\t},\n\t\t\tids: []boards.ID{2, 3, 4},\n\t\t},\n\t\t{\n\t\t\tname: \"reverse\",\n\t\t\tsetup: func(t *boards.Post) boards.PostStorage {\n\t\t\t\tparent := boards.MustNewReply(t, creator, \"A\")\n\t\t\t\ts := boards2.NewReplyStorage()\n\t\t\t\ts.Add(parent)\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"B\"))\n\t\t\t\ts.Add(boards.MustNewReply(t, creator, \"C\"))\n\t\t\t\ts.Add(boards.MustNewReply(parent, creator, \"A2\")) // Sub-replies are ignored\n\t\t\t\treturn s\n\t\t\t},\n\t\t\treverse: true,\n\t\t\tids:     []boards.ID{4, 3, 2},\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tboard := boards.New(1)\n\t\t\tthread := boards.MustNewThread(board, creator, \"Title\", \"Body\")\n\t\t\ts := tt.setup(thread)\n\n\t\t\tcount := s.Size()\n\t\t\tif tt.reverse {\n\t\t\t\tcount = -count\n\t\t\t}\n\n\t\t\tvar i int\n\t\t\ts.Iterate(0, count, func(p *boards.Post) bool {\n\t\t\t\turequire.True(t, tt.ids[i] == p.ID, \"expect post ID to match\")\n\n\t\t\t\ti++\n\t\t\t\treturn false\n\t\t\t})\n\t\t})\n\t}\n}\n"},{"name":"uris_board.gno","body":"package boards2\n\nimport (\n\t\"net/url\"\n\t\"strings\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nfunc makeBoardURI(b *boards.Board) string {\n\tpath := strings.TrimPrefix(string(gRealmLink), \"gno.land\")\n\treturn path + \":\" + url.PathEscape(b.Name)\n}\n\nfunc makeFreezeBoardURI(b *boards.Board) string {\n\treturn gRealmLink.Call(\n\t\t\"FreezeBoard\",\n\t\t\"boardID\", b.ID.String(),\n\t)\n}\n\nfunc makeUnfreezeBoardURI(b *boards.Board) string {\n\treturn gRealmLink.Call(\n\t\t\"UnfreezeBoard\",\n\t\t\"boardID\", b.ID.String(),\n\t\t\"threadID\", \"\",\n\t\t\"replyID\", \"\",\n\t)\n}\n\nfunc makeInviteMemberURI(b *boards.Board) string {\n\treturn gRealmLink.Call(\n\t\t\"InviteMember\",\n\t\t\"boardID\", b.ID.String(),\n\t\t\"user\", \"\",\n\t\t\"role\", \"\",\n\t)\n}\n\nfunc makeCreateThreadURI(b *boards.Board) string {\n\treturn gRealmLink.Call(\n\t\t\"CreateThread\",\n\t\t\"boardID\", b.ID.String(),\n\t\t\"title\", \"\",\n\t\t\"body\", \"\",\n\t)\n}\n\nfunc makeRequestInviteURI(b *boards.Board) string {\n\treturn gRealmLink.Call(\n\t\t\"RequestInvite\",\n\t\t\"boardID\", b.ID.String(),\n\t)\n}\n"},{"name":"uris_post.gno","body":"package boards2\n\nimport (\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n)\n\nfunc makeThreadURI(p *boards.Post) string {\n\tif boards.IsThread(p) {\n\t\treturn makeBoardURI(p.Board) + \"/\" + p.ID.String()\n\t}\n\n\t// When post is a reply use the parent thread ID\n\treturn makeBoardURI(p.Board) + \"/\" + p.ThreadID.String()\n}\n\nfunc makeReplyURI(p *boards.Post) string {\n\treturn makeBoardURI(p.Board) + \"/\" + p.ThreadID.String() + \"/\" + p.ID.String()\n}\n\nfunc makeCreateReplyURI(p *boards.Post) string {\n\tif boards.IsThread(p) {\n\t\treturn gRealmLink.Call(\n\t\t\t\"CreateReply\",\n\t\t\t\"boardID\", p.Board.ID.String(),\n\t\t\t\"threadID\", p.ThreadID.String(),\n\t\t\t\"replyID\", \"0\",\n\t\t\t\"body\", \"\",\n\t\t)\n\t}\n\treturn gRealmLink.Call(\n\t\t\"CreateReply\",\n\t\t\"boardID\", p.Board.ID.String(),\n\t\t\"threadID\", p.ThreadID.String(),\n\t\t\"replyID\", p.ID.String(),\n\t\t\"body\", \"\",\n\t)\n}\n\nfunc makeCreateRepostURI(p *boards.Post) string {\n\treturn gRealmLink.Call(\n\t\t\"CreateRepost\",\n\t\t\"boardID\", p.Board.ID.String(),\n\t\t\"threadID\", p.ID.String(),\n\t\t\"destinationBoardID\", \"\",\n\t\t\"title\", \"\",\n\t\t\"body\", \"\",\n\t)\n}\n\nfunc makeDeletePostURI(p *boards.Post) string {\n\tif boards.IsThread(p) {\n\t\treturn gRealmLink.Call(\n\t\t\t\"DeleteThread\",\n\t\t\t\"boardID\", p.Board.ID.String(),\n\t\t\t\"threadID\", p.ThreadID.String(),\n\t\t)\n\t}\n\treturn gRealmLink.Call(\n\t\t\"DeleteReply\",\n\t\t\"boardID\", p.Board.ID.String(),\n\t\t\"threadID\", p.ThreadID.String(),\n\t\t\"replyID\", p.ID.String(),\n\t)\n}\n\nfunc makeEditPostURI(p *boards.Post) string {\n\tif boards.IsThread(p) {\n\t\treturn gRealmLink.Call(\n\t\t\t\"EditThread\",\n\t\t\t\"boardID\", p.Board.ID.String(),\n\t\t\t\"threadID\", p.ThreadID.String(),\n\t\t\t\"title\", p.Title,\n\t\t\t\"body\", p.Body,\n\t\t)\n\t}\n\n\treturn gRealmLink.Call(\n\t\t\"EditReply\",\n\t\t\"boardID\", p.Board.ID.String(),\n\t\t\"threadID\", p.ThreadID.String(),\n\t\t\"replyID\", p.ID.String(),\n\t\t\"body\", p.Body,\n\t)\n}\n\nfunc makeFlagURI(p *boards.Post) string {\n\tif boards.IsThread(p) {\n\t\treturn gRealmLink.Call(\n\t\t\t\"FlagThread\",\n\t\t\t\"boardID\", p.Board.ID.String(),\n\t\t\t\"threadID\", p.ThreadID.String(),\n\t\t\t\"reason\", \"\",\n\t\t)\n\t}\n\n\treturn gRealmLink.Call(\n\t\t\"FlagReply\",\n\t\t\"boardID\", p.Board.ID.String(),\n\t\t\"threadID\", p.ThreadID.String(),\n\t\t\"replyID\", p.ID.String(),\n\t\t\"reason\", \"\",\n\t)\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"100000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"2jL+Bfa6xOp/4YcGkqnNCIl2QNhCwAg1cpYlqbhRW0S+aDafBetAjfb/zMWxtc067a3WRG/Wth4RC8fCsZjfBw=="}],"memo":""},"metadata":{"timestamp":"1761558244"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq","send":"","max_deposit":"","pkg_path":"gno.land/r/boards000/v1rc1","func":"InviteMember","args":["0","g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","owner"]}],"fee":{"gas_wanted":"50000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"vIVGTRxmxNgLkHIHdBZvqiET+tY7vzH2cqjGe0na1RhObhTkBw+eRwiY0JtX7ZMQzAnKFFCRYWvt04MFEU+xBA=="}],"memo":""},"metadata":{"timestamp":"1761558294"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq","send":"","max_deposit":"","pkg_path":"gno.land/r/boards000/v1rc1","func":"InviteMember","args":["0","g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","owner"]}],"fee":{"gas_wanted":"50000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"1mLJO+W0ywAhca3LkyouCNUDZXNlpj7oYcQOJhIDQYJS5v6YWrkpbjkYdWmrM4aUCRWCrMfpFuZYnGb8IpZlCQ=="}],"memo":""},"metadata":{"timestamp":"1761558314"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq","send":"","max_deposit":"","pkg_path":"gno.land/r/boards000/v1rc1","func":"RemoveMember","args":["0","g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq"]}],"fee":{"gas_wanted":"50000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"fRcm1sgK1hxjs7OOPjvIVFdxWDHRAWI1nyXtCyV9ibyjBY2zGbHhkSF+rb4v2FwngXZItxOwKJbIbK9VyzZSDQ=="}],"memo":""},"metadata":{"timestamp":"1761558359"}}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq","package":{"name":"permissions","path":"gno.land/r/devx000/wip/boards/permissions","files":[{"name":"gnomod.toml","body":"module = \"gno.land/r/devx000/wip/boards/permissions\"\ngno = \"0.9\"\n\n[addpkg]\n  creator = \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\"\n"},{"name":"permissions.gno","body":"package permissions\n\nimport (\n\t\"chain\"\n\t\"chain/runtime\"\n\t\"errors\"\n\t\"strings\"\n\t\"time\"\n\n\tboards \"gno.land/p/devx000/wip/gnoland/boards\"\n\t\"gno.land/p/moul/ulist\"\n\t\"gno.land/p/nt/avl\"\n\n\tboards2 \"gno.land/r/boards000/v1rc1\"\n)\n\n// TODO: Figure out how to delete permissions when board is deleted\n\nvar (\n\tpermissions       = ulist.New()   // []*Permissions\n\tpermissionsByPath = avl.NewTree() // string(realm:board) -\u003e *Permissions\n)\n\n// New creates a new custom permissions for an open board.\n// Path is the full Gno.Land realm path to the board including the render path, for example:\n//\n//\tgno.land/r/gnoland/boards/v1:MyBoard\nfunc New(path string) *Permissions {\n\tpath = strings.TrimSpace(path)\n\tif path == \"\" {\n\t\tpanic(\"realm path is required\")\n\t}\n\n\trealmPath, renderPath, err := splitRealmPath(path)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\towner := runtime.OriginCaller()\n\tp := \u0026Permissions{\n\t\topen:       true, // TODO: Allow changing open status (threads and/or replies)\n\t\trealmPath:  realmPath,\n\t\trenderPath: renderPath,\n\t\tboardsAddr: chain.PackageAddress(realmPath),\n\t\tbasic:      createBasicPermissions(owner),\n\t\tcreatedBy:  owner,\n\t\tcreatedAt:  time.Now(),\n\t}\n\n\tpermissions.Append(p)\n\tpermissionsByPath.Set(path, p)\n\n\tp.basic.ValidateFunc(boards2.PermissionBoardRename, p.validateBoardRename)\n\tp.basic.ValidateFunc(boards2.PermissionMemberInvite, p.validateMemberInvite)\n\tp.basic.ValidateFunc(boards2.PermissionRoleChange, p.validateRoleChange)\n\tp.basic.ValidateFunc(boards2.PermissionThreadCreate, p.validateThreadCreate)\n\tp.basic.ValidateFunc(boards2.PermissionReplyCreate, p.validateReplyCreate)\n\treturn p\n}\n\n// Permissions defines a type for custom permissions that support open boards.\ntype Permissions struct {\n\topen       bool\n\tboardsAddr address\n\trealmPath  string\n\trenderPath string\n\tbasic      *boards2.BasicPermissions\n\tcreatedBy  address\n\tcreatedAt  time.Time\n}\n\n// HasRole checks if a user has a specific role assigned.\nfunc (p Permissions) HasRole(user address, r boards.Role) bool {\n\treturn p.basic.HasRole(user, r)\n}\n\n// HasPermission checks if a user has a specific permission.\nfunc (p Permissions) HasPermission(user address, perm boards.Permission) bool {\n\treturn p.basic.HasPermission(user, perm)\n}\n\n// WithPermission calls a callback when a user has a specific permission.\n// It panics on error.\nfunc (p *Permissions) WithPermission(_ realm, user address, perm boards.Permission, args boards.Args, fn func(realm)) {\n\tp.AssertPreviousRealmIsBoards()\n\n\tp.basic.WithPermission(cross, user, perm, args, fn)\n}\n\n// SetUserRoles adds a new user when it doesn't exist and sets its roles.\n// Method can also be called to change the roles of an existing user.\n// It panics on error.\nfunc (p *Permissions) SetUserRoles(_ realm, user address, roles ...boards.Role) {\n\tp.AssertPreviousRealmIsBoards()\n\n\tp.basic.SetUserRoles(cross, user, roles...)\n}\n\n// RemoveUser removes a user from the permissioner.\n// It panics on error.\nfunc (p *Permissions) RemoveUser(_ realm, user address) (removed bool) {\n\tp.AssertPreviousRealmIsBoards()\n\n\treturn p.basic.RemoveUser(cross, user)\n}\n\n// HasUser checks if a user exists.\nfunc (p Permissions) HasUser(user address) bool {\n\treturn p.basic.HasUser(user)\n}\n\n// UsersCount returns the total number of users the permissioner contains.\nfunc (p Permissions) UsersCount() int {\n\treturn p.basic.UsersCount()\n}\n\n// IterateUsers iterates permissions' users.\nfunc (p Permissions) IterateUsers(start, count int, fn boards.UsersIterFn) bool {\n\treturn p.basic.IterateUsers(start, count, fn)\n}\n\n// AssertPreviousRealmIsBoards asserts that previous realm is the boards realm.\nfunc (p Permissions) AssertPreviousRealmIsBoards() {\n\tif runtime.PreviousRealm().Address() != p.boardsAddr {\n\t\tpanic(\"unauthorized\")\n\t}\n}\n\nfunc createBasicPermissions(owner address) *boards2.BasicPermissions {\n\tperms := boards2.NewBasicPermissions()\n\tperms.SetSuperRole(boards2.RoleOwner)\n\tperms.SetPublicPermissions(\n\t\tboards2.PermissionThreadCreate,\n\t\tboards2.PermissionReplyCreate,\n\t)\n\tperms.AddRole(\n\t\tboards2.RoleAdmin,\n\t\tboards2.PermissionBoardRename,\n\t\tboards2.PermissionBoardFlaggingUpdate,\n\t\tboards2.PermissionMemberInvite,\n\t\tboards2.PermissionMemberInviteRevoke,\n\t\tboards2.PermissionMemberRemove,\n\t\tboards2.PermissionThreadCreate,\n\t\tboards2.PermissionThreadEdit,\n\t\tboards2.PermissionThreadDelete,\n\t\tboards2.PermissionThreadRepost,\n\t\tboards2.PermissionThreadFlag,\n\t\tboards2.PermissionThreadFreeze,\n\t\tboards2.PermissionReplyCreate,\n\t\tboards2.PermissionReplyDelete,\n\t\tboards2.PermissionReplyFlag,\n\t\tboards2.PermissionRoleChange,\n\t\tboards2.PermissionUserBan,\n\t\tboards2.PermissionUserUnban,\n\t)\n\tperms.AddRole(\n\t\tboards2.RoleModerator,\n\t\tboards2.PermissionThreadCreate,\n\t\tboards2.PermissionThreadEdit,\n\t\tboards2.PermissionThreadRepost,\n\t\tboards2.PermissionThreadFlag,\n\t\tboards2.PermissionReplyCreate,\n\t\tboards2.PermissionReplyFlag,\n\t\tboards2.PermissionUserBan,\n\t\tboards2.PermissionUserUnban,\n\t)\n\tperms.AddRole(\n\t\tboards2.RoleGuest,\n\t\tboards2.PermissionThreadCreate,\n\t\tboards2.PermissionThreadRepost,\n\t\tboards2.PermissionReplyCreate,\n\t)\n\tperms.SetUserRoles(cross, owner, boards2.RoleOwner)\n\treturn perms\n}\n\nfunc splitRealmPath(path string) (realmPath, renderPath string, err error) {\n\tpath, _ = strings.CutSuffix(path, \"?\")\n\tparts := strings.SplitN(path, \":\", 2)\n\trealmPath = parts[0]\n\tif !strings.HasPrefix(realmPath, \"gno.land/r/\") {\n\t\treturn \"\", \"\", errors.New(`invalid realm path, it must start with \"gno.land/r/\"`)\n\t}\n\n\tif len(parts) == 2 {\n\t\trenderPath = parts[1]\n\t}\n\treturn\n}\n"},{"name":"permissions_validators.gno","body":"package permissions\n\nimport (\n\t\"errors\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\n\tboards2 \"gno.land/r/boards000/v1rc1\"\n\t\"gno.land/r/sys/users\"\n)\n\n// validateBoardCreate validates PermissionBoardCreate.\n//\n// Expected `args` values:\n// 1. Caller address\n// 2. Board name\n// 3. Board ID\n// 4. Is board listed\nfunc (Permissions) validateBoardCreate(_ boards.Permissions, args boards.Args) error {\n\tcaller, ok := args[0].(address)\n\tif !ok {\n\t\treturn errors.New(\"expected a valid caller address\")\n\t}\n\n\tname, ok := args[1].(string)\n\tif !ok {\n\t\treturn errors.New(\"expected board name to be a string\")\n\t}\n\n\tif err := checkBoardNameIsNotAddress(name); err != nil {\n\t\treturn err\n\t}\n\n\tif err := checkBoardNameBelongsToAddress(caller, name); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\n// validateBoardRename validates PermissionBoardRename.\n//\n// Expected `args` values:\n// 1. Caller address\n// 2. Board ID\n// 3. Current board name\n// 4. New board name\nfunc (Permissions) validateBoardRename(_ boards.Permissions, args boards.Args) error {\n\tcaller, ok := args[0].(address)\n\tif !ok {\n\t\treturn errors.New(\"expected a valid caller address\")\n\t}\n\n\tnewName, ok := args[3].(string)\n\tif !ok {\n\t\treturn errors.New(\"expected new board name to be a string\")\n\t}\n\n\tif err := checkBoardNameIsNotAddress(newName); err != nil {\n\t\treturn err\n\t}\n\n\tif err := checkBoardNameBelongsToAddress(caller, newName); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\n// validateMemberInvite validates PermissionMemberInvite.\n//\n// Expected `args` values:\n// 1. Caller address\n// 2. Board ID\n// 3. Invites\nfunc (Permissions) validateMemberInvite(perms boards.Permissions, args boards.Args) error {\n\tcaller, ok := args[0].(address)\n\tif !ok {\n\t\treturn errors.New(\"expected a valid caller address\")\n\t}\n\n\tinvites, ok := args[2].([]boards2.Invite)\n\tif !ok {\n\t\treturn errors.New(\"expected valid user invites\")\n\t}\n\n\t// Make sure that only owners invite other owners\n\tcallerIsOwner := perms.HasRole(caller, boards2.RoleOwner)\n\tfor _, v := range invites {\n\t\tif v.Role == boards2.RoleOwner \u0026\u0026 !callerIsOwner {\n\t\t\treturn errors.New(\"only owners are allowed to invite other owners\")\n\t\t}\n\t}\n\treturn nil\n}\n\n// validateRoleChange validates PermissionRoleChange.\n//\n// Expected `args` values:\n// 1. Caller address\n// 2. Board ID\n// 3. Member address\n// 4. Role\nfunc (Permissions) validateRoleChange(perms boards.Permissions, args boards.Args) error {\n\tcaller, ok := args[0].(address)\n\tif !ok {\n\t\treturn errors.New(\"expected a valid caller address\")\n\t}\n\n\t// Owners and Admins can change roles.\n\t// Admins should not be able to assign or remove the Owner role from members.\n\tif perms.HasRole(caller, boards2.RoleAdmin) {\n\t\trole, ok := args[3].(boards.Role)\n\t\tif !ok {\n\t\t\treturn errors.New(\"expected a valid member role\")\n\t\t}\n\n\t\tif role == boards2.RoleOwner {\n\t\t\treturn errors.New(\"admins are not allowed to promote members to Owner\")\n\t\t} else {\n\t\t\tmember, ok := args[2].(address)\n\t\t\tif !ok {\n\t\t\t\treturn errors.New(\"expected a valid member address\")\n\t\t\t}\n\n\t\t\tif perms.HasRole(member, boards2.RoleOwner) {\n\t\t\t\treturn errors.New(\"admins are not allowed to remove the Owner role\")\n\t\t\t}\n\t\t}\n\t}\n\treturn nil\n}\n\n// validateReplyCreate validates PermissionReplyCreate.\n//\n// Expected `args` values:\n// 1. Caller address\n// 2. Board ID\n// 3. Thread ID\n// 4. Parent ID\n// 5. Reply ID\n// 6. Body\nfunc (p Permissions) validateReplyCreate(perms boards.Permissions, args boards.Args) error {\n\t// Only open boards require specific conditions to allow creating a reply\n\tif !p.open {\n\t\treturn nil\n\t}\n\n\tcaller, ok := args[0].(address)\n\tif !ok {\n\t\treturn errors.New(\"expected a valid caller address\")\n\t}\n\n\tif users.ResolveAddress(caller) == nil {\n\t\treturn errors.New(\"a registered username is required to comment on open boards\")\n\t}\n\treturn nil\n}\n\n// validateThreadCreate validates PermissionThreadCreate.\n//\n// Expected `args` values:\n// 1. Caller address\n// 2. Board ID\n// 3. Thread ID\n// 4. Title\n// 5. Body\nfunc (p Permissions) validateThreadCreate(perms boards.Permissions, args boards.Args) error {\n\t// Only open boards require specific conditions to allow creating a thread\n\tif !p.open {\n\t\treturn nil\n\t}\n\n\tcaller, ok := args[0].(address)\n\tif !ok {\n\t\treturn errors.New(\"expected a valid caller address\")\n\t}\n\n\tif users.ResolveAddress(caller) == nil {\n\t\treturn errors.New(\"a registered username is required to create threads on open boards\")\n\t}\n\treturn nil\n}\n\nfunc checkBoardNameIsNotAddress(s string) error {\n\tif address(s).IsValid() {\n\t\treturn errors.New(\"addresses are not allowed as board name\")\n\t}\n\treturn nil\n}\n\nfunc checkBoardNameBelongsToAddress(owner address, name string) error {\n\t// When the board name is the name of a registered user\n\t// check that caller is the owner of the name.\n\tuser, _ := users.ResolveName(name)\n\tif user != nil \u0026\u0026 user.Addr() != owner {\n\t\treturn errors.New(\"board name is a user name registered to a different user\")\n\t}\n\treturn nil\n}\n"},{"name":"public.gno","body":"package permissions\n\nimport (\n\t\"strings\"\n\t\"time\"\n\n\t\"gno.land/p/moul/md\"\n\t\"gno.land/p/moul/mdtable\"\n\n\t\"gno.land/r/sys/users\"\n)\n\nfunc Render(string) string {\n\ttable := mdtable.Table{Headers: []string{\"Boards\", \"Assigned by\", \"Created on\"}}\n\n\t// TODO: Add pagination support\n\t// TODO: Add search by path support\n\t// TODO: Add sorting support\n\n\tpermissions.Iterator(0, permissions.Size(), func(_ int, v any) bool {\n\t\tperm := v.(*Permissions)\n\t\ttable.Append([]string{\n\t\t\tcreateBoardLink(perm),\n\t\t\tcreateUserLink(perm.createdBy),\n\t\t\tperm.createdAt.UTC().Format(time.RFC1123),\n\t\t})\n\t\treturn false\n\t})\n\n\tvar b strings.Builder\n\tb.WriteString(\"# Open Boards Permissions\\n\")\n\tb.WriteString(table.String())\n\treturn b.String()\n}\n\nfunc createBoardLink(p *Permissions) string {\n\tpath := p.realmPath\n\tif p.renderPath != \"\" {\n\t\tpath = path + \":\" + p.renderPath\n\t}\n\n\treturn md.Link(path, strings.TrimPrefix(path, \"gno.land\"))\n}\n\nfunc createUserLink(user address) string {\n\tif u := users.ResolveAddress(user); u != nil {\n\t\treturn md.UserLink(u.Name())\n\t}\n\treturn md.UserLink(user.String())\n}\n"},{"name":"z_0_a_filetest.gno","body":"// Test creating a new thread as a non member user\npackage main\n\n// SEND: 1000000ugnot\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\n\tpermissions \"gno.land/r/devx000/wip/boards/permissions\"\n\tboards2 \"gno.land/r/boards000/v1rc1\"\n\tusers \"gno.land/r/gnoland/users/v1\"\n)\n\nconst (\n\towner     address = \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\" // @devx\n\tuser      address = \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\" // @test2\n\tboardPath         = \"gno.land/r/boards000/v1rc1:test123\"\n\ttitle             = \"Test Thread\"\n\tbody              = \"Test body\"\n)\n\nvar bid boards.ID // Operate on board DAO\n\nfunc init() {\n\ttesting.SetRealm(testing.NewUserRealm(owner))\n\tbid = boards2.CreateBoard(cross, \"test123\", false)\n\n\t// Assign custom permissions to the board\n\tboards2.SetPermissions(cross, bid, permissions.New(boardPath))\n\n\t// Register a username which is required to be able to add a reply\n\ttesting.SetRealm(testing.NewUserRealm(user))\n\tusers.Register(cross, \"user123\")\n}\n\nfunc main() {\n\ttesting.SetRealm(testing.NewUserRealm(user))\n\n\t// Non members should be able to create threads\n\ttid := boards2.CreateThread(cross, bid, title, body)\n\n\t// Ensure that returned ID is right\n\tprintln(tid == 1)\n\n\t// Render content must contains thread's title and body\n\tcontent := boards2.Render(\"test123/1\")\n\tprintln(strings.HasPrefix(content, \"# \"+title))\n\tprintln(strings.Contains(content, body))\n}\n\n// Output:\n// true\n// true\n// true\n"},{"name":"z_0_b_filetest.gno","body":"// Test creating a new thread as a non member user that has no username registered\npackage main\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\n\tpermissions \"gno.land/r/devx000/wip/boards/permissions\"\n\tboards2 \"gno.land/r/boards000/v1rc1\"\n)\n\nconst (\n\towner     address = \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\" // @devx\n\tuser      address = \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\" // @test2\n\tboardPath         = \"gno.land/r/boards000/v1rc1:1\"\n)\n\nvar bid boards.ID // Operate on board DAO\n\nfunc init() {\n\ttesting.SetRealm(testing.NewUserRealm(owner))\n\tbid = boards2.CreateBoard(cross, \"test123\", false)\n\n\t// Assign custom permissions to the board\n\tboards2.SetPermissions(cross, bid, permissions.New(boardPath))\n}\n\nfunc main() {\n\ttesting.SetRealm(testing.NewUserRealm(user))\n\n\t// Non members should be able to create threads only if they have a registered user\n\tboards2.CreateThread(cross, bid, \"Title\", \"Body\")\n}\n\n// Error:\n// a registered username is required to create threads on open boards\n"},{"name":"z_1_a_filetest.gno","body":"// Test deleting a thread as the non member user that created it\npackage main\n\n// SEND: 1000000ugnot\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\n\tpermissions \"gno.land/r/devx000/wip/boards/permissions\"\n\tboards2 \"gno.land/r/boards000/v1rc1\"\n\tusers \"gno.land/r/gnoland/users/v1\"\n)\n\nconst (\n\towner     address = \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\" // @devx\n\tuser      address = \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\" // @test2\n\tboardPath         = \"gno.land/r/boards000/v1rc1:test123\"\n)\n\nvar (\n\tbid boards.ID // Operate on board DAO\n\ttid boards.ID\n)\n\nfunc init() {\n\ttesting.SetRealm(testing.NewUserRealm(owner))\n\tbid = boards2.CreateBoard(cross, \"test123\", false)\n\n\t// Assign custom permissions to the board\n\tboards2.SetPermissions(cross, bid, permissions.New(boardPath))\n\n\t// Register a username which is required to be able to add\n\t// a reply and then create a new reply as a non member user.\n\ttesting.SetRealm(testing.NewUserRealm(user))\n\tusers.Register(cross, \"user123\")\n\ttid = boards2.CreateThread(cross, bid, \"Title\", \"Body\")\n}\n\nfunc main() {\n\ttesting.SetRealm(testing.NewUserRealm(user))\n\n\t// Delete the thread as the non member user that created it\n\tboards2.DeleteThread(cross, bid, tid)\n\n\t// Ensure reply doesn't exist\n\tprintln(tid == 1)\n\tprintln(boards2.Render(\"test123/1\"))\n}\n\n// Output:\n// true\n// Thread does not exist with ID: 1\n"},{"name":"z_1_b_filetest.gno","body":"// Test deleting a reply of another non member user\npackage main\n\n// SEND: 1000000ugnot\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\n\tpermissions \"gno.land/r/devx000/wip/boards/permissions\"\n\tboards2 \"gno.land/r/boards000/v1rc1\"\n\tusers \"gno.land/r/gnoland/users/v1\"\n)\n\nconst (\n\towner     address = \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\" // @devx\n\tuser      address = \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\" // @test2\n\tuser2     address = \"g125t352u4pmdrr57emc4pe04y40sknr5ztng5mt\"\n\tboardPath         = \"gno.land/r/boards000/v1rc1:test123\"\n)\n\nvar (\n\tbid boards.ID // Operate on board DAO\n\ttid boards.ID\n)\n\nfunc init() {\n\ttesting.SetRealm(testing.NewUserRealm(owner))\n\tbid = boards2.CreateBoard(cross, \"test123\", false)\n\n\t// Assign custom permissions to the board\n\tboards2.SetPermissions(cross, bid, permissions.New(boardPath))\n\n\t// Register a username which is required to be able to add\n\t// a reply and then create a new reply as a non member user.\n\ttesting.SetRealm(testing.NewUserRealm(user))\n\tusers.Register(cross, \"user123\")\n\ttid = boards2.CreateThread(cross, bid, \"Title\", \"Body\")\n}\n\nfunc main() {\n\ttesting.SetRealm(testing.NewUserRealm(user2))\n\n\t// Try to delete the thread of another non member user\n\tboards2.DeleteThread(cross, bid, tid)\n}\n\n// Error:\n// unauthorized\n"},{"name":"z_2_a_filetest.gno","body":"// Test creating a new reply as a non member user\npackage main\n\n// SEND: 1000000ugnot\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\n\tpermissions \"gno.land/r/devx000/wip/boards/permissions\"\n\tboards2 \"gno.land/r/boards000/v1rc1\"\n\tusers \"gno.land/r/gnoland/users/v1\"\n)\n\nconst (\n\towner     address = \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\" // @devx\n\tuser      address = \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\" // @test2\n\tboardPath         = \"gno.land/r/boards000/v1rc1:test123\"\n\tcomment           = \"Test Comment\"\n)\n\nvar (\n\tbid boards.ID // Operate on board DAO\n\ttid boards.ID\n)\n\nfunc init() {\n\ttesting.SetRealm(testing.NewUserRealm(owner))\n\tbid = boards2.CreateBoard(cross, \"test123\", false)\n\ttid = boards2.CreateThread(cross, bid, \"Title\", \"Body\")\n\n\t// Assign custom permissions to the board\n\tboards2.SetPermissions(cross, bid, permissions.New(boardPath))\n\n\t// Register a username which is required to be able to add a reply\n\ttesting.SetRealm(testing.NewUserRealm(user))\n\tusers.Register(cross, \"user123\")\n}\n\nfunc main() {\n\ttesting.SetRealm(testing.NewUserRealm(user))\n\n\t// Non members should be able to add replies\n\tboards2.CreateReply(cross, bid, tid, 0, comment)\n\n\t// Render content must contain the reply\n\tcontent := boards2.Render(\"test123/1\")\n\tprintln(strings.Contains(content, \"\\n\u003e \"+comment+\"\\n\"))\n}\n\n// Output:\n// true\n"},{"name":"z_2_b_filetest.gno","body":"// Test creating a new reply as a non member user that has no username registered\npackage main\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\n\tpermissions \"gno.land/r/devx000/wip/boards/permissions\"\n\tboards2 \"gno.land/r/boards000/v1rc1\"\n)\n\nconst (\n\towner      address = \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\" // @devx\n\tuser       address = \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\" // @test2\n\tboardPath          = \"gno.land/r/boards000/v1rc1:1\"\n\trenderPath         = boardPath + \"/1\"\n\tcomment            = \"Test Comment\"\n)\n\nvar (\n\tbid boards.ID // Operate on board DAO\n\ttid boards.ID\n)\n\nfunc init() {\n\ttesting.SetRealm(testing.NewUserRealm(owner))\n\tbid = boards2.CreateBoard(cross, \"test123\", false)\n\ttid = boards2.CreateThread(cross, bid, \"Title\", \"Body\")\n\n\t// Assign custom permissions to the board\n\tboards2.SetPermissions(cross, bid, permissions.New(boardPath))\n}\n\nfunc main() {\n\ttesting.SetRealm(testing.NewUserRealm(user))\n\n\t// Non members should be able to add replies only if they have a registered user\n\tboards2.CreateReply(cross, bid, tid, 0, comment)\n}\n\n// Error:\n// a registered username is required to comment on open boards\n"},{"name":"z_3_a_filetest.gno","body":"// Test deleting a reply as the non member user that created it\npackage main\n\n// SEND: 1000000ugnot\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\n\tpermissions \"gno.land/r/devx000/wip/boards/permissions\"\n\tboards2 \"gno.land/r/boards000/v1rc1\"\n\tusers \"gno.land/r/gnoland/users/v1\"\n)\n\nconst (\n\towner     address = \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\" // @devx\n\tuser      address = \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\" // @test2\n\tboardPath         = \"gno.land/r/boards000/v1rc1:test123\"\n)\n\nvar (\n\tbid      boards.ID // Operate on board DAO\n\ttid, rid boards.ID\n)\n\nfunc init() {\n\ttesting.SetRealm(testing.NewUserRealm(owner))\n\tbid = boards2.CreateBoard(cross, \"test123\", false)\n\ttid = boards2.CreateThread(cross, bid, \"Title\", \"Body\")\n\n\t// Assign custom permissions to the board\n\tboards2.SetPermissions(cross, bid, permissions.New(boardPath))\n\n\t// Register a username which is required to be able to add\n\t// a reply and then create a new reply as a non member user.\n\ttesting.SetRealm(testing.NewUserRealm(user))\n\tusers.Register(cross, \"user123\")\n\trid = boards2.CreateReply(cross, bid, tid, 0, \"Comment\")\n}\n\nfunc main() {\n\ttesting.SetRealm(testing.NewUserRealm(user))\n\n\t// Delete the reply as the non member user that created it\n\tboards2.DeleteReply(cross, bid, tid, rid)\n\n\t// Ensure reply doesn't exist\n\tprintln(rid == 2)\n\tprintln(boards2.Render(\"test123/1/2\"))\n}\n\n// Output:\n// true\n// Reply does not exist with ID: 2\n"},{"name":"z_3_b_filetest.gno","body":"// Test deleting a reply of another non member user\npackage main\n\n// SEND: 1000000ugnot\n\nimport (\n\t\"testing\"\n\n\t\"gno.land/p/devx000/wip/gnoland/boards\"\n\n\tpermissions \"gno.land/r/devx000/wip/boards/permissions\"\n\tboards2 \"gno.land/r/boards000/v1rc1\"\n\tusers \"gno.land/r/gnoland/users/v1\"\n)\n\nconst (\n\towner     address = \"g16jpf0puufcpcjkph5nxueec8etpcldz7zwgydq\" // @devx\n\tuser      address = \"g1us8428u2a5satrlxzagqqa5m6vmuze025anjlj\" // @test2\n\tuser2     address = \"g125t352u4pmdrr57emc4pe04y40sknr5ztng5mt\"\n\tboardPath         = \"gno.land/r/boards000/v1rc1:test123\"\n)\n\nvar (\n\tbid      boards.ID // Operate on board DAO\n\ttid, rid boards.ID\n)\n\nfunc init() {\n\ttesting.SetRealm(testing.NewUserRealm(owner))\n\tbid = boards2.CreateBoard(cross, \"test123\", false)\n\ttid = boards2.CreateThread(cross, bid, \"Title\", \"Body\")\n\n\t// Assign custom permissions to the board\n\tboards2.SetPermissions(cross, bid, permissions.New(boardPath))\n\n\t// Register a username which is required to be able to add\n\t// a reply and then create a new reply as a non member user.\n\ttesting.SetRealm(testing.NewUserRealm(user))\n\tusers.Register(cross, \"user123\")\n\trid = boards2.CreateReply(cross, bid, tid, 0, \"Comment\")\n}\n\nfunc main() {\n\ttesting.SetRealm(testing.NewUserRealm(user2))\n\n\t// Try to delete the reply of another non member user\n\tboards2.DeleteReply(cross, bid, tid, rid)\n}\n\n// Error:\n// unauthorized\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserAll"}},"send":"","max_deposit":""}],"fee":{"gas_wanted":"100000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"J57Zbuc+lmaIWyFhGm9s72o8uU5lrK0zF32ZhJjDxWdc8G0LjEZNi3JybJBqCFDk6yZta+TEdgFMkhx79NrPDA=="}],"memo":""},"metadata":{"timestamp":"1761558802"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","send":"","max_deposit":"","pkg_path":"gno.land/r/boards000/v1rc1","func":"CreateBoard","args":["General","true"]}],"fee":{"gas_wanted":"50000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"ArF9Xs6n4b29m0yqbm6hNFjJV+JSfFv0x+x9Fu7BeKRfsUtf7+Ka4bVUWiV+yCzF8NvB0NWsEmEjLEOjC87zAA=="}],"memo":""},"metadata":{"timestamp":"1761564516"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","send":"","max_deposit":"","pkg_path":"gno.land/r/boards000/v1rc1","func":"InviteMember","args":["1","g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","owner"]}],"fee":{"gas_wanted":"50000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kpn0PrEXX/E2af1/nZ4WVWIz/XlT03/LPw6PCdoNFrrmoGzHfBzm/nR/ShOBgFDLu0WBrGoClDTWqKf2Q6PVDw=="}],"memo":""},"metadata":{"timestamp":"1761564581"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Zu+JFGmZZ2OSW4HA3TjklcJEj9KZYOkBfhMss+pLhUMd/SF7LjByyx0FBOQsEVq1tyX3bG2GclupDZjPxN11Aw=="}],"memo":""},"metadata":{"timestamp":"1761564918"}}
{"tx":{"msg":[{"@type":"/vm.m_run","caller":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","send":"","max_deposit":"","package":{"name":"main","path":"gno.land/e/g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun/run","files":[{"name":"gnomod.toml","body":"module = \"gno.land/e/g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun/run\"\ngno = \"0.9\"\nprivate = true\n"},{"name":"main.gno","body":"package main\n\nimport (\n\tboards2 \"gno.land/r/boards000/v1rc1\"\n\t\"gno.land/r/devx000/wip/boards/permissions\"\n)\n\nfunc main() {\n\tboards2.SetPermissions(cross, 1, permissions.New(\"gno.land/r/boards000/v1rc1:General\"))\n}\n"}],"type":{"@type":"/gno.MemPackageType","value":"MPUserProd"}}}],"fee":{"gas_wanted":"50000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"kuHTIi1ZuXutuUrO0ZubCGyM7UzhVV8WJA9/2CB9Qc45ugnfHwxKzr4ihAR1GWI3EsWSDtvyOgmf44zhuLPaAA=="}],"memo":""},"metadata":{"timestamp":"1761564933"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","send":"","max_deposit":"","pkg_path":"gno.land/r/boards000/v1rc1","func":"CreateThread","args":["1","Welcome to General Open Board","General board is an open board, which means that anyone with a registered username can create threads and comment anywhere whithin the board.\n\nUsernames can be registered in the [gno.land/r/gnoland/users](/r/gnoland/users/v1) realm.\n\n## How to Create an Open Board?\n\nRight now boards can only be created by [realm admin members](/r/boards000/v1rc1:admin-users).\n\nOnce a new board is created it can become an open board by assigning a custom [Permissions implementation](/p/devx000/wip/gnoland/boards\u0026file=permissions.gno#L23) to it, one that allows open threads and comments.\nThe implementation being used for **General** board can be found at [gno.land/r/devx000/wip/boards/permissions](/r/devx000/wip/boards/permissions) realm."]}],"fee":{"gas_wanted":"20000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"0RIQFzuRvaA4yEV13JCYLZB1f9GISyRV3G2zPCqgzlcmjVWq7fdghPHuBeywAdKIR86Y6fBxnLqsSl71ci+pAQ=="}],"memo":""},"metadata":{"timestamp":"1761566124"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"Zu+JFGmZZ2OSW4HA3TjklcJEj9KZYOkBfhMss+pLhUMd/SF7LjByyx0FBOQsEVq1tyX3bG2GclupDZjPxN11Aw=="}],"memo":""},"metadata":{"timestamp":"1761566290"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","send":"","max_deposit":"","pkg_path":"gno.land/r/boards000/v1rc1","func":"EditThread","args":["1","1","Welcome to General Open Board","General board is an open board, which means that anyone with a registered username can create threads and comment anywhere whithin the board.\n\nUsernames can be registered in the [gno.land/r/gnoland/users](/r/gnoland/users/v1) realm.\n\n## How to Create an Open Board?\n\nRight now boards can only be created by [realm admin members](/r/boards000/v1rc1:admin-users).\n\nOnce a new board is created it can become an open board by assigning a custom [Permissions implementation](/p/devx000/wip/gnoland/boards$source\u0026file=permissions.gno#L23) to it, one that allows open threads and comments.\nThe implementation being used for **General** board can be found at [gno.land/r/devx000/wip/boards/permissions](/r/devx000/wip/boards/permissions) realm."]}],"fee":{"gas_wanted":"20000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"YcrzRp0U2BeciT9yl6Ayl1ecYQQqqoltmUPmGkzTdafikBJSKKKc7q5QQjEE2BqAI2IBdxmP/GYlsr1RyT1kBA=="}],"memo":""},"metadata":{"timestamp":"1761566305"}}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","send":"","max_deposit":"","pkg_path":"gno.land/r/boards000/v1rc1","func":"CreateReply","args":["1","1","0","Use comments to ask questions"]}],"fee":{"gas_wanted":"50000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"6n3EVp7Z1KiqZtYQiWihdg7mbxfhw12jKQuKaxyV9N/9axGsnF14N0CKrg/pNJQX6Q6fV8DSuyqNll022vjGAg=="}],"memo":""},"metadata":{"timestamp":"1761566541"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1vx3z4cvnewqvm38mtphlkq8tjk2c9z4fertt3y","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"xX1G8Nn6xcRZL+kTcXiVHRpanqydY5QQpXDZl23pM5WYfTMl8CF6O10f0l5I86f/zc+zdl2kyDxfPJdyuk52Cg=="}],"memo":""},"metadata":{"timestamp":"1761571703"}}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qhuef2450xh7g7na8s865nreu2xw8j84kgkvt5","to_address":"g1mx4pum9976th863jgry4sdjzfwu03qan5w2v9j","amount":"1000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeyEd25519","value":"gF+o3EpjwNoXR+5bleCTpN1CE7IqKQOijQgQ/VqaAzI="},"signature":"mM/JP7+hoONlIxIyFs4M29qAixalW232JYyKnv5HvhTDqrWAEXpT8EHMEGPtC6YFIe2UgG+eot0ocnlrjGkYDg=="}],"memo":""},"metadata":{"timestamp":"1761585725"}}
