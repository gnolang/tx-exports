{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g199v9fxazlp2n7ls7n4e04x0q4rcg3ggehtjdsh","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"T7J0EhS0VY1mPXyIzNcOxwzjD4X/dcNl2ktSo5uIp/ov76QPr6g8h6JpL392j3CcV0IdBoh9u94agcjqNguW1A=="}],"memo":""},"blockNum":"3912539"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g150gdvn780ws7a3s9qpdvv7h4d9hq6vh672ely0","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"p2DWq3yZBdJatslDk76wYjXa+Ik1fxaCUD7twcCnd+54dci1MfedXbyNDsgT7Voe7CqsmYQPj+pLOCuSmV1shQ=="}],"memo":""},"blockNum":"3915038"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g150gdvn780ws7a3s9qpdvv7h4d9hq6vh672ely0","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"4Tj7Og1GuOguWrSAYr6N//xSoRWDDm9Mg9CcQlc66eFj2FnSAJhmKG1Tslp1C6Se1FoxAwRiRM2l/v4bTNFI8g=="}],"memo":""},"blockNum":"3940622"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1xe2ljac8256rwxxytqddvrjsj2tyv90fvgeaae","send":"","pkg_path":"gno.land/r/ecodevx/tutorials/pre1","func":"TutorialExists","args":[""]}],"fee":{"gas_wanted":"8000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2Y4JaPcCTltfAG4HLPi0nRpfB48Vuk4atRW1TovHzN5"},"signature":"EkW+lzbGZ7FmqAKq8HAVuMYX47YX9Y58/JRKMJvQ3hIxGt5vsHRaAqXgUiDnP7ucc4TrJ/bmlXQX+WLpycfJ5w=="}],"memo":""},"blockNum":"3961408"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1xe2ljac8256rwxxytqddvrjsj2tyv90fvgeaae","send":"","pkg_path":"gno.land/r/ecodevx/tutorials/pre1","func":"SubmitCreationProposal","args":["Let's try a new test tutorial...","This is a test.","test-tutorial-20241203","Test Tutorial 03 Dec 2024","f82e69ebe7056f504e487da8ad32e50d6f1fafbf7b9c4491c2a3212827fb8a6c","https://github.com/NewTendermint/NewTendermint/gno.me/blob/main/proposals/tutorials/test-tutorial-20241203/index.md","g1whzkakk4hzjkvy60d5pwfk484xu67ar2cl62h2","","gnoland test"]}],"fee":{"gas_wanted":"8000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2Y4JaPcCTltfAG4HLPi0nRpfB48Vuk4atRW1TovHzN5"},"signature":"d4eHy4ct+XmLPT1XuaI/5OoMaqe58j/Y8veiCH5uoIoLSKg8BLz4KbV8skQRf1EbaQV/FsQFTcaV5AEvxxJ4Ew=="}],"memo":""},"blockNum":"3961409"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","send":"","pkg_path":"gno.land/r/ecodevx/dao/pre1","func":"Vote","args":["17","true","",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7MWSLkjf+z/CYfMh6KVHEaHLDWpnfGBRDqFO81j1FRN"},"signature":"qwxGn9tjoBNtXdTUQwKXWWt7dZ4LRlkkkj2xY4fxeuQVhiOEN+MWOYQHvSv49ClUqFRFcNw7VgC8eC46Vdqgiw=="}],"memo":"Called through gno.studio"},"blockNum":"3961694"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","send":"","pkg_path":"gno.land/r/ecodevx/dao/pre1","func":"Vote","args":["18","true","",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7MWSLkjf+z/CYfMh6KVHEaHLDWpnfGBRDqFO81j1FRN"},"signature":"0Dy2AhuFaPY17C9l1duqiqwOy94nxrk+87HbHg9SpU5INTEFcBb+8l27Knqf4jC1WeiBxGRJ5+uYO8rpucWBUQ=="}],"memo":"Called through gno.studio"},"blockNum":"3961701"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1whzkakk4hzjkvy60d5pwfk484xu67ar2cl62h2","send":"","pkg_path":"gno.land/r/ecodevx/dao/pre1","func":"Vote","args":["18","true","Because we want it to pass!",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+8e+xKl/HkBcdwQCmlkKhoekH4RUvskOJan85VTUFix"},"signature":"WiRjUu4L39WEx141i9wikIXO4IkHzXTWkCOlGO72fPUwjifhqVgN3HZvtIYgQaM7ycEokY5tQ9nJY/PN0ll+nA=="}],"memo":"Called through gno.studio"},"blockNum":"3961799"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g150gdvn780ws7a3s9qpdvv7h4d9hq6vh672ely0","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"J0hoBGCgWU0+QbHrKjSFx3VBx9hZHLreOv5A+PImuvJEcYOB9piuPHUfnZu5oHGcfxYhaYfrFzJYDMVezgPjQA=="}],"memo":""},"blockNum":"3962623"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","send":"","pkg_path":"gno.land/r/ecodevx/dao/pre1","func":"Vote","args":["18","true","",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvC68IPWD/o8iYM+et/K6YpBp4+m0hF3mLXIdFZnWH1Y"},"signature":"0XP7/jsuGU5COYiFyJs/siPUzlgiifnEQeoBZMDTRoBqqktzqLs4WNaqs2Qdrp7t7W/BelJY4BaiZlkbb3X+Nw=="}],"memo":"Called through gno.studio"},"blockNum":"3964609"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g150gdvn780ws7a3s9qpdvv7h4d9hq6vh672ely0","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"mIVIcjHfXbvcVdnPykJX9Cikkqrxdle2+mZfeihq5NB1CIIpaY60mCgFQfQfCT0YfZ46PbZhk6FYVTu9VMQgMQ=="}],"memo":""},"blockNum":"3981715"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g147ah9520z0r6jh9mjr6c75rv6l8aypzvcd3f7d","package":{"name":"mirror","path":"gno.land/p/ecodevx/mirror","files":[{"name":"LICENSE","body":"Copyright (c) 2024. All rights reserved.\n\nProject Owner:\nNewTendermint, LLC\n\nProject Maintainer:\nİlker Göktuğ ÖZTÜRK. \u003cilker@ilgooz.com\u003e, \u003cilkergoktugozturk@gmail.com\u003e\n\nYour access to this Project and your contributions to this Project are subject\nto the following terms:\n\n* You hereby grant to the listed Owner and Maintainer of this Project the\nworldwide, irrevocable and royalty-free right to use, publish, relicense and\nsublicense your contributions under any non-exclusive license of their\nchoosing for commercial and non-commercial purposes.\n* You shall not attempt to bring any intellectual property infringement or\nmisappropriation claims against the Owner or Maintainer of this Project\nrelating to or arising from your contributions.\n* You represent that you are the sole owner of all rights in your\ncontributions and that no third party has any rights or interests therein.\n\nFOR THE SCOPE OF THIS LICENSE, A CONTRIBUTION IS DEFINED TO INCLUDE ANY WORKS,\nIDEAS, CODE, PROCESSES, OR APIS MADE AVAILABLE TO VIEW BY THE GENERAL PUBLIC\n(INCLUDING ANY PUBLICLY ACCESSIBLE INTERNET FORUMS AND CHAT SERVERS WHERE\nACCESS IS AVAILABLE FOR FREE WITH REGISTRATION) OR PRIVATELY TO THIS PROJECT'S\nOWNER AND MAINTAINERS; INCLUDING WORKS, IDEAS, CODE, PROCESSES, AND APIS THAT\nARE ABOUT THIS PROJECT AND ITS CONTRIBUTIONS, OR MENTIONED IN REFERENCE TO\nTHIS PROJECT, WHERE SUCH WORKS, IDEAS, CODE, PROCESSES, AND APIS ARE MATERIAL\nTO THE SUCCESS, IMPROVEMENT, OR COMPLETION OF THIS PROJECT, AS DETERMINED BY\nTHE OWNER OF THIS PROJECT.\n\nContributions may come in any form, and include (but are not limited to):\n\n* pull requests\n* diff patches\n* commentary\n* example code\n\nIf you do not want your contribution to become incorporated into this Project,\ndo not make contributions to this Project. The creation of contributions that\nmay in the future become known to this Project's Owner and Maintainer\nconstitutes a willing contribution to this Project in accordance with this\nlicense.\n\nTHIS PROJECT AND THE WORKS AVAILABLE THROUGH THIS PROJECT ARE PROVIDED “AS IS”\nAND WITHOUT WARRANTY OF ANY KIND. IN NO EVENT SHALL THE OWNER OR MAINTAINER OF\nTHIS PROJECT BE LIABLE TO YOU OR ANY THIRD PARTY FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THIS PROJECT OR THE WORKS AVAILABLE THROUGH\nTHIS PROJECT. YOU AGREED TO INDEMNIFY, DEFEND AND HOLD THE OWNER AND\nMAINTAINER FROM AND AGAINST ANY CLAIMS, LOSSES OR DAMAGES ARISING FROM YOUR\nUSE OF THIS PROJECT OR THE WORKS AVAILABLE THROUGH THIS PROJECT.\n\nThis license is subject to change at any time by the Project Owner or\nMaintainer.\n\nYour continued access to or use of this Project or any works\navailable through this Project shall be subject to the then-current version\nof this license.\n\nThe Project Owner and Maintainer reserve the right to change this license\nwithout needing the consent of the contributors to this Project.\n"},{"name":"mirror.gno","body":"package mirror\n\nimport (\n\t\"errors\"\n\n\t\"gno.land/p/demo/avl\"\n)\n\nvar ErrRealmNotFound = errors.New(\"realm not found\")\n\ntype (\n\tRenderFn func(path string) string\n\n\tMirror struct {\n\t\trealms *avl.Tree // string(realm URI) -\u003e RenderFn\n\t}\n)\n\nfunc New() Mirror {\n\treturn Mirror{realms: avl.NewTree()}\n}\n\nfunc (m *Mirror) Register(realm string, fn RenderFn) {\n\tm.realms.Set(realm, fn)\n}\n\nfunc (m Mirror) IsRegistered(realm string) bool {\n\treturn m.realms.Has(realm)\n}\n\nfunc (m Mirror) Render(realm, path string) (string, error) {\n\tv, found := m.realms.Get(realm)\n\tif !found {\n\t\treturn \"\", ErrRealmNotFound\n\t}\n\n\trender := v.(RenderFn)\n\treturn render(path), nil\n}\n\nfunc (m Mirror) MustRender(realm, path string) string {\n\ts, err := m.Render(realm, path)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn s\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgT3cOUK7x6Ivse+Ariq29QhVsmMuVVG1uY4cWpE0u4s"},"signature":"EgD8naIu/z6OZPc7CB9RsXP26jXAcbMaCyzEcu9ixL4rqsMwr4FQjqkwtdFrNwKDpGrtPrQqJtuBT08oqG9KdA=="}],"memo":""},"blockNum":"3990521"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g147ah9520z0r6jh9mjr6c75rv6l8aypzvcd3f7d","package":{"name":"space","path":"gno.land/r/ecodevx/space","files":[{"name":"LICENSE","body":"Copyright (c) 2024. All rights reserved.\n\nProject Owner:\nNewTendermint, LLC\n\nProject Maintainer:\nİlker Göktuğ ÖZTÜRK. \u003cilker@ilgooz.com\u003e, \u003cilkergoktugozturk@gmail.com\u003e\n\nYour access to this Project and your contributions to this Project are subject\nto the following terms:\n\n* You hereby grant to the listed Owner and Maintainer of this Project the\nworldwide, irrevocable and royalty-free right to use, publish, relicense and\nsublicense your contributions under any non-exclusive license of their\nchoosing for commercial and non-commercial purposes.\n* You shall not attempt to bring any intellectual property infringement or\nmisappropriation claims against the Owner or Maintainer of this Project\nrelating to or arising from your contributions.\n* You represent that you are the sole owner of all rights in your\ncontributions and that no third party has any rights or interests therein.\n\nFOR THE SCOPE OF THIS LICENSE, A CONTRIBUTION IS DEFINED TO INCLUDE ANY WORKS,\nIDEAS, CODE, PROCESSES, OR APIS MADE AVAILABLE TO VIEW BY THE GENERAL PUBLIC\n(INCLUDING ANY PUBLICLY ACCESSIBLE INTERNET FORUMS AND CHAT SERVERS WHERE\nACCESS IS AVAILABLE FOR FREE WITH REGISTRATION) OR PRIVATELY TO THIS PROJECT'S\nOWNER AND MAINTAINERS; INCLUDING WORKS, IDEAS, CODE, PROCESSES, AND APIS THAT\nARE ABOUT THIS PROJECT AND ITS CONTRIBUTIONS, OR MENTIONED IN REFERENCE TO\nTHIS PROJECT, WHERE SUCH WORKS, IDEAS, CODE, PROCESSES, AND APIS ARE MATERIAL\nTO THE SUCCESS, IMPROVEMENT, OR COMPLETION OF THIS PROJECT, AS DETERMINED BY\nTHE OWNER OF THIS PROJECT.\n\nContributions may come in any form, and include (but are not limited to):\n\n* pull requests\n* diff patches\n* commentary\n* example code\n\nIf you do not want your contribution to become incorporated into this Project,\ndo not make contributions to this Project. The creation of contributions that\nmay in the future become known to this Project's Owner and Maintainer\nconstitutes a willing contribution to this Project in accordance with this\nlicense.\n\nTHIS PROJECT AND THE WORKS AVAILABLE THROUGH THIS PROJECT ARE PROVIDED “AS IS”\nAND WITHOUT WARRANTY OF ANY KIND. IN NO EVENT SHALL THE OWNER OR MAINTAINER OF\nTHIS PROJECT BE LIABLE TO YOU OR ANY THIRD PARTY FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THIS PROJECT OR THE WORKS AVAILABLE THROUGH\nTHIS PROJECT. YOU AGREED TO INDEMNIFY, DEFEND AND HOLD THE OWNER AND\nMAINTAINER FROM AND AGAINST ANY CLAIMS, LOSSES OR DAMAGES ARISING FROM YOUR\nUSE OF THIS PROJECT OR THE WORKS AVAILABLE THROUGH THIS PROJECT.\n\nThis license is subject to change at any time by the Project Owner or\nMaintainer.\n\nYour continued access to or use of this Project or any works\navailable through this Project shall be subject to the then-current version\nof this license.\n\nThe Project Owner and Maintainer reserve the right to change this license\nwithout needing the consent of the contributors to this Project.\n"},{"name":"space.gno","body":"package space\n\nimport (\n\t\"regexp\"\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/avl\"\n\t\"gno.land/p/ecodevx/mirror\"\n)\n\nconst gnomeNS = \"gno.land/r/gnome/\"\n\n// TODO: slugs and mirrored could be improved\nvar (\n\tdefaultRealm string\n\treSlug       = regexp.MustCompile(\"^[a-z]+[a-z0-9-]*$\")\n\tslugs        = avl.NewTree() // string(slug) -\u003e string(canonical realm path)\n\tmirrored     = avl.NewTree() // string(canonical realm path) -\u003e string(realm path)\n\trealms       = mirror.New()\n)\n\n// Mirror registers the caller Gno.me realm to be mirrored.\n//\n// Caller realm must be a realm defined inside the `gnome` namespace.\n// It's assumed that caller uses URL path suffix versioning.\n//\n// Parameters:\n// - slug: A slug to use for rendering caller realm paths.\n// - fn: A function to render caller realm paths.\nfunc Mirror(slug string, fn mirror.RenderFn) {\n\tif fn == nil {\n\t\tpanic(\"render function is required\")\n\t}\n\n\tassertCallerIsGnomeRealm()\n\tassertIsSlug(slug)\n\n\tpath := std.PrevRealm().PkgPath()\n\tcanonical := getCanonicalPath(path)\n\trealms.Register(canonical, fn)\n\n\tslugs.Set(slug, canonical)\n\tmirrored.Set(canonical, path)\n}\n\n// MirroredPath returns the path of a mirrored realm.\n//\n// Parameters:\n// - realm: Canonical realm path.\nfunc MirroredPath(realm string) string {\n\tv, found := mirrored.Get(realm)\n\tif !found {\n\t\tpanic(\"realm not found\")\n\t}\n\treturn v.(string)\n}\n\n// MakeDefault assigns the caller Gno.me realm as the default realm.\n// Caller realm must be registered before making it the default one.\n// Default realm is called when the render path is empty.\nfunc MakeDefault() {\n\tassertCallerIsGnomeRealm()\n\n\tpath := std.PrevRealm().PkgPath()\n\tcanonical := getCanonicalPath(path)\n\tif !mirrored.Has(canonical) {\n\t\tpanic(\"caller realm is not mirrored: \" + path)\n\t}\n\n\tdefaultRealm = canonical\n}\n\n// Render returns a Markdown string with the ouput of a mirrored Gno.me realm.\nfunc Render(path string) string {\n\tif path == \"\" {\n\t\tif defaultRealm != \"\" {\n\t\t\treturn realms.MustRender(defaultRealm, \"\")\n\t\t}\n\t\treturn \"Path not found\"\n\t}\n\n\tslug, suffixPath, _ := strings.Cut(path, \"/\")\n\tv, found := slugs.Get(slug)\n\tif !found {\n\t\tpanic(\"Not found\")\n\t}\n\n\tcanonical := v.(string)\n\treturn realms.MustRender(canonical, suffixPath)\n}\n\n// getCanonicalPath removes version suffix from a realm path.\nfunc getCanonicalPath(path string) string {\n\treturn path[:strings.LastIndex(path, \"/\")]\n}\n\nfunc assertCallerIsGnomeRealm() {\n\tif !strings.HasPrefix(std.PrevRealm().PkgPath(), gnomeNS) {\n\t\tpanic(\"caller must be a gnome realm\")\n\t}\n}\n\nfunc assertIsSlug(s string) {\n\tif !reSlug.MatchString(s) {\n\t\tpanic(\"invalid slug\")\n\t}\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"20000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgT3cOUK7x6Ivse+Ariq29QhVsmMuVVG1uY4cWpE0u4s"},"signature":"TK/dqlSCqJ0oeozf6wG1ybSW6/dXeAWcdxa93WtrtD0onbx5pPTwTr/r/sqKRcrB/yZw3fmOM04eCivDS1Rcrg=="}],"memo":""},"blockNum":"3990538"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","send":"","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","ecodevx2",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7MWSLkjf+z/CYfMh6KVHEaHLDWpnfGBRDqFO81j1FRN"},"signature":"TDmCczYTm0uWdwG/cItWtx9zQ67wufX1lh5rD0fV8f1K8AR2bNLNp+v0w1dJZqk6PeyhI/zkejRNDPIHU9rtGw=="}],"memo":"Called through gno.studio"},"blockNum":"3990714"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","send":"","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","michelle",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7MWSLkjf+z/CYfMh6KVHEaHLDWpnfGBRDqFO81j1FRN"},"signature":"TDH8N/odmYfh70d8oix/SiqshI0ihReD7O8bNJfPhYkIsHflB1bWXoKwZwaZe6K657R6CFD21HbrJjvb/GzBlg=="}],"memo":"Called through gno.studio"},"blockNum":"3990741"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","send":"20000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","ecodevx2",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvC68IPWD/o8iYM+et/K6YpBp4+m0hF3mLXIdFZnWH1Y"},"signature":"E2ELO8IeTtkJhSrut0oEUGB9rAwhC0qiLXGcwQM1h3Bc3X/TmeqlOCNbkRRxY4dT43n4vVg1dKvDNVtP9Hcv2w=="}],"memo":"Called through gno.studio"},"blockNum":"3990757"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","send":"19999996ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","michelle",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7MWSLkjf+z/CYfMh6KVHEaHLDWpnfGBRDqFO81j1FRN"},"signature":"BGJZCwkLVE+dpL83uissV8cOOhjw0VQkhXpQpfGRVCYr1e9Je5xaEHJitk6ysGOEDoF3On0WH0yh7YrHzwnhdw=="}],"memo":"Called through gno.studio"},"blockNum":"3990764"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1e5hud66rs7ye4zgeqmqvwfhurs2mnf408hdqcl","send":"","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","ecodevx2",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnoTnz/ZqcoKxamS1Jb/cqISxscIS4VNFYjUrA6hDD0L"},"signature":"V/roXHv7crKp+Z22guR+1GpcISx/a32svXuh5EF7LzBVBubvMYGBIPnmkKZfsMxtWTN8CeUtqdYp0YL1qtA4pg=="}],"memo":"Called through gno.studio"},"blockNum":"3990765"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1e5hud66rs7ye4zgeqmqvwfhurs2mnf408hdqcl","send":"19999978ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","ecodevx2",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnoTnz/ZqcoKxamS1Jb/cqISxscIS4VNFYjUrA6hDD0L"},"signature":"NYdX8aSqv0zP7L09k7vgYt5MQ6tgoxzqV0kTR2+IaAhVLk2gWnofd4MaPlXl3+faSS3wOsF7fZ0AKprHXayewA=="}],"memo":"Called through gno.studio"},"blockNum":"3990771"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","send":"20000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","michelle",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7MWSLkjf+z/CYfMh6KVHEaHLDWpnfGBRDqFO81j1FRN"},"signature":"CLrB9bjcTaQDwHR+dRz+WpbIjAYqWHeZlFt20PJBLDUiBXKdCRJl13wiPBwus/X67NISdajFwPnNeUQieqdAWw=="}],"memo":"Called through gno.studio"},"blockNum":"3990781"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1hy6zry03hg5d8le9s2w4fxme6236hkgd928dun","to_address":"g1e5hud66rs7ye4zgeqmqvwfhurs2mnf408hdqcl","amount":"20000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvC68IPWD/o8iYM+et/K6YpBp4+m0hF3mLXIdFZnWH1Y"},"signature":"ytOOjpH3Si4jZIcdeyLoNxeah7rH993M0vRnw33ilnxJsrIHC3GWIk5Vb9kSVxeeR8SbyCerjedxpeBgxsVsug=="}],"memo":""},"blockNum":"3990790"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","send":"19999991ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","michelle",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7MWSLkjf+z/CYfMh6KVHEaHLDWpnfGBRDqFO81j1FRN"},"signature":"H31BShpLTviXrZIVbDbQp34kXnT2zB09cJQWmDjEB1xc+TK4AwOlaCadAnZasyPa5M0aRJkACtIkcUcxsJ1P4g=="}],"memo":"Called through gno.studio"},"blockNum":"3990797"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1e5hud66rs7ye4zgeqmqvwfhurs2mnf408hdqcl","send":"20000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","ecodevx2",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnoTnz/ZqcoKxamS1Jb/cqISxscIS4VNFYjUrA6hDD0L"},"signature":"0fS7T/zdZZvIYdaLjD4C9Wb8+5WTYiex2k1W8znwohpZB6Q4mPrXcsd0B35S+xwm8hZB7h6uO2u+82hgYgU/xQ=="}],"memo":"Called through gno.studio"},"blockNum":"3990801"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1778y2yphxs2wpuaflsy5y9qwcd4gttn4g5yjx5","send":"20000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","michelle",""]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7MWSLkjf+z/CYfMh6KVHEaHLDWpnfGBRDqFO81j1FRN"},"signature":"yj1ZvGtzobOvsxuh0Tnld0NUSa9nOZXEMKy3MhOAKM41KhKae0SKRfwB2P7BhN0jnDkdtYF81GgXIxMyuUIdbg=="}],"memo":"Called through gno.studio"},"blockNum":"3990807"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1whzkakk4hzjkvy60d5pwfk484xu67ar2cl62h2","package":{"name":"rando_202412041742","path":"gno.land/r/g1whzkakk4hzjkvy60d5pwfk484xu67ar2cl62h2/rando_202412041742","files":[{"name":"package.gno","body":"package rando_202412041742\n\nfunc Render(path string) string {\nreturn `class Step\n  property can_continue : Bool = true\n  property exception : Exception? = nil\n\n  def initialize(\u0026block : -\u003e)\n    @block = block\n    run\n  end\n\n  def next(\u0026block : -\u003e)\n    if can_continue\n      self.class.new(\u0026block)\n    else\n      self\n    end\n  end\n\n  def run\n    @block.call\n\n    self\n  rescue ex\n    self.exception = ex\n    self.can_continue = false\n\n    return self\n  end\n\n  def rescue(\u0026block : Exception -\u003e _)\n    self.rescue(Exception, \u0026block)\n  end\n\n  def rescue(exception_type : Exception.class, \u0026block : Exception -\u003e _)\n    if ex = self.exception \u0026\u0026 self.exception\n      {{ \".is_a?(#{@def.args[0].restriction})\" }}\n      continue_flag = block.call(ex)\n      self.can_continue = !!continue_flag\n      raise ex if continue_flag == false\n    end\n\n    self\n  end\nend\n`\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+8e+xKl/HkBcdwQCmlkKhoekH4RUvskOJan85VTUFix"},"signature":"G8lJEQ0tSaB2fJT9mY/RDQwEFDBT4gtsPMce9LdOPsI8i1Y6/kqB3DWwLMAffXJ5pYitIa8A5+ejDfolyBNZcg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"3991122"}
