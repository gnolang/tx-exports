{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1q2wvjtl6u8jhfs4fgy09de442jpn3eldu225cf","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"R8Yk6d+bSdLSXZHDznDPiaxXNBcQxmzqTaPsXG7KBrE3hvm38TaA3/fJKL28WqCtCHPKC1/Jon4Sp6waVfeP6Q=="}],"memo":""},"blockNum":"430837"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxjyQBsJI8CesbgwihvS/eQtYKoezyoA9P+FRlLAKRwg"},"signature":"Gl/DLrrCmmO2Xbc3mhCehBoFxA4aMDWiaS7yYQQI8cEksF8CmpEioFQj2L8EQ2CAIzbSQ+wnw035Sb2fsrFHsg=="}],"memo":""},"blockNum":"436396"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","send":"2000000ugnot","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gnot","gno.land/r/gnoswap/gns","2000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/onbloc/usdc:3000*POOL*gno.land/r/onbloc/usdc:gno.land/r/gnoswap/gns:500","100","522704"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awa/8lW3JScEGxyGpBLlH7URbxkgG42RWpriFzP/GTRj"},"signature":"2atbe0uJlPM86GFXpFxaraFp+TvBxZSMmjzxGiuyXPMEKesy0KoSicvwLXTkPs79d8d3sFbimq1P/f+EEjlS9Q=="}],"memo":""},"blockNum":"436448"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","1998718"]},{"@type":"/vm.m_call","caller":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","520000"]},{"@type":"/vm.m_call","caller":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","1998718"]},{"@type":"/vm.m_call","caller":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","send":"1998718ugnot","pkg_path":"gno.land/r/gnoswap/position","func":"Mint","args":["gnot","gno.land/r/gnoswap/gns","3000","-20400","-6540","1998718","520000","1988724","517400","7282571140","g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g"]},{"@type":"/vm.m_call","caller":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awa/8lW3JScEGxyGpBLlH7URbxkgG42RWpriFzP/GTRj"},"signature":"zEl7IAP7RwNB/hUmJQ74wzNiaCT8zE9EdPy7QF/hXJst9/Rg/pDKxWGAVZ/TA9LNlFM+nCvHf/e7LjHWG3K/ug=="}],"memo":""},"blockNum":"436470"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"Approve","args":["g1q6d4ns7zkr492rgl0pcgf5ajaf2dlz0nnptky3","130"]},{"@type":"/vm.m_call","caller":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","send":"","pkg_path":"gno.land/r/gnoswap/staker","func":"StakeToken","args":["130"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awa/8lW3JScEGxyGpBLlH7URbxkgG42RWpriFzP/GTRj"},"signature":"NwJVXpaH7eoFwxAPk9Y5hejH1CJMhMsetOdEOCWIgC8oC4JGBv+jWTcmARhn38LgexaPauzGjcpU22/mo+wWaQ=="}],"memo":""},"blockNum":"436476"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g1pmq2qz82anwnepdkelysere8tzxhdj0qdfrz77","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxjyQBsJI8CesbgwihvS/eQtYKoezyoA9P+FRlLAKRwg"},"signature":"hW205HFilQp5QvDY3MoAeclVfIMdsIwUhahfHACSKrJmRqbsWU5y0TlCxaOyDpx8cwH/UDQgk38dnzK9EaAI0A=="}],"memo":""},"blockNum":"436490"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1pmq2qz82anwnepdkelysere8tzxhdj0qdfrz77","to_address":"g1pc9vryftzymta0k5ple3k4j3zvww39fga4kz7g","amount":"9999999ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/UCkKThc7UO6kpW+NIma5uzGAJXjzjJ/l1ZHO3i/DAO"},"signature":"GFMJ3fykm9TxYbrH+TSFsYXB2cYJxGN8C0IhwQIQPE9JHOQwuSJa08l1iREYR3U09hrLgUono59VNYjf5AVd+Q=="}],"memo":""},"blockNum":"436495"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"2000000ugnot","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gnot","gno.land/r/gnoswap/gns","2000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/onbloc/usdc:3000*POOL*gno.land/r/onbloc/usdc:gno.land/r/gnoswap/gns:500","100","522701"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"mRLkqoAoc6/nEoimAXEK1jGx8DyugdM3RNh7CgC6MQtKHbUpW7ZtqdCY6o7mBtlhTfR9441HBUz8prFDBdKgaQ=="}],"memo":""},"blockNum":"437183"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"2000000ugnot","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gnot","gno.land/r/gnoswap/gns","2000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/onbloc/usdc:3000*POOL*gno.land/r/onbloc/usdc:gno.land/r/gnoswap/gns:500","100","522698"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"hRrHO7jgT6PFhBIYYEmulB3deFP+u+TM9Pyx7vJOzkg4FJpnzQwK6zpqfvieerusjQ97jS9FdfLZ/zpd9mlTRQ=="}],"memo":""},"blockNum":"437192"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","2000000"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","520333"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","2000000"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"2000000ugnot","pkg_path":"gno.land/r/gnoswap/position","func":"Mint","args":["gnot","gno.land/r/gnoswap/gns","3000","-20400","-6540","2000000","520333","1990000","517731","7282571140","g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"AenzUv0wjBCUIgYT1aq1CcVkNY2pZfAH9dLsinV+GSs3qV3y5jK1ot7omDHf8m9VAjwv/1qR82eVqmGva/1G1w=="}],"memo":""},"blockNum":"437214"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"Approve","args":["g1q6d4ns7zkr492rgl0pcgf5ajaf2dlz0nnptky3","131"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/staker","func":"StakeToken","args":["131"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"+ljVBFCtJ41n8hVOemFsJv+CiHeDLrOWOFCeeUAuZTZNXisAx25nFK/84tibjyTmhdMnYWA3mJIps8ZjrxMMpQ=="}],"memo":""},"blockNum":"437271"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","9223372036854775807"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","9223372036854775807"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","9223372036854775807"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/position","func":"DecreaseLiquidity","args":["131","100","0","0","9999999999","false"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"LVPBOX0QPv7xtqu01g0/OoZGsXqBhIA8T00TORWkikos4HMbYY5f2ZfxFX6TyfQnHC7Jq4Cw50q7Yuq68W0sbQ=="}],"memo":""},"blockNum":"437285"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","9223372036854775807"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","9223372036854775807"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","9223372036854775807"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/position","func":"DecreaseLiquidity","args":["131","100","0","0","9999999999","false"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"OAkWpaxDRTdMfRRbh5ekd54tCNkxsUEfeKnSN6diNPRdOQIViPAmvppIYbcKw5h1YSOYiEplsWUbWQFWqJA/GA=="}],"memo":""},"blockNum":"437313"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/onbloc/bar","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"2000000ugnot","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gnot","gno.land/r/onbloc/bar","2000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/onbloc/usdc:3000*POOL*gno.land/r/onbloc/usdc:gno.land/r/onbloc/bar:500","100","4890097"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"W2pElAJqxwTmfYS9nRHJjNCbTRS9vfURlhFJqS7j8IJy6DNPgO87J97i7YwbuZ8T9KO/Z7nkH34Z+w4/Ab3Iyg=="}],"memo":""},"blockNum":"437347"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"2000000ugnot","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gnot","gno.land/r/gnoswap/gns","2000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/onbloc/usdc:3000*POOL*gno.land/r/onbloc/usdc:gno.land/r/gnoswap/gns:500","100","522693"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"NkGglHQwssf3HKaFfxJpUvHb25VXoBlvaE4e44ToZfdht37eFwl0HEdJBCvDNnPbt4ghNdR1D1RwBJl9hkxFmA=="}],"memo":""},"blockNum":"437354"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","2000000"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","574039"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","2000000"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"2000000ugnot","pkg_path":"gno.land/r/gnoswap/position","func":"Mint","args":["gnot","gno.land/r/gnoswap/gns","3000","-14520","-12540","2000000","574039","1990000","571169","7282571140","g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"QzsMur7A+iypFuEDnWwX4QJGsefC/gMRxoYlDiZN3ANFA+xH8afeKXfm/iwG/1VZi14tOeXURHUKCmx2Wu7wsw=="}],"memo":""},"blockNum":"437423"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","1045223"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","300000"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","1045223"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"1045223ugnot","pkg_path":"gno.land/r/gnoswap/position","func":"Mint","args":["gnot","gno.land/r/gnoswap/gns","3000","-14520","-12540","1045223","300000","1039997","298500","7282571140","g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"vLZxlipJ5Tol14N34WtDgNCoaAeoyLHeJ1pU63edL8R+4S81SrR3iYc0s2MKkLOA9W5eVyGrpRbMURE/HmpH3g=="}],"memo":""},"blockNum":"437439"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","998775"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","300000"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","998775"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"998775ugnot","pkg_path":"gno.land/r/gnoswap/position","func":"Mint","args":["gnot","gno.land/r/gnoswap/gns","3000","-21720","-6540","998775","300000","993781","298500","7282571140","g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"7uEEw1tCIllcHA7Zt8tiHdleWZOQvlYVxht61l3CrOFjSh6x2BPqIUsiZHQikBv2Vdn53dFDORAuhphll9y9Fw=="}],"memo":""},"blockNum":"437453"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"Approve","args":["g1q6d4ns7zkr492rgl0pcgf5ajaf2dlz0nnptky3","132"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/staker","func":"StakeToken","args":["132"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"z7fe01vcdl6Sc2BJ0WFJeatCSqr706+4cRFjbCYWh+A74WW6QSwLrJOi5f7uYgzMZRl4IsQYCzZBVhvIvAAyDw=="}],"memo":""},"blockNum":"437465"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"2000000ugnot","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gnot","gno.land/r/onbloc/usdc","2000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/gnoswap/gns:3000*POOL*gno.land/r/gnoswap/gns:gno.land/r/onbloc/foo:500*POOL*gno.land/r/onbloc/foo:gno.land/r/onbloc/usdc:3000","100","51418788"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"+qIiGNAkUfKCo4PNvCm8svekAStqNtbpGUU9j+f5kbIO2obsaknE2O1OgCkBAgnw3gjGKnUBPC692QX5rAtpbg=="}],"memo":""},"blockNum":"437531"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","300000"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","30806619"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/position","func":"Mint","args":["gno.land/r/gnoswap/gns","gno.land/r/onbloc/usdc","500","44280","46290","300000","30806619","298500","30652586","7282571140","g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"/MAoF2k1DNYDEqYSOMC/kOmXtGPRFp1D4OXBWH6aNo4KRVaXqKgXtWxuVKxGz7o4MvCpTv5aiIhsRthDeMT2mw=="}],"memo":""},"blockNum":"437549"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","200000"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18618507"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/staker","func":"MintAndStake","args":["gno.land/r/gnoswap/gns","gno.land/r/onbloc/usdc","500","38400","52270","200000","18618507","199000","18525414","7282571140"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"cF3bpREy9EqhPknpezhkuofzt2GRxs4zM41wF5feXFoFYgMxoOv4Allyxt72PGqZ/Y5vQfbzR1IRA39psMA3vQ=="}],"memo":""},"blockNum":"437560"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","to_address":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","amount":"1000000ugnot"}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"BD6sZCHqFy4sNbL2zQT1hwJ09k16RYlK0M1dGUfX1LIj85ZHX/iavBEZlOf24i2zT2AiTcv2IBOvnvtDYQb8lA=="}],"memo":""},"blockNum":"437578"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Transfer","args":["g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","200000"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"XDTOZYgUHBfefVDAgZ2Tq/TREvT20G2EAtvdyKaJzppPLsXz5K7+1vTdhhurWYyW+R03/tQPzFkXju4PE193uQ=="}],"memo":""},"blockNum":"437587"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"icN9MgCr7pn8vQ9sJsCjH1J33NpUgk9enWBqiWGJkO1af7bc/u1Tr579NbGg5THcHFsB4tjf9dvtRXFjgLLWAQ=="}],"memo":""},"blockNum":"437619"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"3000000ugnot","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gnot","gno.land/r/gnoswap/gns","3000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/onbloc/usdc:3000*POOL*gno.land/r/onbloc/usdc:gno.land/r/gnoswap/gns:500","100","784035"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"xLgmK58wsAnboxziYb5UUe+Om1mh1XpuR4AqFuNNCU4XhZIaKHInNHY5W73uKEFxx1YLYUwCQE7BT7KX1YB0OA=="}],"memo":""},"blockNum":"437666"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","40760"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","1000000"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","40760"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"40760ugnot","pkg_path":"gno.land/r/gnoswap/staker","func":"MintAndStake","args":["gnot","gno.land/r/onbloc/usdc","3000","-887220","887220","40760","1000000","40556","995000","7282571140"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"eXhHRE8VNnQkHIRr4J174JYWNo5VhEIJbdxDh5BsYyh4qN0OYlYY1D0RBY0WBH+yTYReB6gWtTfxk4boGuxEcA=="}],"memo":""},"blockNum":"437691"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","44124"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","1000000"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","44124"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"44124ugnot","pkg_path":"gno.land/r/gnoswap/position","func":"Mint","args":["gnot","gno.land/r/onbloc/usdc","500","24280","38140","44124","1000000","43903","995000","7282571140","g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"FfEuJXty9mCulHXnRCgZw5FeGxQ8sPEOwDu652PcrX4Gp3fU1ZZRlmC0h6UgNIwM+Jrn7pYUwfGjUVVekmgqig=="}],"memo":""},"blockNum":"437705"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"Approve","args":["g1q6d4ns7zkr492rgl0pcgf5ajaf2dlz0nnptky3","136"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/staker","func":"StakeToken","args":["136"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"su1Y4X17eqJFyK4X6Sfz5xZw3KprUK/VM/m5vr8s8Lwa50UyvWMnOMk0lFwygKfmYuwpRPV8io28g/97DgMS9Q=="}],"memo":""},"blockNum":"437714"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1q6d4ns7zkr492rgl0pcgf5ajaf2dlz0nnptky3","2000000"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"2000000ugnot","pkg_path":"gno.land/r/gnoswap/staker","func":"CreateExternalIncentive","args":["gno.land/r/gnoswap/gns:gno.land/r/onbloc/usdc:500","gnot","2000000","1722038400","1729814400"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"29couwqqOHG/IDDxEeZs97smYwP4XQn+FojSZ1+4V7lmP4JbT6dgruhTrbc9Ubsvs8TEQ/VuakLV6r9ZhFzDtw=="}],"memo":""},"blockNum":"437732"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"Approve","args":["g1q6d4ns7zkr492rgl0pcgf5ajaf2dlz0nnptky3","133"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/staker","func":"StakeToken","args":["133"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"O24hlj3/oDDw7QXdZXq5FpfmfnfwNKnCfTpUUf0/cGsnDm9kgj4bd7EwgtjTbEeNZeZhCnWJsrzeJYhJgV8saw=="}],"memo":""},"blockNum":"437747"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"Approve","args":["g1q6d4ns7zkr492rgl0pcgf5ajaf2dlz0nnptky3","133"]},{"@type":"/vm.m_call","caller":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","send":"","pkg_path":"gno.land/r/gnoswap/staker","func":"StakeToken","args":["133"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"3sjUHxSC7XV5sH0hOcW277W0O7AttDqb6vxRX5Z+HCAxrAaDWW6DZ/lj1qHSQ/PnSxSM4A/6ltE9D9ZQDk6ggg=="}],"memo":""},"blockNum":"437761"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g18vaqtt5jrdhnsz7f4wl27j9z9txpaflsc0l43y","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxjyQBsJI8CesbgwihvS/eQtYKoezyoA9P+FRlLAKRwg"},"signature":"WVA4jLMq5Y9Vm27a/lk1vPZs4XqCDK/5SFlVkxCJdbUXULW89FawCmAKQIHQk3+CEbiPlmMcP1Da4wh0MSSpjA=="}],"memo":""},"blockNum":"438020"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","package":{"name":"hrl","path":"gno.land/r/g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y/hrl","files":[{"name":"package.gno","body":"package hrl\n\nimport (\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\nvar (\n\thrl   *grc20.AdminToken\n\tadmin std.Address = \"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8\" // TODO: helper to change admin\n)\n\nfunc init() {\n\thrl = grc20.NewAdminToken(\"hercule\", \"hrl\", 4)\n\thrl.Mint(admin, 1000000*100000)                                    // @administrator (1M)\n\thrl.Mint(\"g1h7yteaj4ewnms5az558manaw68fa8ldtt66376\", 100000*100000) // @hercule (100k)\n}\n\n// method proxies as public functions.\n\n// getters.\n\nfunc TotalSupply() uint64 {\n\treturn hrl.TotalSupply()\n}\n\nfunc BalanceOf(owner users.AddressOrName) uint64 {\n\tbalance, err := hrl.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\n\tallowance, err := hrl.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// setters.\n\nfunc Transfer(to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(spender users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\n// faucet.\n\nfunc Faucet() {\n\t// FIXME: add limits?\n\t// FIXME: add payment in gnot?\n\tcaller := std.GetOrigCaller()\n\thrl.Mint(caller, 1000*10000) // 1k\n}\n\n// administration.\n\nfunc Mint(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\thrl.Mint(address.Resolve(), amount)\n}\n\nfunc Burn(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\thrl.Burn(address.Resolve(), amount)\n}\n\n// render le rendu\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn hrl.RenderHome()\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\tbalance, _ := hrl.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n// secure access for admin :)\nfunc assertIsAdmin(address std.Address) {\n\tif address != admin {\n\t\tpanic(\"restricted access\")\n\t}\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"/6Z3ChVimsY+zUtSx0BfF7dJzWx3uuWh+F1aZ5N2QyBmIi6ndx9MhySGeOGx1f/TVVPENQo301Dhe75/VRV1CA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"439330"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","package":{"name":"hrl","path":"gno.land/r/g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y/hrl","files":[{"name":"package.gno","body":"package hrl\n\nimport (\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\nvar (\n\thrl   *grc20.AdminToken\n\tadmin std.Address = \"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8\" // TODO: helper to change admin\n)\n\nfunc init() {\n\thrl = grc20.NewAdminToken(\"hercule\", \"hrl\", 4)\n\thrl.Mint(admin, 1000000*100000)                                    // @administrator (1M)\n\thrl.Mint(\"g1h7yteaj4ewnms5az558manaw68fa8ldtt66376\", 100000*100000) // @hercule (100k)\n}\n\n// method proxies as public functions.\n\n// getters.\n\nfunc TotalSupply() uint64 {\n\treturn hrl.TotalSupply()\n}\n\nfunc BalanceOf(owner users.AddressOrName) uint64 {\n\tbalance, err := hrl.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\n\tallowance, err := hrl.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// setters.\n\nfunc Transfer(to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(spender users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\n// faucet.\n\nfunc Faucet() {\n\t// FIXME: add limits?\n\t// FIXME: add payment in gnot?\n\tcaller := std.GetOrigCaller()\n\thrl.Mint(caller, 1000*10000) // 1k\n}\n\n// administration.\n\nfunc Mint(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\thrl.Mint(address.Resolve(), amount)\n}\n\nfunc Burn(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\thrl.Burn(address.Resolve(), amount)\n}\n\n// render le rendu\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn hrl.RenderHome()\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\tbalance, _ := hrl.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n// secure access for admin :)\nfunc assertIsAdmin(address std.Address) {\n\tif address != admin {\n\t\tpanic(\"restricted access\")\n\t}\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"nU2+JqxOnhmwOlFPffqWaW9h19+G/oYH6BV7lpBsCLZzadW6p4eZCscUL8krlzt6vyokCqkM9xfIuF1OppP38A=="}],"memo":"Deployed through play.gno.land"},"blockNum":"439336"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","package":{"name":"hrl","path":"gno.land/r/g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y/hrl","files":[{"name":"package.gno","body":"package hrl\n\nimport (\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\nvar (\n\thrl   *grc20.AdminToken\n\tadmin std.Address = \"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y\" // TODO: helper to change admin\n)\n\nfunc init() {\n\thrl = grc20.NewAdminToken(\"hercule\", \"hrl\", 4)\n\thrl.Mint(admin, 1000000*100000)                                    // @administrator (1M)\n\thrl.Mint(\"g1h7yteaj4ewnms5az558manaw68fa8ldtt66376\", 100000*100000) // @hercule (100k)\n}\n\n// method proxies as public functions.\n\n// getters.\n\nfunc TotalSupply() uint64 {\n\treturn hrl.TotalSupply()\n}\n\nfunc BalanceOf(owner users.AddressOrName) uint64 {\n\tbalance, err := hrl.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\n\tallowance, err := hrl.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// setters.\n\nfunc Transfer(to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(spender users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\n// faucet.\n\nfunc Faucet() {\n\t// FIXME: add limits?\n\t// FIXME: add payment in gnot?\n\tcaller := std.GetOrigCaller()\n\thrl.Mint(caller, 1000*10000) // 1k\n}\n\n// administration.\n\nfunc Mint(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\thrl.Mint(address.Resolve(), amount)\n}\n\nfunc Burn(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\thrl.Burn(address.Resolve(), amount)\n}\n\n// render le rendu\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn hrl.RenderHome()\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\tbalance, _ := hrl.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n// secure access for admin :)\nfunc assertIsAdmin(address std.Address) {\n\tif address != admin {\n\t\tpanic(\"restricted access\")\n\t}\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"eottp/I42ghtrGUcrOnZvysL4lJC3zRKGMJPQ6gfOVtIW4RISEbgjm+gJ+Hyr2hXcL4+m5sed/jz4pVXNNAP0A=="}],"memo":"Deployed through play.gno.land"},"blockNum":"439399"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","package":{"name":"hrl","path":"gno.land/r/g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y/hrl","files":[{"name":"package.gno","body":"package hrl\n\nimport (\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\nvar (\n\thrl   *grc20.AdminToken\n\tadmin std.Address = \"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y\" // TODO: helper to change admin\n)\n\nfunc init() {\n\thrl = grc20.NewAdminToken(\"hercule\", \"hrl\", 4)\n\thrl.Mint(admin, 1000000*100000)                                    // @administrator (1M)\n\thrl.Mint(\"g1h7yteaj4ewnms5az558manaw68fa8ldtt66376\", 100000*100000) // @hercule (100k)\n}\n\n// method proxies as public functions.\n\n// getters.\n\nfunc TotalSupply() uint64 {\n\treturn hrl.TotalSupply()\n}\n\nfunc BalanceOf(owner users.AddressOrName) uint64 {\n\tbalance, err := hrl.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\n\tallowance, err := hrl.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// setters.\n\nfunc Transfer(to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(spender users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\n// faucet.\n\nfunc Faucet() {\n\t// FIXME: add limits?\n\t// FIXME: add payment in gnot?\n\tcaller := std.GetOrigCaller()\n\thrl.Mint(caller, 1000*10000) // 1k\n}\n\n// administration.\n\nfunc Mint(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\thrl.Mint(address.Resolve(), amount)\n}\n\nfunc Burn(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\thrl.Burn(address.Resolve(), amount)\n}\n\n// render le rendu\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn hrl.RenderHome()\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\tbalance, _ := hrl.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n// secure access for admin :)\nfunc assertIsAdmin(address std.Address) {\n\tif address != admin {\n\t\tpanic(\"restricted access\")\n\t}\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"NVnUYxfFTIkxFxrqZv15OOglQtjMZHeJLd9vNrRtRdlzAxclb8U0xu+hwY/1bEKf2xCrhxvrv/fmWkO20apVMA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"439409"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y","package":{"name":"hrl","path":"gno.land/r/g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y/hrl","files":[{"name":"package.gno","body":"package hrl\n\nimport (\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\nvar (\n\thrl   *grc20.AdminToken\n\tadmin std.Address = \"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8\" // TODO: helper to change admin\n)\n\nfunc init() {\n\thrl = grc20.NewAdminToken(\"hercule\", \"hrl\", 4)\n\thrl.Mint(admin, 1000000*100000)                                    // @administrator (1M)\n\thrl.Mint(\"g1qa4xzhx50fvh9mj709xf4793z2fzs67yy45t2y\", 100000*100000) // @hercule (100k)\n}\n\n// method proxies as public functions.\n\n// getters.\n\nfunc TotalSupply() uint64 {\n\treturn hrl.TotalSupply()\n}\n\nfunc BalanceOf(owner users.AddressOrName) uint64 {\n\tbalance, err := hrl.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\n\tallowance, err := hrl.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// setters.\n\nfunc Transfer(to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(spender users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\thrl.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\n// faucet.\n\nfunc Faucet() {\n\t// FIXME: add limits?\n\t// FIXME: add payment in gnot?\n\tcaller := std.GetOrigCaller()\n\thrl.Mint(caller, 1000*10000) // 1k\n}\n\n// administration.\n\nfunc Mint(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\thrl.Mint(address.Resolve(), amount)\n}\n\nfunc Burn(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\thrl.Burn(address.Resolve(), amount)\n}\n\n// render le rendu\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn hrl.RenderHome()\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\tbalance, _ := hrl.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n// secure access for admin :)\nfunc assertIsAdmin(address std.Address) {\n\tif address != admin {\n\t\tpanic(\"restricted access\")\n\t}\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4a2XBnWMz5IuZoNtes1zaQEI6zGYrRrGwFhdCQxaG9n"},"signature":"R+1J5xeYSYExPl4+OM5VZxvwKRkL6ceHWo99zDIu/Td6jn8DzUka77HyyvMh0KTVM9VR3rwB29aN+vYtV/8b7A=="}],"memo":"Deployed through play.gno.land"},"blockNum":"439433"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8","package":{"name":"dpxtr","path":"gno.land/r/g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8/dpxtr","files":[{"name":"drpxtr.gno","body":"package dpxtr\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tdpxtr   *grc20.AdminToken\r\n\tadmin std.Address = \"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8\" // TODO: helper to change admin\r\n)\r\n\r\nfunc init() {\r\n\tdpxtr = grc20.NewAdminToken(\"Dropxtor\", \"DPXTR\", 4)\r\n\tdpxtr.Mint(admin, 1000000*100000)                                    // @administrator (1M)\r\n\tdpxtr.Mint(\"g1h7yteaj4ewnms5az558manaw68fa8ldtt66376\", 100000*100000) // @cryptopunkstar (100k)\r\n}\r\n\r\n// method proxies as public functions.\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn dpxtr.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := dpxtr.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := dpxtr.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tdpxtr.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tdpxtr.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tdpxtr.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// faucet.\r\n\r\nfunc Faucet() {\r\n\t// FIXME: add limits?\r\n\t// FIXME: add payment in gnot?\r\n\tcaller := std.GetOrigCaller()\r\n\tdpxtr.Mint(caller, 1000*10000) // 1k\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tdpxtr.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tdpxtr.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render le rendu\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn dpxtr.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := dpxtr.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n// secure access for admin :)\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"},{"name":"package.gno","body":"package dpxtr\n\nimport (\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\nvar (\n\tdpxtr   *grc20.AdminToken\n\tadmin std.Address = \"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8\" // TODO: helper to change admin\n)\n\nfunc init() {\n\tdpxtr = grc20.NewAdminToken(\"Dropxtor\", \"DPXTR\", 4)\n\tdpxtr.Mint(admin, 1000000*100000)                                    // @administrator (1M)\n\tdpxtr.Mint(\"g1h7yteaj4ewnms5az558manaw68fa8ldtt66376\", 100000*100000) // @cryptopunkstar (100k)\n}\n\n// method proxies as public functions.\n\n// getters.\n\nfunc TotalSupply() uint64 {\n\treturn dpxtr.TotalSupply()\n}\n\nfunc BalanceOf(owner users.AddressOrName) uint64 {\n\tbalance, err := dpxtr.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\n\tallowance, err := dpxtr.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// setters.\n\nfunc Transfer(to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tdpxtr.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(spender users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tdpxtr.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tdpxtr.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\n// faucet.\n\nfunc Faucet() {\n\t// FIXME: add limits?\n\t// FIXME: add payment in gnot?\n\tcaller := std.GetOrigCaller()\n\tdpxtr.Mint(caller, 1000*10000) // 1k\n}\n\n// administration.\n\nfunc Mint(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\tdpxtr.Mint(address.Resolve(), amount)\n}\n\nfunc Burn(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\tdpxtr.Burn(address.Resolve(), amount)\n}\n\n// render le rendu\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn dpxtr.RenderHome()\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\tbalance, _ := dpxtr.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n// secure access for admin :)\nfunc assertIsAdmin(address std.Address) {\n\tif address != admin {\n\t\tpanic(\"restricted access\")\n\t}\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9ABK1ikjJNzBdE6cNiD+2r/OW6a7KdUm6Xu0+4H0gdl"},"signature":"/m5XAfaSjA+bnm+DB9s6JFgxFcQ1RJFbPrXYiRTbH60MH9SzXSO4m4BvHzJoU4jAQIK58l/bOwluyVYhThI0EQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"439486"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8","package":{"name":"dpxtr","path":"gno.land/r/g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8/dpxtr","files":[{"name":"drpxtr.gno","body":"package dpxtr\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tdpxtr   *grc20.AdminToken\r\n\tadmin std.Address = \"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8\" // TODO: helper to change admin\r\n)\r\n\r\nfunc init() {\r\n\tdpxtr = grc20.NewAdminToken(\"Dropxtor\", \"DPXTR\", 4)\r\n\tdpxtr.Mint(admin, 1000000*100000)                                    // @administrator (1M)\r\n\tdpxtr.Mint(\"g1h7yteaj4ewnms5az558manaw68fa8ldtt66376\", 100000*100000) // @cryptopunkstar (100k)\r\n}\r\n\r\n// method proxies as public functions.\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn dpxtr.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := dpxtr.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := dpxtr.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tdpxtr.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tdpxtr.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tdpxtr.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// faucet.\r\n\r\nfunc Faucet() {\r\n\t// FIXME: add limits?\r\n\t// FIXME: add payment in gnot?\r\n\tcaller := std.GetOrigCaller()\r\n\tdpxtr.Mint(caller, 1000*10000) // 1k\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tdpxtr.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tdpxtr.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render le rendu\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn dpxtr.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := dpxtr.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n// secure access for admin :)\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"},{"name":"package.gno","body":"package dpxtr\n\nimport (\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\nvar (\n\tdpxtr   *grc20.AdminToken\n\tadmin std.Address = \"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8\" // TODO: helper to change admin\n)\n\nfunc init() {\n\tdpxtr = grc20.NewAdminToken(\"Dropxtor\", \"DPXTR\", 4)\n\tdpxtr.Mint(admin, 1000000*100000)                                    // @administrator (1M)\n\tdpxtr.Mint(\"g1h7yteaj4ewnms5az558manaw68fa8ldtt66376\", 100000*100000) // @cryptopunkstar (100k)\n}\n\n// method proxies as public functions.\n\n// getters.\n\nfunc TotalSupply() uint64 {\n\treturn dpxtr.TotalSupply()\n}\n\nfunc BalanceOf(owner users.AddressOrName) uint64 {\n\tbalance, err := dpxtr.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\n\tallowance, err := dpxtr.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// setters.\n\nfunc Transfer(to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tdpxtr.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(spender users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tdpxtr.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tdpxtr.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\n// faucet.\n\nfunc Faucet() {\n\t// FIXME: add limits?\n\t// FIXME: add payment in gnot?\n\tcaller := std.GetOrigCaller()\n\tdpxtr.Mint(caller, 1000*10000) // 1k\n}\n\n// administration.\n\nfunc Mint(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\tdpxtr.Mint(address.Resolve(), amount)\n}\n\nfunc Burn(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\tdpxtr.Burn(address.Resolve(), amount)\n}\n\n// render le rendu\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn dpxtr.RenderHome()\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\tbalance, _ := dpxtr.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n// secure access for admin :)\nfunc assertIsAdmin(address std.Address) {\n\tif address != admin {\n\t\tpanic(\"restricted access\")\n\t}\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9ABK1ikjJNzBdE6cNiD+2r/OW6a7KdUm6Xu0+4H0gdl"},"signature":"Uxun7V1RyjqOY6U3aj2xu3vXShYvh2jZa1iuv8AyQ4BiqZAMqJ1GJS0b3nDa/3ZmMKNQn2wgMZ7NMYtV29JCeA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"439511"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8","package":{"name":"lemoncoin","path":"gno.land/r/g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8/lemoncoin","files":[{"name":"lemoncoin.gno","body":"import (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tlemon   *grc20.AdminToken\r\n\tadmin std.Address = \"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8\" // TODO: helper to change admin\r\n)\r\n\r\nfunc init() {\r\n\tlemon = grc20.NewAdminToken(\"lemomcoin\", \"lemon\", 4)\r\n\tlemon.Mint(admin, 1000000*100000)                                    // @administrator (1M)\r\n\tlemon.Mint(\"g1h7yteaj4ewnms5az558manaw68fa8ldtt66376\", 100000*100000) // @lemomcoin (100k)\r\n}\r\n\r\n// method proxies as public functions.\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn lemon.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := lemon.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := lemon.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// faucet.\r\n\r\nfunc Faucet() {\r\n\t// FIXME: add limits?\r\n\t// FIXME: add payment in gnot?\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.Mint(caller, 1000*10000) // 1k\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlemon.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlemon.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render le rendu\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn lemon.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := lemon.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n// secure access for admin :)\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9ABK1ikjJNzBdE6cNiD+2r/OW6a7KdUm6Xu0+4H0gdl"},"signature":"Kn2O4urbhhJAGKaSG3IZUn9qqoOpEFnL8BbnPClh6OxRsySnFeR/yvZxOhrPpSqT6sTbwpk5K9c/iRJhagl46w=="}],"memo":"Deployed through play.gno.land"},"blockNum":"439630"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8","package":{"name":"lemoncoin","path":"gno.land/r/g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8/lemoncoin","files":[{"name":"lemoncoin.gno","body":"import (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tlemon   *grc20.AdminToken\r\n\tadmin std.Address = \"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8\" // TODO: helper to change admin\r\n)\r\n\r\nfunc init() {\r\n\tlemon = grc20.NewAdminToken(\"lemomcoin\", \"lemon\", 4)\r\n\tlemon.Mint(admin, 1000000*100000)                                    // @administrator (1M)\r\n\tlemon.Mint(\"g1h7yteaj4ewnms5az558manaw68fa8ldtt66376\", 100000*100000) // @lemomcoin (100k)\r\n}\r\n\r\n// method proxies as public functions.\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn lemon.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := lemon.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := lemon.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// faucet.\r\n\r\nfunc Faucet() {\r\n\t// FIXME: add limits?\r\n\t// FIXME: add payment in gnot?\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.Mint(caller, 1000*10000) // 1k\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlemon.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlemon.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render le rendu\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn lemon.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := lemon.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n// secure access for admin :)\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9ABK1ikjJNzBdE6cNiD+2r/OW6a7KdUm6Xu0+4H0gdl"},"signature":"g/vTpOTFGY2zO2T7xE4Kp6Tqh/cYKlr/uRK0FNK621RlAXIMchXKVtnB7Kj6jOdjZrT77jyRP6tW75TguzlXjA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"439643"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8","package":{"name":"lemoncoin","path":"gno.land/r/g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8/lemoncoin","files":[{"name":"lemoncoin.gno","body":"import (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tlemon   *grc20.AdminToken\r\n\tadmin std.Address = \"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8\" // TODO: helper to change admin\r\n)\r\n\r\nfunc init() {\r\n\tlemon = grc20.NewAdminToken(\"lemomcoin\", \"lemon\", 4)\r\n\tlemon.Mint(admin, 1000000*100000)                                    // @administrator (1M)\r\n\tlemon.Mint(\"g1h7yteaj4ewnms5az558manaw68fa8ldtt66376\", 100000*100000) // @lemomcoin (100k)\r\n}\r\n\r\n// method proxies as public functions.\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn lemon.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := lemon.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := lemon.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// faucet.\r\n\r\nfunc Faucet() {\r\n\t// FIXME: add limits?\r\n\t// FIXME: add payment in gnot?\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.Mint(caller, 1000*10000) // 1k\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlemon.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlemon.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render le rendu\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn lemon.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := lemon.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n// secure access for admin :)\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9ABK1ikjJNzBdE6cNiD+2r/OW6a7KdUm6Xu0+4H0gdl"},"signature":"3b3yfHIP7GO3QJnpLeYpP+pHhcUEwtFbQhxyDW0E4a1zddB5W6/QFHH5c1Y1XWLL43vhR+hKTuZn+C8r1TNi3w=="}],"memo":"Deployed through play.gno.land"},"blockNum":"439651"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8","package":{"name":"lemoncoin","path":"gno.land/r/g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8/lemoncoin","files":[{"name":"lemoncoin.gno","body":"import (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tlemon   *grc20.AdminToken\r\n\tadmin std.Address = \"g19y8hwqwp43ena79yg95nv6nfzhmyn90zcvx0u8\" // TODO: helper to change admin\r\n)\r\n\r\nfunc init() {\r\n\tlemon = grc20.NewAdminToken(\"lemomcoin\", \"lemon\", 4)\r\n\tlemon.Mint(admin, 1000000*100000)                                    // @administrator (1M)\r\n\tlemon.Mint(\"g1h7yteaj4ewnms5az558manaw68fa8ldtt66376\", 100000*100000) // @lemomcoin (100k)\r\n}\r\n\r\n// method proxies as public functions.\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn lemon.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := lemon.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := lemon.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// faucet.\r\n\r\nfunc Faucet() {\r\n\t// FIXME: add limits?\r\n\t// FIXME: add payment in gnot?\r\n\tcaller := std.GetOrigCaller()\r\n\tlemon.Mint(caller, 1000*10000) // 1k\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlemon.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlemon.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render le rendu\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn lemon.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := lemon.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n// secure access for admin :)\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9ABK1ikjJNzBdE6cNiD+2r/OW6a7KdUm6Xu0+4H0gdl"},"signature":"vGQb+xnDlNGENIwoYCmYs2ica+BFoXfZA//NVGhy6b0V/E6y5Z90+XdomoGp9T9uiyedUsRtySfcYZKfNv6A8w=="}],"memo":"Deployed through play.gno.land"},"blockNum":"439666"}
