{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g1jltdynq9exwhv6ku2vx70a0l6msd7xcn7qhx5h","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxjyQBsJI8CesbgwihvS/eQtYKoezyoA9P+FRlLAKRwg"},"signature":"OuFbtBIbOlLJJ8KDGI7Bg/YWPWMKgc4ep5B6/G+Pd+s0xTa57x2o9P7owJ3Dbri3XudYaOMII2ZTr66ou+gXNQ=="}],"memo":""},"blockNum":"1290438"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jltdynq9exwhv6ku2vx70a0l6msd7xcn7qhx5h","to_address":"g13qpel38unrma0nyrj29tr903pq7dpeecsmlu8z","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlC2czZoFWGHXKoL6PZLl25pp6Z6j3rULA2EpbBlOFRl"},"signature":"5mCxyqIVkXCsE54tyzckYe9s25+LIClb3KB0xR1GWk4ECoH1aAaiRFHbrzerGF8ZJdNJVojaYQOTuzql8MPRMg=="}],"memo":""},"blockNum":"1290446"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g1c3jz8cyq3shz54ltx6qn7gzydn0l9azeus2rux","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxjyQBsJI8CesbgwihvS/eQtYKoezyoA9P+FRlLAKRwg"},"signature":"6+tGNUR2dE2ptja230SoaI0QP/TQAaX6hGwOhJssubh9MEaT23LVck5RUXniCBzVX4Z6+FFKP8bUlAk6+IGzFw=="}],"memo":""},"blockNum":"1292927"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1c3jz8cyq3shz54ltx6qn7gzydn0l9azeus2rux","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"ibmUnZmBkSEKKNgqReVjlj9U57BQ/2cUYzk2GibCCeRREYfLa5nrxAp0DVtNWkB2B4NTJvyddptvCkkIPOqfQQ=="}],"memo":""},"blockNum":"1292935"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1c3jz8cyq3shz54ltx6qn7gzydn0l9azeus2rux","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g126swhfaq2vyvvjywevhgw7lv9hg8qan93dasu8","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1c3jz8cyq3shz54ltx6qn7gzydn0l9azeus2rux","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1cnz5gm2l09pm2k6rknjjar9a2w53fdhk4yjzy5","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1c3jz8cyq3shz54ltx6qn7gzydn0l9azeus2rux","send":"","pkg_path":"gno.land/r/gnoswap/v2/gns","func":"Approve","args":["g1cnz5gm2l09pm2k6rknjjar9a2w53fdhk4yjzy5","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1c3jz8cyq3shz54ltx6qn7gzydn0l9azeus2rux","send":"1000000ugnot","pkg_path":"gno.land/r/gnoswap/v2/router","func":"SwapRoute","args":["gnot","gno.land/r/gnoswap/v2/gns","1000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/gnoswap/v2/gns:3000","100","1001183"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ah/ktbgx8MXuhc9cIvgtE7W4wyYyqO352iYAJK8CGKgI"},"signature":"5IcSLtObjp3XCflPB5OX9KkVJe6bncFXuUuDY22q0pEoBTASHuyn+BPznZ5/zqmaJmRncHbizCnDJgWdKUi98w=="}],"memo":""},"blockNum":"1292969"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1c3jz8cyq3shz54ltx6qn7gzydn0l9azeus2rux","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g126swhfaq2vyvvjywevhgw7lv9hg8qan93dasu8","1000000"]},{"@type":"/vm.m_call","caller":"g1c3jz8cyq3shz54ltx6qn7gzydn0l9azeus2rux","send":"","pkg_path":"gno.land/r/gnoswap/v2/gns","func":"Approve","args":["g126swhfaq2vyvvjywevhgw7lv9hg8qan93dasu8","1014914"]},{"@type":"/vm.m_call","caller":"g1c3jz8cyq3shz54ltx6qn7gzydn0l9azeus2rux","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vsm68lq9cpn7x507s6gh59anmx86kxfhzyszu2","1000000"]},{"@type":"/vm.m_call","caller":"g1c3jz8cyq3shz54ltx6qn7gzydn0l9azeus2rux","send":"1000000ugnot","pkg_path":"gno.land/r/gnoswap/v2/position","func":"Mint","args":["gnot","gno.land/r/gnoswap/v2/gns","3000","-6840","7020","1000000","1014914","995000","1009839","7282571140","g1c3jz8cyq3shz54ltx6qn7gzydn0l9azeus2rux"]},{"@type":"/vm.m_call","caller":"g1c3jz8cyq3shz54ltx6qn7gzydn0l9azeus2rux","send":"","pkg_path":"gno.land/r/gnoswap/v2/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ah/ktbgx8MXuhc9cIvgtE7W4wyYyqO352iYAJK8CGKgI"},"signature":"ppASG/4Qsrv+f1f8VBAdebwJM5hJae+99xJbNNgKb9YpZtxhUtCDrHxwpu1DslKYGtY4Qsfy2pTlB5zbIQfYDw=="}],"memo":""},"blockNum":"1292999"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14ks20xj4csuyn0jucwdt96rgr6cenht30avkyr","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g126swhfaq2vyvvjywevhgw7lv9hg8qan93dasu8","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g14ks20xj4csuyn0jucwdt96rgr6cenht30avkyr","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1cnz5gm2l09pm2k6rknjjar9a2w53fdhk4yjzy5","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g14ks20xj4csuyn0jucwdt96rgr6cenht30avkyr","send":"","pkg_path":"gno.land/r/gnoswap/v2/gns","func":"Approve","args":["g1cnz5gm2l09pm2k6rknjjar9a2w53fdhk4yjzy5","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g14ks20xj4csuyn0jucwdt96rgr6cenht30avkyr","send":"2000000ugnot","pkg_path":"gno.land/r/gnoswap/v2/router","func":"SwapRoute","args":["gnot","gno.land/r/gnoswap/v2/gns","2000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/gnoswap/v2/gns:3000","100","2002368"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5AUjFIdvgvvYPCszkBSj4LyyQVI/uczvuxzbg5IRDB3"},"signature":"o/8Cmi2FsbIMmua5kJg8AQqklNc9j4ZUdcINZzxaMgVnYn1r0Xlcr9wNjSUzmb5eGMs+W/NMkEC7C6xFPoDXRA=="}],"memo":""},"blockNum":"1293296"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1pxjzjgv397cyfyf6xdn3c5tlushrv4wzpk7qzc","send":"5ugnot","pkg_path":"gno.land/r/g1w62226g8hykfmtuasvz80rdf0jl6phgxsphh5v/testing/openocean","func":"AddCollection","args":["Test","MAT","A day in Iceland","QmP1V98qvTwQJ9cmTjpYDQVdqCJBz4jgxWN9AZq7p2m1U2","10"]}],"fee":{"gas_wanted":"5000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av41oIcbB3vupJJS7qgoapHkPMF5bLhII1MO3SPA62HH"},"signature":"cWrAlM8ogA7P2OUOcrJuTc9OeQEIT03gtQ2bUh3FucV9ft3soi6J3hmKA4g1rU9Z+OW0OR3A9zn6/keX9ADAtw=="}],"memo":""},"blockNum":"1304134"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g10aw0vhtdx6rtqkqefy22us2qc3gtcqm7e7wlys","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"msWFQqFsnIh8OtbKmqEhPvjK/ke4I19KLoed9Eb7JoQ0CdP4I8XOKzlmU4vvrgPUm4WovvGfLtwzyKA+9uX98Q=="}],"memo":""},"blockNum":"1304278"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g13nj98x767y0x9jfy8u2twjz2zlwtnph8j77ztc","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxjyQBsJI8CesbgwihvS/eQtYKoezyoA9P+FRlLAKRwg"},"signature":"Ob8QUFJtI0WLTNP31b2eQe5wo1smRh2AVkvjAWj94WlqdsQ65bQgqUnwqsKo/1BWc4yWuZhYKf6vnL2V1fqUDw=="}],"memo":""},"blockNum":"1306242"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g1jrvc6uphe80jfupx5p9eeepfucj5cxx3tecnht","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxjyQBsJI8CesbgwihvS/eQtYKoezyoA9P+FRlLAKRwg"},"signature":"uDWCJmthdfIpP34pR11L2XKdE7eebozpXk07fxzV7N4ECFyW1KiI014koSXRTQxebLVvcM7giwwRS5EUV+CMgg=="}],"memo":""},"blockNum":"1306253"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g13nj98x767y0x9jfy8u2twjz2zlwtnph8j77ztc","package":{"name":"poll","path":"gno.land/r/g13nj98x767y0x9jfy8u2twjz2zlwtnph8j77ztc/poll","files":[{"name":"package.gno","body":"package poll\n\nimport (\n\t\"errors\"\n\t\"std\"\n)\n\n// gno.land/p/demo/poll\n// avl tree\n\ntype Poll struct {\n\ttitle       string\n\tdescription string\n\tdeadline    int64               // block number\n\tvoters      map[std.Address]int // address (user) \u0026gt; yes/no // -1 = no, 1 = yes, 0 has not voted\n}\n\n// getters\n\nfunc (p Poll) Title() string {\n\treturn p.title\n}\n\nfunc (p Poll) Description() string {\n\treturn p.description\n}\n\nfunc (p Poll) Deadline() int64 {\n\treturn p.deadline\n}\n\nfunc (p Poll) Voters() map[std.Address]int {\n\treturn p.voters\n}\n\n// setters\n\nfunc (p *Poll) Vote(voter std.Address, vote int) error {\n\tif !voter.IsValid() {\n\t\treturn errors.New(\"voter address is not valid\")\n\t}\n\n\tif vote != -1 || vote != 1 {\n\t\treturn errors.New(\"invalid vote, needs to be -1 (no) or 1 (yes)\")\n\t}\n\n\tif _, exists := p.voters[voter]; exists {\n\t\treturn errors.New(\"voter already voted\")\n\t}\n\n\tp.voters[voter] = vote\n\n\treturn nil\n}\n\n// constructor\n\nfunc NewPoll(title, description string, deadline int64) (*Poll, error) {\n\tif title == \"\" || description == \"\" {\n\t\treturn nil, errors.New(\"you need to provide both the title and the description to the poll\")\n\t}\n\n\tcurrentBlockNumber := std.GetHeight() // now\n\tif deadline \u0026lt; currentBlockNumber {\n\t\treturn nil, errors.New(\"deadline needs to be in the future\")\n\t}\n\n\treturn \u0026amp;Poll{\n\t\ttitle:       title,\n\t\tdescription: description,\n\t\tdeadline:    deadline,\n\t\tvoters:      make(map[std.Address]int),\n\t}, nil\n}\n\nfunc (p Poll) VoteCount() (int, int) {\n\tvar yes int\n\n\tfor _, vote := range p.voters {\n\t\tif vote == 1 {\n\t\t\tyes += 1\n\t\t}\n\t}\n\n\ttotalVotes := len(p.voters)\n\n\treturn yes, totalVotes - yes\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqwAyr6qwim87JcuRFUC4sCwYXvvDSg6efnjSzML7B7R"},"signature":"LXf8Kkrg0N9LlBKRnFwtr2ww9H7hEa9HMzOzNhBHHloLO+hReGrXYl5iynlcY81+K/AwgiJSASXTT7jPEjfhHA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"1306337"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g13nj98x767y0x9jfy8u2twjz2zlwtnph8j77ztc","package":{"name":"poll","path":"gno.land/r/g13nj98x767y0x9jfy8u2twjz2zlwtnph8j77ztc/poll","files":[{"name":"package.gno","body":"package poll\n\nimport (\n\t\"errors\"\n\t\"std\"\n)\n\n// gno.land/p/demo/poll\n// avl tree\n\ntype Poll struct {\n\ttitle       string\n\tdescription string\n\tdeadline    int64               // block number\n\tvoters      map[std.Address]int // address (user) \u0026gt; yes/no // -1 = no, 1 = yes, 0 has not voted\n}\n\n// getters\n\nfunc (p Poll) Title() string {\n\treturn p.title\n}\n\nfunc (p Poll) Description() string {\n\treturn p.description\n}\n\nfunc (p Poll) Deadline() int64 {\n\treturn p.deadline\n}\n\nfunc (p Poll) Voters() map[std.Address]int {\n\treturn p.voters\n}\n\n// setters\n\nfunc (p *Poll) Vote(voter std.Address, vote int) error {\n\tif !voter.IsValid() {\n\t\treturn errors.New(\"voter address is not valid\")\n\t}\n\n\tif vote != -1 || vote != 1 {\n\t\treturn errors.New(\"invalid vote, needs to be -1 (no) or 1 (yes)\")\n\t}\n\n\tif _, exists := p.voters[voter]; exists {\n\t\treturn errors.New(\"voter already voted\")\n\t}\n\n\tp.voters[voter] = vote\n\n\treturn nil\n}\n\n// constructor\n\nfunc NewPoll(title, description string, deadline int64) (*Poll, error) {\n\tif title == \"\" || description == \"\" {\n\t\treturn nil, errors.New(\"you need to provide both the title and the description to the poll\")\n\t}\n\n\tcurrentBlockNumber := std.GetHeight() // now\n\tif deadline \u0026lt; currentBlockNumber {\n\t\treturn nil, errors.New(\"deadline needs to be in the future\")\n\t}\n\n\treturn \u0026Poll{\n\t\ttitle:       title,\n\t\tdescription: description,\n\t\tdeadline:    deadline,\n\t\tvoters:      make(map[std.Address]int),\n\t}, nil\n}\n\nfunc (p Poll) VoteCount() (int, int) {\n\tvar yes int\n\n\tfor _, vote := range p.voters {\n\t\tif vote == 1 {\n\t\t\tyes += 1\n\t\t}\n\t}\n\n\ttotalVotes := len(p.voters)\n\n\treturn yes, totalVotes - yes\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqwAyr6qwim87JcuRFUC4sCwYXvvDSg6efnjSzML7B7R"},"signature":"0wW3B4v42i7EUfY4Tbsl9u3+hbckR3SbXlFmuFrXczolwx155M5QRqu5wJNwpPFECZw8KLTxhOxxbdrJIThH1g=="}],"memo":"Deployed through play.gno.land"},"blockNum":"1306350"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g13nj98x767y0x9jfy8u2twjz2zlwtnph8j77ztc","package":{"name":"poll","path":"gno.land/r/g13nj98x767y0x9jfy8u2twjz2zlwtnph8j77ztc/poll","files":[{"name":"package.gno","body":"package poll\n\nimport (\n\t\"errors\"\n\t\"std\"\n)\n\n// gno.land/p/demo/poll\n// avl tree\n\ntype Poll struct {\n\ttitle       string\n\tdescription string\n\tdeadline    int64               // block number\n\tvoters      map[std.Address]int // address (user) \u0026gt; yes/no // -1 = no, 1 = yes, 0 has not voted\n}\n\n// getters\n\nfunc (p Poll) Title() string {\n\treturn p.title\n}\n\nfunc (p Poll) Description() string {\n\treturn p.description\n}\n\nfunc (p Poll) Deadline() int64 {\n\treturn p.deadline\n}\n\nfunc (p Poll) Voters() map[std.Address]int {\n\treturn p.voters\n}\n\n// setters\n\nfunc (p *Poll) Vote(voter std.Address, vote int) error {\n\tif !voter.IsValid() {\n\t\treturn errors.New(\"voter address is not valid\")\n\t}\n\n\tif vote != -1 || vote != 1 {\n\t\treturn errors.New(\"invalid vote, needs to be -1 (no) or 1 (yes)\")\n\t}\n\n\tif _, exists := p.voters[voter]; exists {\n\t\treturn errors.New(\"voter already voted\")\n\t}\n\n\tp.voters[voter] = vote\n\n\treturn nil\n}\n\n// constructor\n\nfunc NewPoll(title, description string, deadline int64) (*Poll, error) {\n\tif title == \"\" || description == \"\" {\n\t\treturn nil, errors.New(\"you need to provide both the title and the description to the poll\")\n\t}\n\n\tcurrentBlockNumber := std.GetHeight() // now\n\tif deadline \u0026 currentBlockNumber {\n\t\treturn nil, errors.New(\"deadline needs to be in the future\")\n\t}\n\n\treturn \u0026Poll{\n\t\ttitle:       title,\n\t\tdescription: description,\n\t\tdeadline:    deadline,\n\t\tvoters:      make(map[std.Address]int),\n\t}, nil\n}\n\nfunc (p Poll) VoteCount() (int, int) {\n\tvar yes int\n\n\tfor _, vote := range p.voters {\n\t\tif vote == 1 {\n\t\t\tyes += 1\n\t\t}\n\t}\n\n\ttotalVotes := len(p.voters)\n\n\treturn yes, totalVotes - yes\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqwAyr6qwim87JcuRFUC4sCwYXvvDSg6efnjSzML7B7R"},"signature":"A8ifPbNT8txP7C6ErbUivlNJSYFQLzsHn46VYDfyI/0nrrYiyfF4mUMFQSA8iM3oI9yk+T8kMdj/4OSZZybllw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"1306381"}
