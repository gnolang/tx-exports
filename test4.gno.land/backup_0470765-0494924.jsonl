{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/gnoswap/position","func":"CollectFee","args":["119"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/gnoswap/position","func":"CollectFee","args":["120"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/onbloc/foo","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/gnoswap/position","func":"CollectFee","args":["123"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/gnoswap/position","func":"CollectFee","args":["129"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/gnoswap/staker","func":"CollectReward","args":["129"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai9E2pMopMO+RCKw2hJMIIEXVjG98gjXWGAcWWyqUaUD"},"signature":"2RPfkajBc/2VeEKlNpd79r/GYEPxj9KJpj4mkKHsyb0Mrw8FXK2HZzNncjBuhQGx+KG9GqypcAwhm43JkL0+5g=="}],"memo":""},"blockNum":"471164"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","9223372036854775807"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","9223372036854775807"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","9223372036854775807"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/gnoswap/position","func":"DecreaseLiquidity","args":["119","100","0","0","9999999999","true"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai9E2pMopMO+RCKw2hJMIIEXVjG98gjXWGAcWWyqUaUD"},"signature":"z1k8lnJMoyAP/3gXCv+RTCu5c0gjs2ffpvZFnMctXS1mPpIRamkpqEJU8/xP2luPrzwMi56RnqiT9g6Fj51huw=="}],"memo":""},"blockNum":"471179"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1fv90q4fscffxadmtf7d93nvhvkl48g7zxeftng","send":"","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gno.land/r/onbloc/usdc","gnot","2538182","EXACT_IN","gno.land/r/onbloc/usdc:gno.land/r/demo/wugnot:10000","100","2525491"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai9E2pMopMO+RCKw2hJMIIEXVjG98gjXWGAcWWyqUaUD"},"signature":"+qCs0PsLxO47dVSU0SDnA8dy9iCNdZ6e1sWoC4kZBc4Cx86BTT0Ru07f0Z57MEJ6vwQ2uBwlSnEL+9PVV5q9xg=="}],"memo":""},"blockNum":"471182"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g1ulw7x7qvwd6gz6y96tntphaza8ul7495kass7k","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxjyQBsJI8CesbgwihvS/eQtYKoezyoA9P+FRlLAKRwg"},"signature":"9h7EpRyn0SmPTAMMMuXYDVPvSUX/ydaNwJBhA8OkZpAnPbqH/61ygeaPK50jswjGYgv4PJi5Z1qq6j1OzAlAcA=="}],"memo":""},"blockNum":"473877"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"3dWBS3W8lcBryTyv5DYolHuFSyQygWOZhmRWVyDkYTIWJU3kkiyTpLn0LkZTqZ7aAJfkaXbZkSTu7cHY+vWngg=="}],"memo":""},"blockNum":"476653"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"WAPDV2EpZOZVQANb8NkWrtuPcqkJfSfsvZ2TYyqdAv1+/6V2kunRSh286QBPw2P+/U4Vj+dd9Ep3BAHSluozwg=="}],"memo":""},"blockNum":"476813"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"kQeRM4fyOpM4J+j6NDjwI1+uBZcAMmMWesQAyTRqZs8WjOKQ2BHtS1VyUQ5THvqh741LJFO6LjE2vuHMlmb8hw=="}],"memo":""},"blockNum":"476821"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"OK/Kn8Jv7thE4+F6ROWRwLzYfW//NAr2nxnxUqpry/cBsQnITQtqXvHNGMj/M8pWV9WZeoWQooWXI62EH4j39g=="}],"memo":""},"blockNum":"476837"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"AuDbaDCVeNeJtAc2Pkqo/5QMHIlVV4uXzJEkgshRmQV9RpgVkC7dUyiMXekmwKswLXqiOJvwzIEwuv1WoQNYIw=="}],"memo":""},"blockNum":"476843"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1qz3s9hd7ycxrv8ge56t9mc5e37sgv7w268ruv2","amount":"5000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"9rga9I/YOt1EgB5FEWRITGH1TYidXuGOMoTPGKVSQVdJ6tywQmUCcP5R9+BZ2qv31MJ+kIJCRLfAFlkhaLyciw=="}],"memo":""},"blockNum":"476863"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"ong11nRtAS0lh1Fd1pMjKfRDlcM7bMyNOBx0AgYgqXhTGuTO4YE8Bf+eUl6It5CJgeKySA/ju85z+SDA1jYakQ=="}],"memo":""},"blockNum":"476878"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"WxcOlfV1PHJ8CEVBWlgHXvwVuJ81y/2mFPI1T4D6btkq2pFThYuWaTGJOpHSL+LCp/jwtyU3Pq7k8anBuLk7pQ=="}],"memo":""},"blockNum":"476884"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"52Vncied0PEQkkA5N1jhcntjFsWVQ6u5LN39Qt5U8C1i00q/KUzPN48uhaMyeIY9tQfjXD2KBL9Cw/cGf1lGaA=="}],"memo":""},"blockNum":"476919"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"5rQkiqf4RiCqW06U3VU7PUdPjs5p1+EqwZmx3gZVp/p0PJ3oi1j11F7ju92evk2xx7jvM1uph6AYzmMWuRc6Jg=="}],"memo":""},"blockNum":"476926"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"sfqKenyPXcuzdCTAxrRbagaKlQhgFySTYhMAIorQsUkaAiX/fX50VO+2m5WFMojTkpoQx/Sk5IvDeFIZAYf6CA=="}],"memo":""},"blockNum":"477080"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g17k4emey4xa7x32cjz36n63qwz466uwuwek4rl0","amount":"5000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"80mYWmht5ULnWaFuJZg9r4cuNRZB9jojkfRE9mRNnJ1PGYG/C8h9gNGe+Lplo4utVKlTKELc/SPGENxNjzGkiw=="}],"memo":""},"blockNum":"477133"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"H733ZPIr57PALdkkJraHHHz1hmU35aPgUV3TSXuQpmQD+tt99nTrTK3ctgIi0xXSNCpGTVZ2kfiWq8mVTAo+3w=="}],"memo":""},"blockNum":"477136"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"jxYItE7fqDz3ectoTAXGLichLGZhgjwCUuHXTNNI4/hXtF4VQn6WDbmuBCttlBuxI4u6j03NJ5O4gVg6ngnnyw=="}],"memo":""},"blockNum":"477143"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"NIIT5mZUu/YncaOaEnbX4xMNZWVkHeKeorBqg/6Nc8N2UKE5KYcvJInfsvJokyZtK5TO+TbxgNDxn1hz7iSNEw=="}],"memo":""},"blockNum":"477162"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1qxzqrpkg982aa6hvcccn5774y5m0md22yx2qyf","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"Dk5RbPoxnVUuYASQlTf/iG/zuFhsce0CzY8lVIE7u7wOnmR2BbTsIxp25phunDyp/xMAFP3yBH+R+/6zpKFtQA=="}],"memo":""},"blockNum":"477206"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"z3lDz7auY+k6IkVMGIWr1bZ0569rwO6Gi4HUgxNiGeNhaThWkesbr2Zw7VuMPVuOyvOvEJoenEJqw7kuHY9BFg=="}],"memo":""},"blockNum":"477256"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"7EoFW/FYDxbeyiS0GAw6MhISe+KZaWY8PFTHGRY0oeF/RTYQIWX1cDe1t/j6fGFd0S2P8K5AaEBQkA3Z9yreqw=="}],"memo":""},"blockNum":"477262"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"WaIdA522Qm//gyrEmjGrJgpXx8smelz6AZoExBhG6hUBlADgLgrs0yq2y9iQ4SDT35fqJsZsYf5IbhlPYM2tnQ=="}],"memo":""},"blockNum":"477270"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"dWaPk1am3OxWzX3LavpVR1V9CWEI2odtErSGGGXpAZI8m3AzioYy5429TX7GZEqVIphJpetJAqL3haE5m625gw=="}],"memo":""},"blockNum":"477294"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"jkiJhHTcYcSNQJgOmgbkRRHrUXhkwRpYTVHGUMJS2dk+h8ALPs0qeyk3PNBMmbYuwOxFZZdi64aVfD15Q4KNTA=="}],"memo":""},"blockNum":"477316"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"25000000ugnot","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gnot","gno.land/r/onbloc/usdc","25000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/gnoswap/gns:3000*POOL*gno.land/r/gnoswap/gns:gno.land/r/onbloc/foo:500*POOL*gno.land/r/onbloc/foo:gno.land/r/onbloc/usdc:3000","100","639476255"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"Lhvt/mtFriMA6CRPotnX8oA/tNw5oHwHphdnEZfLwj1xRpcWYJ1OHvcMhdrD0jjjoBERq1ErLdPl4ilxKlRxuw=="}],"memo":""},"blockNum":"477355"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"200000000ugnot","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gnot","gno.land/r/gnoswap/gns","200000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/onbloc/usdc:3000*POOL*gno.land/r/onbloc/usdc:gno.land/r/gnoswap/gns:500","100","51865111"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"xKBC8Knss/p7qvW2JEXd7b5PP0U7Dl6vjKg3Tei6abNtINPB88737wLIJEVLcPzQD91Pvt+qYP9ovWeujDAkUA=="}],"memo":""},"blockNum":"477367"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Transfer","args":["g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","52047552"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"jk0NLowHm5877XipWFoyRwXURm/SeSPube/89QmAMskurNroiId7ooPbmqJoIRlYJsL7q/OQ/sysSIMggljjFQ=="}],"memo":""},"blockNum":"477408"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Transfer","args":["g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","641725670"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"QSDNIdwKxmAHwGzycj29I4MFDwHtRnhRVyyzUqE/6AB3BywZ792Rg3GKTkufy3MIHCrAWSzAS0muEpf7LPpihg=="}],"memo":""},"blockNum":"477416"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ml0sppza9cwfj7rk7n2x5gg33c0nkr4hka6va9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"ugeOGU4Y4liyzgwltcVh8RQOxIM7gbKTmZg26VAwL3p5G11Z313dnLlpnRXaHDSXW7HrGzlYViIW5eTtY7/YgQ=="}],"memo":""},"blockNum":"477472"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","23895530"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","641725670"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","23895530"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"23895530ugnot","pkg_path":"gno.land/r/gnoswap/position","func":"Mint","args":["gnot","gno.land/r/onbloc/usdc","3000","30840","32880","23895530","641725670","23776052","638517042","7282571140","g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"7kBhwQa8U22x4x9Siay7C3o81Ira0kG2ceai2JS4k1AfgRavfalV+Lv/aWhODoVvf+vLTgYxZLeP46Cx4tLcdg=="}],"memo":""},"blockNum":"477479"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1faht56u24hdmxqlqxwwzhg7aje8kuuxycm2jj7","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"9dbhcAIl9lVasWrfpfQ9dApQY24XNzDPnlorGsMLnG4UPbuAhKTHCrwl7+1LZmByW41LrcP0TxGl84SwQYbZjg=="}],"memo":""},"blockNum":"477495"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ql9xl5ju8hwdkmegdhur3e22vkhrvdvz0u52kx","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"LCIqstZDObuZvAa57jC3fisBItH1bNlY2K5oGilj0rw3dmwywZOt3ICS5FSAwkUly7Gam67yeLuZM0vl0aV6aw=="}],"memo":""},"blockNum":"477512"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ydv52277l6ymexrrqampcvq8nnw64yaxnd2s4p","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"M8sytYo2qeQ2ZL1aSLl32rxyf1a8d97UJsBB8rpQWlUEDNqEesSHK3ORY6Stl/jaHJqHuIDnbqzgXA70kbtJ7Q=="}],"memo":""},"blockNum":"477517"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g15l0h5zwv5whpu5ewfudzymmza49dcz5sqpa57q","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"wmEEKRdoGlC+8NeY4BWorMMpd4HwjZ+iETT1/9sG7ao2E2dBFgg3vl3g311xbJ55EnWz7SCcXGWoR8EUdjEf7w=="}],"memo":""},"blockNum":"477524"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","23895530"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","641725670"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","23895530"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"23895530ugnot","pkg_path":"gno.land/r/gnoswap/position","func":"Mint","args":["gnot","gno.land/r/onbloc/usdc","3000","30840","32880","23895530","641725670","23776052","638517042","7282571140","g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"kCqjFKXJuxfQ9ipgTB3k2nrxGNLqenkACko5/QB8ytR8SL83RFkIB1TTtkIgcxpiYod5vrsdYC3011+xLq0LFg=="}],"memo":""},"blockNum":"477528"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1pqlrfryavh9v2shjz7v5lytmzwpmxddfl70vmm","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"5hKFaqTSEU3ujKUc16hQuusFcYiToMzTuoLKDTvTlXYzc/RcBYmfgqIWIKUYHzDoUms9niU4Kltq1vuxUZQCFA=="}],"memo":""},"blockNum":"477529"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","26358737"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","641725670"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","26358737"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"26358737ugnot","pkg_path":"gno.land/r/gnoswap/position","func":"Mint","args":["gnot","gno.land/r/onbloc/usdc","3000","25020","38880","26358737","641725670","26226943","638517042","7282571140","g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"lvig9YFpgVNLXZnPBl3+quqO2irgDgKwERGmxRYu+flKnxTTqXPHEvkluy7VDjKoD+jOy38qN65VbXozbIzfvQ=="}],"memo":""},"blockNum":"477541"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","26358737"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","641725670"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","26358737"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"26358737ugnot","pkg_path":"gno.land/r/gnoswap/staker","func":"MintAndStake","args":["gnot","gno.land/r/onbloc/usdc","3000","25020","38880","26358737","641725670","26226943","638517042","7282571140"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"XgLeRUoptSlxHCYWod2pNI0AF2VbzUSIMg3Yn1CdJwJO46wxPTcMmQ/flKzdphpvqbEmKdH+XI5WHtkBPruAog=="}],"memo":""},"blockNum":"477559"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1qj28hwjz67pv2cfquj84kcx8ta620fq89wph9v","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"3EzkPCvhUpfpNFd5WirxcwzDoSYrPl3jdYl0hhESmNxxHp3del4Q/jWG3iZasUpJ+VycaJFNaaTCFcGepsJFWw=="}],"memo":""},"blockNum":"477576"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1rxhf99d0gwm22tqknzj22yfsfywgz3lefmkwsr","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"A2zX2kyB1ReOTJaK8KuNwm7vk9bie8/pTw/ll3Xu5tEQFCrvbB/68MNq5i5VZUqOlHAUQ3kBoVIIVWIxMCZLYw=="}],"memo":""},"blockNum":"477582"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1k2wxt39jx5cty4p5ycrju8xuq3d598rtw6l7xh","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"0BxMUor46/Vr7STLdE3gBpffCQmrsCNFMRpcTM7jd2sm9aLaPAvg/HnTopIK75BCr5iIkVOmmojPREsTaDWkVQ=="}],"memo":""},"blockNum":"477590"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g10r43a6yahuygth0pammqukc22etsvv4amnsqge","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"knygD07JRhEQyacY23kXYFBki5P6IRmj3K/dEMxCOogoPQHw3TiSRBn8Tc4iahR7dRkXnfvpBYuyrKET0/vd7A=="}],"memo":""},"blockNum":"477598"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1jawlq4kq73xnf5hvz33fzw6fc7emcf7ft9r7fh","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"JEPYxizmA/GnmWsvCfWVCWylZ5sbFohmBVo8szRrcygm9euFijVq+JE2zQui0OWSaKB+oNBwVjea9lkNrR8m1w=="}],"memo":""},"blockNum":"477639"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1k55qu8w4p4qlqc2z8ys8s6h67aa3pgpd0nx5la","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"mRwhx6Wt3m0VaWtgJIw9oI3bzIWA0RbHnzhFdjxKv+ZBIvrdCpCFsCzhYRq5txaYO4i95v69k6IhIcZFeBjo4w=="}],"memo":""},"blockNum":"477646"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1sua6ma9avtnzpaslxku0yygmfzavxjw5m62wgn","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"3afby7/SxIDXXAxqJRgb6d+Pu2aZdSTs3mkT8wxi4xtQI4dwNh7fCSLCATK6X6YG2E4kwrPnXRhKrbiA3atqDA=="}],"memo":""},"blockNum":"477651"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g195t0kmk06rp7kyz4cpdse3pyerlpxjuvg9a7xd","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"Gg4Vzqa3ldiM9hLBt0cDT59oCKdmMw3Bg6x4ktB/wnMB8UvqjST9ug2m6qoW/GWfNOx4wwlaJ/UMjSoTJ96leg=="}],"memo":""},"blockNum":"477659"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"10000000ugnot","pkg_path":"gno.land/r/demo/wugnot","func":"Deposit","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"ov/iCGvQg4AIXvqQsQGAKnhSlsIc1Gy+jderXW/H3mktZhf35pcvj3XtjBqSI3PQyd9Rai8KKORkI7MsrrRhlw=="}],"memo":""},"blockNum":"477666"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1469pekhw5zvzjemld9f0deksjaeephepx8ygvk","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"YrtimjB9ahL6n6TqFxPqDui85LnIfAbIXaZpKHvGWftEa41gZxFgZkUfLXwvp4KrtXfrPfLg4HEbII8HucE+vw=="}],"memo":""},"blockNum":"477667"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g12f08xxluvq44hh8dfwlvf3jthfrfyjgyecpa6g","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"kZWeNwZEsw+HN84JnL0Eqy1hsBOXWNMrVjCOYAhOXtMTBAWx1O4B+U5f7plFB4OrLCNygdhDCNPXpsk4geP+1Q=="}],"memo":""},"blockNum":"477675"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","26358737"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","641725670"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","26358737"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"26358737ugnot","pkg_path":"gno.land/r/gnoswap/position","func":"Mint","args":["gnot","gno.land/r/onbloc/usdc","3000","25020","38880","26358737","641725670","26226943","638517042","7282571140","g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"3Ayi90rpJBaWBnJobVzeJnWqJoMT7858gH5eZVe3gqs2821gh6R1h6myYgA136CzlqPaJkKUBLlDyaaUw8giDw=="}],"memo":""},"blockNum":"477695"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","6805888"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/onbloc/usdc","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","641725670"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/staker","func":"MintAndStake","args":["gno.land/r/gnoswap/gns","gno.land/r/onbloc/usdc","3000","38520","52380","6805888","641725670","6771859","638517042","7282571140"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"Yu3nN+tDAzkCdzVt0VTroXE51RHMNzDnGo0K6ajH68oBim5VeZ53VKn3YPeLxU+TAr+cvcue3+/yqxpmY2z+Sg=="}],"memo":""},"blockNum":"477703"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g10jms90dc56wzr28rsptfj2kv6hj7uexv767qkn","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"2tgVLMAVLsgLjU/3qHglb+pdcOAZcQfQvAJZ9FHldCkEqPW7J0OSES/u+IjG4jGjVYSU1NEMuJEpK2RuF4TWzw=="}],"memo":""},"blockNum":"477706"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1e3kx94z8d9yd638x6pkef2ksnk4czauwkgkn4v","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"ZxpeRCz+UHZF5W1/lyihnxQK0gZnqAAWK1++vDzRQc43IZIBgS74TKR58t96K+0h3ddPVBouuY19hz//T1zogg=="}],"memo":""},"blockNum":"477710"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1fr49rv4pqme0fqw7jwjh8cfxuyps53rkhfnarq","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"UU7P1MRbY09kIZ764+Wp7ZQ4B/AMIlb7RuXKtwtGkTA9WMYzFoSqbDQB8+ogLUco2Ur7LXgZxC88Q/EaqC9rIg=="}],"memo":""},"blockNum":"477717"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"GSLICE","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/GSLICE","files":[{"name":"GSLICE.gno","body":"package gslice20\r\n\r\nimport (\r\n    \"std\"\r\n    \"strings\"\r\n\r\n    \"gno.land/p/demo/grc/grc20\"\r\n    \"gno.land/p/demo/ownable\"\r\n    \"gno.land/p/demo/ufmt\"\r\n    pusers \"gno.land/p/demo/users\"\r\n    \"gno.land/r/demo/users\"\r\n    \"gno.land/p/demo/math\" // Assuming a safe math library\r\n)\r\n\r\nvar (\r\n    banker *grc20.Banker\r\n    admin  *ownable.Ownable\r\n    token  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n    admin = ownable.NewWithAddress(\"g1newadminaddress\") // Replace with the actual admin address\r\n    banker = grc20.NewBanker(\"Gslice\", \"GSLICE\", 4) // \"Gslice\" is the name and \"GSLICE\" is the symbol\r\n    banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\r\n    token = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n    return token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    return token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    spenderAddr := users.Resolve(spender)\r\n    return token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n    spenderAddr := users.Resolve(spender)\r\n    currentAllowance := token.Allowance(std.Caller(), spenderAddr)\r\n    if currentAllowance != 0 {\r\n        checkErr(token.Approve(spenderAddr, 0))\r\n    }\r\n    checkErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n    fromAddr := users.Resolve(from)\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n    toAddr := users.Resolve(to)\r\n    checkErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n    fromAddr := users.Resolve(from)\r\n    checkErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n    parts := strings.Split(path, \"/\")\r\n    c := len(parts)\r\n\r\n    switch {\r\n    case path == \"\":\r\n        return banker.RenderHome()\r\n    case c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n        owner := pusers.AddressOrName(parts[1])\r\n        ownerAddr := users.Resolve(owner)\r\n        balance := banker.BalanceOf(ownerAddr)\r\n        return ufmt.Sprintf(\"%d\\n\", balance)\r\n    default:\r\n        return \"404\\n\"\r\n    }\r\n}\r\n\r\nfunc checkErr(err error) {\r\n    if err != nil {\r\n        // Proper error handling should be implemented here\r\n        panic(err) // Replace with proper error handling if needed\r\n    }\r\n}\r\n"},{"name":"package.gno","body":"package gslice20\n\nimport (\n    \"std\"\n    \"strings\"\n\n    \"gno.land/p/demo/grc/grc20\"\n    \"gno.land/p/demo/ownable\"\n    \"gno.land/p/demo/ufmt\"\n    pusers \"gno.land/p/demo/users\"\n    \"gno.land/r/demo/users\"\n    \"gno.land/p/demo/math\" // Assuming a safe math library\n)\n\nvar (\n    banker *grc20.Banker\n    admin  *ownable.Ownable\n    token  grc20.Token\n)\n\nfunc init() {\n    admin = ownable.NewWithAddress(\"g1newadminaddress\") // Replace with the actual admin address\n    banker = grc20.NewBanker(\"Gslice\", \"GSLICE\", 4) // \"Gslice\" is the name and \"GSLICE\" is the symbol\n    banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\n    token = banker.Token()\n}\n\nfunc TotalSupply() uint64 {\n    return token.TotalSupply()\n}\n\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\n    ownerAddr := users.Resolve(owner)\n    return token.BalanceOf(ownerAddr)\n}\n\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\n    ownerAddr := users.Resolve(owner)\n    spenderAddr := users.Resolve(spender)\n    return token.Allowance(ownerAddr, spenderAddr)\n}\n\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\n    toAddr := users.Resolve(to)\n    checkErr(token.Transfer(toAddr, amount))\n}\n\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\n    spenderAddr := users.Resolve(spender)\n    currentAllowance := token.Allowance(std.Caller(), spenderAddr)\n    if currentAllowance != 0 {\n        checkErr(token.Approve(spenderAddr, 0))\n    }\n    checkErr(token.Approve(spenderAddr, amount))\n}\n\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\n    fromAddr := users.Resolve(from)\n    toAddr := users.Resolve(to)\n    checkErr(token.TransferFrom(fromAddr, toAddr, amount))\n}\n\nfunc Mint(to pusers.AddressOrName, amount uint64) {\n    admin.AssertCallerIsOwner() // Ensure only the admin can mint\n    toAddr := users.Resolve(to)\n    checkErr(banker.Mint(toAddr, amount))\n}\n\nfunc Burn(from pusers.AddressOrName, amount uint64) {\n    admin.AssertCallerIsOwner() // Ensure only the admin can burn\n    fromAddr := users.Resolve(from)\n    checkErr(banker.Burn(fromAddr, amount))\n}\n\nfunc Render(path string) string {\n    parts := strings.Split(path, \"/\")\n    c := len(parts)\n\n    switch {\n    case path == \"\":\n        return banker.RenderHome()\n    case c == 2 \u0026\u0026 parts[0] == \"balance\":\n        owner := pusers.AddressOrName(parts[1])\n        ownerAddr := users.Resolve(owner)\n        balance := banker.BalanceOf(ownerAddr)\n        return ufmt.Sprintf(\"%d\\n\", balance)\n    default:\n        return \"404\\n\"\n    }\n}\n\nfunc checkErr(err error) {\n    if err != nil {\n        // Proper error handling should be implemented here\n        panic(err) // Replace with proper error handling if needed\n    }\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"iI+6KIauJ7gFUZ601NVBm15PY4xvpPBxNCqaARYXr4QkmYIPdGCqxmNJlI0zHrg3oAypH9U8p6rc+7VUZfxwoA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"478748"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"gslice","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/gslice","files":[{"name":"GSLICE.gno","body":"package gslice20\r\n\r\nimport (\r\n    \"std\"\r\n    \"strings\"\r\n\r\n    \"gno.land/p/demo/grc/grc20\"\r\n    \"gno.land/p/demo/ownable\"\r\n    \"gno.land/p/demo/ufmt\"\r\n    pusers \"gno.land/p/demo/users\"\r\n    \"gno.land/r/demo/users\"\r\n    \"gno.land/p/demo/math\" // Assuming a safe math library\r\n)\r\n\r\nvar (\r\n    banker *grc20.Banker\r\n    admin  *ownable.Ownable\r\n    token  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n    admin = ownable.NewWithAddress(\"g1newadminaddress\") // Replace with the actual admin address\r\n    banker = grc20.NewBanker(\"Gslice\", \"GSLICE\", 4) // \"Gslice\" is the name and \"GSLICE\" is the symbol\r\n    banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\r\n    token = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n    return token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    return token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    spenderAddr := users.Resolve(spender)\r\n    return token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n    spenderAddr := users.Resolve(spender)\r\n    currentAllowance := token.Allowance(std.Caller(), spenderAddr)\r\n    if currentAllowance != 0 {\r\n        checkErr(token.Approve(spenderAddr, 0))\r\n    }\r\n    checkErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n    fromAddr := users.Resolve(from)\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n    toAddr := users.Resolve(to)\r\n    checkErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n    fromAddr := users.Resolve(from)\r\n    checkErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n    parts := strings.Split(path, \"/\")\r\n    c := len(parts)\r\n\r\n    switch {\r\n    case path == \"\":\r\n        return banker.RenderHome()\r\n    case c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n        owner := pusers.AddressOrName(parts[1])\r\n        ownerAddr := users.Resolve(owner)\r\n        balance := banker.BalanceOf(ownerAddr)\r\n        return ufmt.Sprintf(\"%d\\n\", balance)\r\n    default:\r\n        return \"404\\n\"\r\n    }\r\n}\r\n\r\nfunc checkErr(err error) {\r\n    if err != nil {\r\n        // Proper error handling should be implemented here\r\n        panic(err) // Replace with proper error handling if needed\r\n    }\r\n}\r\n"},{"name":"package.gno","body":"package gslice20\n\nimport (\n    \"std\"\n    \"strings\"\n\n    \"gno.land/p/demo/grc/grc20\"\n    \"gno.land/p/demo/ownable\"\n    \"gno.land/p/demo/ufmt\"\n    pusers \"gno.land/p/demo/users\"\n    \"gno.land/r/demo/users\"\n    \"gno.land/p/demo/math\" // Assuming a safe math library\n)\n\nvar (\n    banker *grc20.Banker\n    admin  *ownable.Ownable\n    token  grc20.Token\n)\n\nfunc init() {\n    admin = ownable.NewWithAddress(\"g1newadminaddress\") // Replace with the actual admin address\n    banker = grc20.NewBanker(\"gslice\", \"gslice\", 4) // \"gslice\" is the name and symbol in lowercase\n    banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\n    token = banker.Token()\n}\n\nfunc TotalSupply() uint64 {\n    return token.TotalSupply()\n}\n\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\n    ownerAddr := users.Resolve(owner)\n    return token.BalanceOf(ownerAddr)\n}\n\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\n    ownerAddr := users.Resolve(owner)\n    spenderAddr := users.Resolve(spender)\n    return token.Allowance(ownerAddr, spenderAddr)\n}\n\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\n    toAddr := users.Resolve(to)\n    checkErr(token.Transfer(toAddr, amount))\n}\n\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\n    spenderAddr := users.Resolve(spender)\n    currentAllowance := token.Allowance(std.Caller(), spenderAddr)\n    if currentAllowance != 0 {\n        checkErr(token.Approve(spenderAddr, 0))\n    }\n    checkErr(token.Approve(spenderAddr, amount))\n}\n\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\n    fromAddr := users.Resolve(from)\n    toAddr := users.Resolve(to)\n    checkErr(token.TransferFrom(fromAddr, toAddr, amount))\n}\n\nfunc Mint(to pusers.AddressOrName, amount uint64) {\n    admin.AssertCallerIsOwner() // Ensure only the admin can mint\n    toAddr := users.Resolve(to)\n    checkErr(banker.Mint(toAddr, amount))\n}\n\nfunc Burn(from pusers.AddressOrName, amount uint64) {\n    admin.AssertCallerIsOwner() // Ensure only the admin can burn\n    fromAddr := users.Resolve(from)\n    checkErr(banker.Burn(fromAddr, amount))\n}\n\nfunc Render(path string) string {\n    parts := strings.Split(path, \"/\")\n    c := len(parts)\n\n    switch {\n    case path == \"\":\n        return banker.RenderHome()\n    case c == 2 \u0026\u0026 parts[0] == \"balance\":\n        owner := pusers.AddressOrName(parts[1])\n        ownerAddr := users.Resolve(owner)\n        balance := banker.BalanceOf(ownerAddr)\n        return ufmt.Sprintf(\"%d\\n\", balance)\n    default:\n        return \"404\\n\"\n    }\n}\n\nfunc checkErr(err error) {\n    if err != nil {\n        // Proper error handling should be implemented here\n        panic(err) // Replace with proper error handling if needed\n    }\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"HJ+D/T9p099H5Hu92mQqJxRMkywhkLglGIJSkqFpoWcd9TIUXIArgRSswwHW/BrUZ+g1fIZDFzmAK/HmwXfuoQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"478798"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"gslice","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/gslice","files":[{"name":"GSLICE.gno","body":"package gslice20\r\n\r\nimport (\r\n    \"std\"\r\n    \"strings\"\r\n\r\n    \"gno.land/p/demo/grc/grc20\"\r\n    \"gno.land/p/demo/ownable\"\r\n    \"gno.land/p/demo/ufmt\"\r\n    pusers \"gno.land/p/demo/users\"\r\n    \"gno.land/r/demo/users\"\r\n    \"gno.land/p/demo/math\" // Assuming a safe math library\r\n)\r\n\r\nvar (\r\n    banker *grc20.Banker\r\n    admin  *ownable.Ownable\r\n    token  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n    admin = ownable.NewWithAddress(\"g1newadminaddress\") // Replace with the actual admin address\r\n    banker = grc20.NewBanker(\"Gslice\", \"GSLICE\", 4) // \"Gslice\" is the name and \"GSLICE\" is the symbol\r\n    banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\r\n    token = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n    return token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    return token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    spenderAddr := users.Resolve(spender)\r\n    return token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n    spenderAddr := users.Resolve(spender)\r\n    currentAllowance := token.Allowance(std.Caller(), spenderAddr)\r\n    if currentAllowance != 0 {\r\n        checkErr(token.Approve(spenderAddr, 0))\r\n    }\r\n    checkErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n    fromAddr := users.Resolve(from)\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n    toAddr := users.Resolve(to)\r\n    checkErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n    fromAddr := users.Resolve(from)\r\n    checkErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n    parts := strings.Split(path, \"/\")\r\n    c := len(parts)\r\n\r\n    switch {\r\n    case path == \"\":\r\n        return banker.RenderHome()\r\n    case c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n        owner := pusers.AddressOrName(parts[1])\r\n        ownerAddr := users.Resolve(owner)\r\n        balance := banker.BalanceOf(ownerAddr)\r\n        return ufmt.Sprintf(\"%d\\n\", balance)\r\n    default:\r\n        return \"404\\n\"\r\n    }\r\n}\r\n\r\nfunc checkErr(err error) {\r\n    if err != nil {\r\n        // Proper error handling should be implemented here\r\n        panic(err) // Replace with proper error handling if needed\r\n    }\r\n}\r\n"},{"name":"package.gno","body":"package gslice20\n\nimport (\n    \"std\"\n    \"strings\"\n\n    \"gno.land/p/demo/grc/grc20\"\n    \"gno.land/p/demo/ownable\"\n    \"gno.land/p/demo/ufmt\"\n    pusers \"gno.land/p/demo/users\"\n    \"gno.land/r/demo/users\"\n    \"gno.land/p/demo/math\" // Assuming a safe math library\n)\n\nvar (\n    banker *grc20.Banker\n    admin  *ownable.Ownable\n    token  grc20.Token\n)\n\nfunc init() {\n    admin = ownable.NewWithAddress(\"g1newadminaddress\") // Replace with the actual admin address\n    banker = grc20.NewBanker(\"gslice\", \"gslice\", 4) // \"gslice\" is the name and symbol in lowercase\n    banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\n    token = banker.Token()\n}\n\nfunc TotalSupply() uint64 {\n    return token.TotalSupply()\n}\n\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\n    ownerAddr := users.Resolve(owner)\n    return token.BalanceOf(ownerAddr)\n}\n\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\n    ownerAddr := users.Resolve(owner)\n    spenderAddr := users.Resolve(spender)\n    return token.Allowance(ownerAddr, spenderAddr)\n}\n\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\n    toAddr := users.Resolve(to)\n    checkErr(token.Transfer(toAddr, amount))\n}\n\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\n    spenderAddr := users.Resolve(spender)\n    currentAllowance := token.Allowance(std.Caller(), spenderAddr)\n    if currentAllowance != 0 {\n        checkErr(token.Approve(spenderAddr, 0))\n    }\n    checkErr(token.Approve(spenderAddr, amount))\n}\n\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\n    fromAddr := users.Resolve(from)\n    toAddr := users.Resolve(to)\n    checkErr(token.TransferFrom(fromAddr, toAddr, amount))\n}\n\nfunc Mint(to pusers.AddressOrName, amount uint64) {\n    admin.AssertCallerIsOwner() // Ensure only the admin can mint\n    toAddr := users.Resolve(to)\n    checkErr(banker.Mint(toAddr, amount))\n}\n\nfunc Burn(from pusers.AddressOrName, amount uint64) {\n    admin.AssertCallerIsOwner() // Ensure only the admin can burn\n    fromAddr := users.Resolve(from)\n    checkErr(banker.Burn(fromAddr, amount))\n}\n\nfunc Render(path string) string {\n    parts := strings.Split(path, \"/\")\n    c := len(parts)\n\n    switch {\n    case path == \"\":\n        return banker.RenderHome()\n    case c == 2 \u0026\u0026 parts[0] == \"balance\":\n        owner := pusers.AddressOrName(parts[1])\n        ownerAddr := users.Resolve(owner)\n        balance := banker.BalanceOf(ownerAddr)\n        return ufmt.Sprintf(\"%d\\n\", balance)\n    default:\n        return \"404\\n\"\n    }\n}\n\nfunc checkErr(err error) {\n    if err != nil {\n        // Proper error handling should be implemented here\n        panic(err) // Replace with proper error handling if needed\n    }\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"dj6fs7bThUVY2QYDNE30/uOTKigCN/24Pg9dvwoBo5Jgp6pP3HzYE0Yl8ipXCmhXffncQZNHjCydw0nApUAr2A=="}],"memo":"Deployed through play.gno.land"},"blockNum":"478802"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"gslice","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/gslice","files":[{"name":"gslice.gno","body":"package gslice20\r\n\r\nimport (\r\n    \"std\"\r\n    \"strings\"\r\n\r\n    \"gno.land/p/demo/grc/grc20\"\r\n    \"gno.land/p/demo/ownable\"\r\n    \"gno.land/p/demo/ufmt\"\r\n    pusers \"gno.land/p/demo/users\"\r\n    \"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n    banker *grc20.Banker\r\n    admin  *ownable.Ownable\r\n    token  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n    admin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // Replace with the actual admin address\r\n    banker = grc20.NewBanker(\"gslice\", \"gslice\", 4) // \"gslice\" is the name and symbol in lowercase\r\n    banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\r\n    token = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n    return token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    return token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    spenderAddr := users.Resolve(spender)\r\n    return token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n    spenderAddr := users.Resolve(spender)\r\n    currentAllowance := token.Allowance(std.GetCaller(), spenderAddr)\r\n    if currentAllowance != 0 {\r\n        checkErr(token.Approve(spenderAddr, 0))\r\n    }\r\n    checkErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n    fromAddr := users.Resolve(from)\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n    toAddr := users.Resolve(to)\r\n    checkErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n    fromAddr := users.Resolve(from)\r\n    checkErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n    parts := strings.Split(path, \"/\")\r\n    c := len(parts)\r\n\r\n    switch {\r\n    case path == \"\":\r\n        return banker.RenderHome()\r\n    case c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n        owner := pusers.AddressOrName(parts[1])\r\n        ownerAddr := users.Resolve(owner)\r\n        balance := banker.BalanceOf(ownerAddr)\r\n        return ufmt.Sprintf(\"%d\\n\", balance)\r\n    default:\r\n        return \"404\\n\"\r\n    }\r\n}\r\n\r\nfunc checkErr(err error) {\r\n    if err != nil {\r\n        // Proper error handling should be implemented here\r\n        panic(err) // Replace with proper error handling if needed\r\n    }\r\n}\r\n"},{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"+6XZOOaoTxbVgckFVal2JhoO4qct0PxZ/Z/5Ufb+q3JD8OiM98NG5dDz8eoU2OISH3wnGwpbDpAyz4yhE1OPcw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"478915"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"gslice","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/gslice","files":[{"name":"gslice.gno","body":"package gslice20\r\n\r\nimport (\r\n    \"std\"\r\n    \"strings\"\r\n\r\n    \"gno.land/p/demo/grc/grc20\"\r\n    \"gno.land/p/demo/ownable\"\r\n    \"gno.land/p/demo/ufmt\"\r\n    pusers \"gno.land/p/demo/users\"\r\n    \"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n    banker *grc20.Banker\r\n    admin  *ownable.Ownable\r\n    token  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n    admin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // Replace with the actual admin address\r\n    banker = grc20.NewBanker(\"gslice\", \"GSLICE\", 4) // \"gslice\" is the name and \"GSLICE\" is the symbol\r\n    banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\r\n    token = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n    return token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    return token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    spenderAddr := users.Resolve(spender)\r\n    return token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n    spenderAddr := users.Resolve(spender)\r\n    currentAllowance := token.Allowance(std.Caller(), spenderAddr)\r\n    if currentAllowance != 0 {\r\n        checkErr(token.Approve(spenderAddr, 0))\r\n    }\r\n    checkErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n    fromAddr := users.Resolve(from)\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n    toAddr := users.Resolve(to)\r\n    checkErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n    fromAddr := users.Resolve(from)\r\n    checkErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n    parts := strings.Split(path, \"/\")\r\n    c := len(parts)\r\n\r\n    switch {\r\n    case path == \"\":\r\n        return banker.RenderHome()\r\n    case c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n        owner := pusers.AddressOrName(parts[1])\r\n        ownerAddr := users.Resolve(owner)\r\n        balance := banker.BalanceOf(ownerAddr)\r\n        return ufmt.Sprintf(\"%d\\n\", balance)\r\n    default:\r\n        return \"404\\n\"\r\n    }\r\n}\r\n\r\nfunc checkErr(err error) {\r\n    if err != nil {\r\n        // Proper error handling should be implemented here\r\n        panic(err) // Replace with proper error handling if needed\r\n    }\r\n}\r\n"},{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"M/PenwTXIIgh0wfNJNSr0DzVYkRrP3u+EavwSNiCiV5Ln6NeHdqjUYnTyN8/HjN0FtQy9ft06Lj4baDCsgP2VA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"478966"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"gslice","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/gslice","files":[{"name":"gslice.gno","body":"package gslice20\r\n\r\nimport (\r\n    \"std\"\r\n    \"strings\"\r\n\r\n    \"gno.land/p/demo/grc/grc20\"\r\n    \"gno.land/p/demo/ownable\"\r\n    \"gno.land/p/demo/ufmt\"\r\n    pusers \"gno.land/p/demo/users\"\r\n    \"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n    banker *grc20.Banker\r\n    admin  *ownable.Ownable\r\n    token  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n    admin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // Replace with the actual admin address\r\n    banker = grc20.NewBanker(\"gslice\", \"GSLICE\", 4) // \"gslice\" is the name and \"GSLICE\" is the symbol\r\n    banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\r\n    token = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n    return token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    return token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    spenderAddr := users.Resolve(spender)\r\n    return token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n    spenderAddr := users.Resolve(spender)\r\n    currentAllowance := token.Allowance(std.Caller(), spenderAddr)\r\n    if currentAllowance != 0 {\r\n        checkErr(token.Approve(spenderAddr, 0))\r\n    }\r\n    checkErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n    fromAddr := users.Resolve(from)\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n    toAddr := users.Resolve(to)\r\n    checkErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n    fromAddr := users.Resolve(from)\r\n    checkErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n    parts := strings.Split(path, \"/\")\r\n    c := len(parts)\r\n\r\n    switch {\r\n    case path == \"\":\r\n        return banker.RenderHome()\r\n    case c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n        owner := pusers.AddressOrName(parts[1])\r\n        ownerAddr := users.Resolve(owner)\r\n        balance := banker.BalanceOf(ownerAddr)\r\n        return ufmt.Sprintf(\"%d\\n\", balance)\r\n    default:\r\n        return \"404\\n\"\r\n    }\r\n}\r\n\r\nfunc checkErr(err error) {\r\n    if err != nil {\r\n        // Proper error handling should be implemented here\r\n        panic(err) // Replace with proper error handling if needed\r\n    }\r\n}\r\n"},{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"QYOd78Tj7Vk9doYQYWKrRM3DzcX2rFtreFMEfVv/wrZ4tHWqtFGsqmNCdeFn/6GFjgcQM7c5bZYj/2ZmwynUAA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"478972"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"gslice","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/gslice","files":[{"name":"gslice.gno","body":"package gslice20\r\n\r\nimport (\r\n        \"std\"\r\n        \"strings\"\r\n\r\n        \"gno.land/p/demo/grc/grc20\"\r\n        \"gno.land/p/demo/ownable\"\r\n        \"gno.land/p/demo/ufmt\"\r\n        pusers \"gno.land/p/demo/users\"\r\n        \"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n        banker *grc20.Banker\r\n        admin  *ownable.Ownable\r\n        token  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n        admin = ownable.NewWithAddress(\"g1newadminaddress\") // Replace with the actual admin address\r\n        banker = grc20.NewBanker(\"gslice\", \"GSLICE\", 4) // \"gslice\" is the name and \"GSLICE\" is the symbol\r\n        banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\r\n        token = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n        return token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n        ownerAddr := users.Resolve(owner)\r\n        return token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n        ownerAddr := users.Resolve(owner)\r\n        spenderAddr := users.Resolve(spender)\r\n        return token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n        toAddr := users.Resolve(to)\r\n        checkErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n        spenderAddr := users.Resolve(spender)\r\n        currentAllowance := token.Allowance(std.GetCaller(), spenderAddr)\r\n        if currentAllowance != 0 {\r\n                checkErr(token.Approve(spenderAddr, 0))\r\n        }\r\n        checkErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n        fromAddr := users.Resolve(from)\r\n        toAddr := users.Resolve(to)\r\n        checkErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n        admin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n        toAddr := users.Resolve(to)\r\n        checkErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n        admin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n        fromAddr := users.Resolve(from)\r\n        checkErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n        parts := strings.Split(path, \"/\")\r\n        c := len(parts)\r\n\r\n        switch {\r\n        case path == \"\":\r\n                return banker.RenderHome()\r\n        case c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n                owner := pusers.AddressOrName(parts[1])\r\n                ownerAddr := users.Resolve(owner)\r\n                balance := banker.BalanceOf(ownerAddr)\r\n                return ufmt.Sprintf(\"%d\\n\", balance)\r\n        default:\r\n                return \"404\\n\"\r\n        }\r\n}\r\n\r\nfunc checkErr(err error) {\r\n        if err != nil {\r\n                // Proper error handling should be implemented here\r\n                panic(err) // Replace with proper error handling if needed\r\n        }\r\n}\r\n"},{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"LOnupRtci3pl/OfP4qhkLqrBmlUELtLHVx1yZAzotJJyxuG94FZpqANv/EJDMJgB8NUtShmDA4B1nxNlmaTYyQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"479052"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"gslice","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/gslice","files":[{"name":"gslice.gno","body":"package gslice20\r\n\r\nimport (\r\n        \"std\"\r\n        \"strings\"\r\n\r\n        \"gno.land/p/demo/grc/grc20\"\r\n        \"gno.land/p/demo/ownable\"\r\n        \"gno.land/p/demo/ufmt\"\r\n        pusers \"gno.land/p/demo/users\"\r\n        \"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n        banker *grc20.Banker\r\n        admin  *ownable.Ownable\r\n        token  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n        admin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // Replace with the actual admin address\r\n        banker = grc20.NewBanker(\"gslice\", \"GSLICE\", 4) // \"gslice\" is the name and \"GSLICE\" is the symbol\r\n        banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\r\n        token = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n        return token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n        ownerAddr := users.Resolve(owner)\r\n        return token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n        ownerAddr := users.Resolve(owner)\r\n        spenderAddr := users.Resolve(spender)\r\n        return token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n        toAddr := users.Resolve(to)\r\n        checkErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n        spenderAddr := users.Resolve(spender)\r\n        currentAllowance := token.Allowance(std.GetCaller(), spenderAddr)\r\n        if currentAllowance != 0 {\r\n                checkErr(token.Approve(spenderAddr, 0))\r\n        }\r\n        checkErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n        fromAddr := users.Resolve(from)\r\n        toAddr := users.Resolve(to)\r\n        checkErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n        admin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n        toAddr := users.Resolve(to)\r\n        checkErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n        admin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n        fromAddr := users.Resolve(from)\r\n        checkErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n        parts := strings.Split(path, \"/\")\r\n        c := len(parts)\r\n\r\n        switch {\r\n        case path == \"\":\r\n                return banker.RenderHome()\r\n        case c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n                owner := pusers.AddressOrName(parts[1])\r\n                ownerAddr := users.Resolve(owner)\r\n                balance := banker.BalanceOf(ownerAddr)\r\n                return ufmt.Sprintf(\"%d\\n\", balance)\r\n        default:\r\n                return \"404\\n\"\r\n        }\r\n}\r\n\r\nfunc checkErr(err error) {\r\n        if err != nil {\r\n                // Proper error handling should be implemented here\r\n                panic(err) // Replace with proper error handling if needed\r\n        }\r\n}\r\n"},{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"kazZyW6jBz5W0sFHrpt5uPy1Oz2C7eDYHLtMwlXIwUshKOZOtKJlFotRlRe8c8Be1hrv/+lRdI8w/H6vm1oYiw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"479128"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"gslice","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/gslice","files":[{"name":"gslice.gno","body":"package gslice20\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ownable\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\tpusers \"gno.land/p/demo/users\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tbanker *grc20.Banker\r\n\tadmin  *ownable.Ownable\r\n\ttoken  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n\tadmin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // Replace with the actual admin address\r\n\tbanker = grc20.NewBanker(\"gslice\", \"GSLICE\", 4)                            // \"gslice\" is the name and \"GSLICE\" is the symbol\r\n\tbanker.Mint(admin.Owner(), 1000000000*10000)                               // Initial minting (1 billion tokens)\r\n\ttoken = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\treturn token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\tspenderAddr := users.Resolve(spender)\r\n\treturn token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n\tspenderAddr := users.Resolve(spender)\r\n\tcurrentAllowance := token.Allowance(std.GetCaller(), spenderAddr)\r\n\tif currentAllowance != 0 {\r\n\t\tcheckErr(token.Approve(spenderAddr, 0))\r\n\t}\r\n\tcheckErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n\tfromAddr := users.Resolve(from)\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n\tfromAddr := users.Resolve(from)\r\n\tcheckErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn banker.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := pusers.AddressOrName(parts[1])\r\n\t\townerAddr := users.Resolve(owner)\r\n\t\tbalance := banker.BalanceOf(ownerAddr)\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc checkErr(err error) {\r\n\tif err != nil {\r\n\t\t// Proper error handling should be implemented here\r\n\t\tpanic(err) // Replace with proper error handling if needed\r\n\t}\r\n}\r\n"},{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"vdjAwKLLiV9RXBgF5kNB02ZTzKLGYMyYy5WKrQ5DRQ9vtCCQ78JxEbkgOemPx034dTF9yEaeBn367qwlXEDNDQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"479153"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"gslice","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/gslice","files":[{"name":"gslice20.gno","body":"package gslice20\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ownable\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\tpusers \"gno.land/p/demo/users\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tbanker *grc20.Banker\r\n\tadmin  *ownable.Ownable\r\n\ttoken  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n\tadmin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // Replace with the actual admin address\r\n\tbanker = grc20.NewBanker(\"gslice\", \"GSLICE\", 4)                            // \"gslice\" is the name and \"GSLICE\" is the symbol\r\n\tbanker.Mint(admin.Owner(), 1000000000*10000)                               // Initial minting (1 billion tokens)\r\n\ttoken = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\treturn token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\tspenderAddr := users.Resolve(spender)\r\n\treturn token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n\tspenderAddr := users.Resolve(spender)\r\n\tcurrentAllowance := token.Allowance(std.GetCaller(), spenderAddr)\r\n\tif currentAllowance != 0 {\r\n\t\tcheckErr(token.Approve(spenderAddr, 0))\r\n\t}\r\n\tcheckErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n\tfromAddr := users.Resolve(from)\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n\tfromAddr := users.Resolve(from)\r\n\tcheckErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn banker.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := pusers.AddressOrName(parts[1])\r\n\t\townerAddr := users.Resolve(owner)\r\n\t\tbalance := banker.BalanceOf(ownerAddr)\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc checkErr(err error) {\r\n\tif err != nil {\r\n\t\t// Proper error handling should be implemented here\r\n\t\tpanic(err) // Replace with proper error handling if needed\r\n\t}\r\n}\r\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"KpAaZqBQEMPDs/x9qnULmFGLwu9HBuqpfn+mfL1pWch43JGo3Z2R1BKuu6iGNu7AGpysls6V13eJYwAdevUySg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"479182"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"candy","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy","files":[{"name":"candy.gno","body":"/ candy20 is a GRC20 token contract where all the GRC20 methods are proxified\r\n// with top-level functions. see also gno.land/r/demo/bar20.\r\npackage candy20\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ownable\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\tpusers \"gno.land/p/demo/users\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tbanker *grc20.Banker\r\n\tadmin  *ownable.Ownable\r\n\ttoken  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n\tadmin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // @gslice\r\n\tbanker = grc20.NewBanker(\"candy\", \"CANDY\", 4)\r\n\tbanker.Mint(admin.Owner(), 1000000000*10000) // @administrator (100M)\r\n\ttoken = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 { return token.TotalSupply() }\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\treturn token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\tspenderAddr := users.Resolve(spender)\r\n\treturn token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n\tspenderAddr := users.Resolve(spender)\r\n\tcheckErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n\tfromAddr := users.Resolve(from)\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\n// Faucet is distributing foo20 tokens without restriction (unsafe).\r\n// For a real token faucet, you should take care of setting limits are asking payment.\r\nfunc Faucet() {\r\n\tcaller := std.PrevRealm().Addr()\r\n\tamount := uint64(1_000 * 10_000) // 1k\r\n\tcheckErr(banker.Mint(caller, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner()\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner()\r\n\tfromAddr := users.Resolve(from)\r\n\tcheckErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn banker.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := pusers.AddressOrName(parts[1])\r\n\t\townerAddr := users.Resolve(owner)\r\n\t\tbalance := banker.BalanceOf(ownerAddr)\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc checkErr(err error) {\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}"},{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"c9TZtnlXeWnEx+BJxAmw40iNCtU4KAeGDEPnMTRKIWUbc7CQ8CjbYmsx3z21EwLicijR7oguT0GRJIq1ZPQhjg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"479281"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"sY2PMhjL7NmdVVJqvAAsPjNAI2upMUqUzHooj58rDpANQbYU6iwqPrIQmlesIhYwjXdZdgkl48eSwggduTRRiQ=="}],"memo":""},"blockNum":"479863"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"4w9JeJl+LMdtsbfbltgyU1+UB59ECHKEuu5mfoK77VJg5mYoTadDl5KJRwgsHbX9LszrziBBK3fYxW93qH3h4A=="}],"memo":""},"blockNum":"479871"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"dqMqa/JqGYv2sY0stFuOCI9sWVlIsEtAEQW4ddK3HosO8UMEuPeljyssX7ZzkKP4+iGW/ZofAhCID6t3LKlwcw=="}],"memo":""},"blockNum":"479881"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"f3rc2Y5c78LZ4ld0vEyxllh+KYFYXgH7U4Vcxel8LpcoRUdbjjJey8hVR15SGFyTcfsf7Om7ZpkV8QtNPg6TAg=="}],"memo":""},"blockNum":"479897"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"kQIJUAdGyHNrFYWSDyuUTB5dH5FWFhg1+xZj5WtpXm9LZw4WuY7haiwfHA6jOmtS2toGcj00vZqSF1witvbZIw=="}],"memo":""},"blockNum":"479913"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"3Gj5Z5UbYj+rOy0d9bbzzDsrh7RnVE7E0OQBNCjmSDwMpAFIM5HC33Y0wjLEfLEOgtzROLhap0LqpsItXGPYkg=="}],"memo":""},"blockNum":"480195"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"kpMGP2o47hbvwBs1jXSyrvj49grqlZTVgbjWLHAz0oYg89+Mssy9+RuG+qu1PD8Z7vgeYQqEuxKwPFRWFL9Ktw=="}],"memo":""},"blockNum":"480210"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"jEv27efECgEYx5NI/SS7r5Ia38KyPh1ZA9+Zq6bcq19aBHQRmB3cyOVOLEwy8/D5Rtj5kX18PLGcuAAyDjKGzA=="}],"memo":""},"blockNum":"480223"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"LIq8ZoVw4R2mmF6IyZ924krqWHG+ZSdH/h02jDcPZgEgcJxan24/1HXLXw+pl0u83ryt87v6ExAqIMXLM6+otQ=="}],"memo":""},"blockNum":"480234"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"C+wsh/qXA50DknnFReWckFWt35ERfbBtjSfQfuoaPYIz3RvHWC90JB/koMFjPCCJW7zvelmaEoSSZfe9G92UQw=="}],"memo":""},"blockNum":"480245"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"ku3XaJxi5wq+QIriP6mqF7/tHknQwvd80LIisbb9OmATBAKXVjQi6JV2E+5N0DS4u9Jtz/eTkhfrF8b+jXTppA=="}],"memo":""},"blockNum":"480265"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"SGXfXh+2DNvVIdoxT77K/lNsBVViY5S6lT7lsIWqVCsL+hfgX2okS2XGlVp5phFoMTabPcqpVOC6JguQX/kmCg=="}],"memo":""},"blockNum":"480280"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"tGlBfjzNm/UmF+wG87zzdwb5gOpaodW/+6//dCPNaz9FA9n3Wkd0riFfIiODgOjkDGnWfxFLfbqoJeROFvsDug=="}],"memo":""},"blockNum":"480328"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"250000000ugnot","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gnot","gno.land/r/gnoswap/gns","250000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/onbloc/usdc:3000*POOL*gno.land/r/onbloc/usdc:gno.land/r/gnoswap/gns:500","100","64792888"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"2oGyRKetO829ByrLzgYysJim98UbudU3HLs5NnZFfJEJVgjSguMHKpaFyIx3DW4TyfHQhe5xROOnSQKucoCh9A=="}],"memo":""},"blockNum":"480497"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gns","func":"Approve","args":["g1q6d4ns7zkr492rgl0pcgf5ajaf2dlz0nnptky3","60000000"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/staker","func":"CreateExternalIncentive","args":["gno.land/r/demo/wugnot:gno.land/r/gnoswap/gns:3000","gno.land/r/gnoswap/gns","60000000","1722211200","1729987200"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"ZzUGnEqlk5IPcwPp2L5OBP0WdP8Evbnf/5h7TInrDQovihJ5tvWXe5eLsf6rMHVn05J8qfMPYCA7biM6iB5drQ=="}],"memo":""},"blockNum":"480528"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"02UpwqwR0DzAGpxli+P+yvhuBh5GLIEHJ6DC38inGvh6eTYKXQWK0JXMrjpfDSsRTC0zxnkcLuOjjytHd/9Zuw=="}],"memo":""},"blockNum":"482859"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g18l9us6trqaljw39j94wzf5ftxmd9qqkvrxghd2","to_address":"g17gfqtnwukh7nr25evth9wpjv7hxdpdx2xcqnve","amount":"10000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxjyQBsJI8CesbgwihvS/eQtYKoezyoA9P+FRlLAKRwg"},"signature":"JF5FBvyTeU1kJ96/6cSlgrqHAOKBcqQcOH2ZX4fZu9BnRti8Vbnpnl9dcWlNZJhXgcWQzHfgXuzBo6HpLVXPRg=="}],"memo":""},"blockNum":"482954"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"gKdtlsMc3SU+ZtTT31+QmiSJTq2jSVlNml+iFyxsDbJgRG/+bBiuisBE4NzEOUaZ8YexRyPW5PjPSXP4FdRoYw=="}],"memo":""},"blockNum":"483767"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"OKNdqGUx3/go7YcOAFuk/KTVeGK5/NTHRXlVKACDEL9isFjhvE5Q5iUMkblQADlsmtknAbkuNxFo2NKk0U8O/g=="}],"memo":""},"blockNum":"483788"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"HEy3cqOQqtGBt10ygqJanN/XzbdEXjLp8VEZ16V54JIH2zV5/H2mndMYvVUs8RytN/ZHSJGIeyhnAFzKMyRZ/Q=="}],"memo":""},"blockNum":"484316"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"7jC3q5uU8S3UleLSp4mT4ZYCvuiMGnj0508eGV7ErpoHBQckqvKk72h8j3Dzq+/B2QKdW4uX+XQwNkGXKZptYw=="}],"memo":""},"blockNum":"484472"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"S53B4IaRsTJlItFMsAJ/eseXbBr5ePr4xbjZNIa94KgEsEFbDgxmRmMRqMRXPi23XQHz8cCMdhVeXuuUl1lIWQ=="}],"memo":""},"blockNum":"484479"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"BOYcXjH8gsKI8/uvAB7zfhIsCoD8/iXKBnRS4cYhoO1wJTVQgDLfzqo6pSbiGui0dqe+FVseqjCQYANqBDs6FQ=="}],"memo":""},"blockNum":"484505"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"ywQ6xYiJSURj51X7v91rxylBT8Pal7i/vdUHdo8bTpcg4nZ1gpcPyz8PVOLQBUN0XpqcKRh1B2KC/lO+PFqQGg=="}],"memo":""},"blockNum":"484521"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"X5mQOHyqMUB4L8cpNZa6dMeEATKXCodWAKmKuLW80W8vGNGocWPeBmOvAB+7JiVYMsjxB7Nbw07OtV6KfhaV0w=="}],"memo":""},"blockNum":"484544"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"PFY6Su+2nZ6Kmcj5Fxc8bhj1mYJHB93V8uUcrFibbzolxRMJ/2DDSVSxwhjGw5rTurhOL+xyb28fyj/c7NYETw=="}],"memo":""},"blockNum":"484560"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"Dj80YWQe6zVrwg+EGVVsl7YJW9afwXQ4aFk2I4VQILpfoJ7NVVXNby7HzRAO1LGLC+smtEblq41sW+mgbY8sOw=="}],"memo":""},"blockNum":"484576"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"kQlv0hR4a2Gp65CNDzJ91G18LdC/Rv0idfP0x+2wvh0hWClnpSpSW3NPKupW02SjhWCnI5z5YKg4L7SXXGPODg=="}],"memo":""},"blockNum":"484614"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"NhiJL01CVXHcBB7E1kBUd73ppwgXRpw8howcCeEdsBYCVkBLkHke+thq+0lKe/2EGCtd3kwqPl5FP90cuKRyjA=="}],"memo":""},"blockNum":"484710"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"YCZTBXDpIRNBYPT1roD69I+JfFyiiUDNtM7EQlRU+Sd8WL0DgOXfbT/Ur4E4EV71PaAsVkoGpO5mkYg5dzsfMA=="}],"memo":""},"blockNum":"484794"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"+LJ9EJnzMVAKavXvq2rtc6Plj5LklgIef0Hg/Kpspg8+nkWbQRFUfPG32H2bcNi/Dv+HwHKkkZY8cg6AcXbxKw=="}],"memo":""},"blockNum":"484804"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"xWNcC0Wy3VbYFQSkw0aUlQvCORGkU8MzwP3O4STWQn130W3BnMZTW7M3neD8y2xYiKv56eRD261GJOKDxQSu6Q=="}],"memo":""},"blockNum":"484818"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"2JwGXgobn8lMJmr84mDDOTNNlHlNp5brcnFXact+u8onkGlQk5PRS3/Z0Phu/NYeXo8UZGFVeMRp30Yu6pnhDA=="}],"memo":""},"blockNum":"484826"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"vZKTXrmV0A7vS2KrUH3+XmUAal3ueDgTOFqf27E+S/hdm9QVcV11l/i0SyG2HyB8TVXY5ccDTmr5yHVOMu4xUg=="}],"memo":""},"blockNum":"484843"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"candy","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy","files":[{"name":"candy.gno","body":"/ candy20 is a GRC20 token contract where all the GRC20 methods are proxified\r\n// with top-level functions. see also gno.land/r/demo/bar20.\r\npackage candy20\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ownable\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\tpusers \"gno.land/p/demo/users\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tbanker *grc20.Banker\r\n\tadmin  *ownable.Ownable\r\n\ttoken  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n\tadmin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // @gslice\r\n\tbanker = grc20.NewBanker(\"candy\", \"CANDY\", 4)\r\n\tbanker.Mint(admin.Owner(), 1000000000*10000) // @administrator (100M)\r\n\ttoken = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 { return token.TotalSupply() }\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\treturn token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\tspenderAddr := users.Resolve(spender)\r\n\treturn token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n\tspenderAddr := users.Resolve(spender)\r\n\tcheckErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n\tfromAddr := users.Resolve(from)\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\n// Faucet is distributing foo20 tokens without restriction (unsafe).\r\n// For a real token faucet, you should take care of setting limits are asking payment.\r\nfunc Faucet() {\r\n\tcaller := std.PrevRealm().Addr()\r\n\tamount := uint64(1_000 * 10_000) // 1k\r\n\tcheckErr(banker.Mint(caller, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner()\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner()\r\n\tfromAddr := users.Resolve(from)\r\n\tcheckErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn banker.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := pusers.AddressOrName(parts[1])\r\n\t\townerAddr := users.Resolve(owner)\r\n\t\tbalance := banker.BalanceOf(ownerAddr)\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc checkErr(err error) {\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"Y8x48tVpO5bm7SgmSFesnc2sWPHZTI43vuXrroSQtFg0V19a9PN4ULxv3f3w+9aVKytfWj0i6N+dWrr6MCkLEQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"484895"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"candy","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy","files":[{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"HkGwMirgGFFrhI3ErA9oo1enx7/GCidi/plWNJXbw0sHeXVFdGp1h/n5lLp1Efg6hA8cJh+vhNwFwWvuAQLbAg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"484919"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"candy","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy","files":[{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"7q7xWcJ4zMbQEolLvB2qV97J108iPhzfajymVFuH94FK3ajv6UXFdmf48BS68waIVqM5Aoa+JP5JSirRaPUg+g=="}],"memo":"Deployed through play.gno.land"},"blockNum":"484927"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"hello","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/hello","files":[{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"MWmkA2q66YtFHdWOzfzfYb9m67Li3Cuaxc4y0R2Me58kip6Jh84adimqPQ1r0DNsG7tb0sSd3rSN4+VA6j+CTw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"484952"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"candy","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy","files":[{"name":"package.gno","body":"package hello\n\nfunc Render(path string) string {\n  return \"Hello World!\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"MzxN5MFEGx5Oq1W/FGat1gDBxhXH2R6jxrFmPMf53VIrAwYlbVPsigSmktJeMu7q3MWQzS59jgVFi3LXcNwKng=="}],"memo":"Deployed through play.gno.land"},"blockNum":"484969"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"candy","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy","files":[{"name":"candy.gno","body":"package candy\r\n\r\nfunc Render(path string) string {\r\n  return \"candy!\"\r\n}\r\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"x3ho9oO2OSE2dRXU57zEREcQov8CdBZT3YHxXjOITu0PLz1QeFhcyYjf5c4A9l8smmUuoHUNTn5h+voEv+SEdQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"485011"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"gslice20","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/gslice20","files":[{"name":"gslice.gno","body":"package gslice20\r\n\r\nimport (\r\n    \"std\"\r\n    \"strings\"\r\n\r\n    \"gno.land/p/demo/grc/grc20\"\r\n    \"gno.land/p/demo/ownable\"\r\n    \"gno.land/p/demo/ufmt\"\r\n    pusers \"gno.land/p/demo/users\"\r\n    \"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n    banker *grc20.Banker\r\n    admin  *ownable.Ownable\r\n    token  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n    admin = ownable.NewWithAddress(\"g1newadminaddress\") // Replace with the actual admin address\r\n    banker = grc20.NewBanker(\"gslice\", \"GSLICE\", 4) // \"gslice\" is the name and \"GSLICE\" is the symbol\r\n    banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\r\n    token = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n    return token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    return token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    spenderAddr := users.Resolve(spender)\r\n    return token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n    spenderAddr := users.Resolve(spender)\r\n    currentAllowance := token.Allowance(std.GetCaller(), spenderAddr)\r\n    if currentAllowance != 0 {\r\n        checkErr(token.Approve(spenderAddr, 0))\r\n    }\r\n    checkErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n    fromAddr := users.Resolve(from)\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n    toAddr := users.Resolve(to)\r\n    checkErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n    fromAddr := users.Resolve(from)\r\n    checkErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n    parts := strings.Split(path, \"/\")\r\n    c := len(parts)\r\n\r\n    switch {\r\n    case path == \"\":\r\n        return banker.RenderHome()\r\n    case c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n        owner := pusers.AddressOrName(parts[1])\r\n        ownerAddr := users.Resolve(owner)\r\n        balance := banker.BalanceOf(ownerAddr)\r\n        return ufmt.Sprintf(\"%d\\n\", balance)\r\n    default:\r\n        return \"404\\n\"\r\n    }\r\n}\r\n\r\nfunc checkErr(err error) {\r\n    if err != nil {\r\n        // Proper error handling should be implemented here\r\n        panic(err) // Replace with proper error handling if needed\r\n    }\r\n}\r\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"YdIwY7PH+vBnx448coT7vlMi+qT5Pip9cSp+XwaUwzAUamVend38kObMY/ob+zU0aWFGEYX8ZBR6sMk5UustPA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"485045"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"gslice20","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/gslice20","files":[{"name":"gslice.gno","body":"package gslice20\r\n\r\nimport (\r\n    \"std\"\r\n    \"strings\"\r\n\r\n    \"gno.land/p/demo/grc/grc20\"\r\n    \"gno.land/p/demo/ownable\"\r\n    \"gno.land/p/demo/ufmt\"\r\n    pusers \"gno.land/p/demo/users\"\r\n    \"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n    banker *grc20.Banker\r\n    admin  *ownable.Ownable\r\n    token  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n    admin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // Replace with the actual admin address\r\n    banker = grc20.NewBanker(\"gslice\", \"GSLICE\", 4) // \"gslice\" is the name and \"GSLICE\" is the symbol\r\n    banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\r\n    token = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n    return token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    return token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    spenderAddr := users.Resolve(spender)\r\n    return token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n    spenderAddr := users.Resolve(spender)\r\n    currentAllowance := token.Allowance(std.GetCaller(), spenderAddr)\r\n    if currentAllowance != 0 {\r\n        checkErr(token.Approve(spenderAddr, 0))\r\n    }\r\n    checkErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n    fromAddr := users.Resolve(from)\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n    toAddr := users.Resolve(to)\r\n    checkErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n    fromAddr := users.Resolve(from)\r\n    checkErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n    parts := strings.Split(path, \"/\")\r\n    c := len(parts)\r\n\r\n    switch {\r\n    case path == \"\":\r\n        return banker.RenderHome()\r\n    case c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n        owner := pusers.AddressOrName(parts[1])\r\n        ownerAddr := users.Resolve(owner)\r\n        balance := banker.BalanceOf(ownerAddr)\r\n        return ufmt.Sprintf(\"%d\\n\", balance)\r\n    default:\r\n        return \"404\\n\"\r\n    }\r\n}\r\n\r\nfunc checkErr(err error) {\r\n    if err != nil {\r\n        // Proper error handling should be implemented here\r\n        panic(err) // Replace with proper error handling if needed\r\n    }\r\n}\r\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"qod00kRC30SFZDNdKUzVmIRks+M72sdCRWa4bYJWR8UrWECgZgFm1YCzGJ8np3ikDXqm86LgTanuAi86tr1beg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"485060"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"gslice20","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/gslice20","files":[{"name":"gslice.gno","body":"package gslice20\r\n\r\nimport (\r\n    \"std\"\r\n    \"strings\"\r\n\r\n    \"gno.land/p/demo/grc/grc20\"\r\n    \"gno.land/p/demo/ownable\"\r\n    \"gno.land/p/demo/ufmt\"\r\n    pusers \"gno.land/p/demo/users\"\r\n    \"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n    banker *grc20.Banker\r\n    admin  *ownable.Ownable\r\n    token  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n    admin = ownable.NewWithAddress(\"g1newadminaddress\") // Replace with the actual admin address\r\n    banker = grc20.NewBanker(\"gslice\", \"GSLICE\", 4) // \"gslice\" is the name and \"GSLICE\" is the symbol\r\n    banker.Mint(admin.Owner(), 1000000000*10000) // Initial minting (1 billion tokens)\r\n    token = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 {\r\n    return token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    return token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n    ownerAddr := users.Resolve(owner)\r\n    spenderAddr := users.Resolve(spender)\r\n    return token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n    spenderAddr := users.Resolve(spender)\r\n    currentAllowance := token.Allowance(std.Caller(), spenderAddr)\r\n    if currentAllowance != 0 {\r\n        checkErr(token.Approve(spenderAddr, 0))\r\n    }\r\n    checkErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n    fromAddr := users.Resolve(from)\r\n    toAddr := users.Resolve(to)\r\n    checkErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can mint\r\n    toAddr := users.Resolve(to)\r\n    checkErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n    admin.AssertCallerIsOwner() // Ensure only the admin can burn\r\n    fromAddr := users.Resolve(from)\r\n    checkErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n    parts := strings.Split(path, \"/\")\r\n    c := len(parts)\r\n\r\n    switch {\r\n    case path == \"\":\r\n        return banker.RenderHome()\r\n    case c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n        owner := pusers.AddressOrName(parts[1])\r\n        ownerAddr := users.Resolve(owner)\r\n        balance := banker.BalanceOf(ownerAddr)\r\n        return ufmt.Sprintf(\"%d\\n\", balance)\r\n    default:\r\n        return \"404\\n\"\r\n    }\r\n}\r\n\r\nfunc checkErr(err error) {\r\n    if err != nil {\r\n        // Proper error handling should be implemented here\r\n        panic(err) // Replace with proper error handling if needed\r\n    }\r\n}\r\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"FTTtzGv+Yrry6Ub37cpFiQgfFl8e8sgmzR04qQ7SjYZymoXVI3GyYsoibu4G+7lqVkSelIEINR+3r1x5MGe1yA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"485139"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"foom20","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/foom20","files":[{"name":"foom.gno","body":"// foom20 is a GRC20 token contract where all the GRC20 methods are proxified\r\n// with top-level functions. see also gno.land/r/demo/bar20.\r\npackage foom20\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ownable\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\tpusers \"gno.land/p/demo/users\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tbanker *grc20.Banker\r\n\tadmin  *ownable.Ownable\r\n\ttoken  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n\tadmin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // @manfred\r\n\tbanker = grc20.NewBanker(\"Foom\", \"FOOM\", 4)\r\n\tbanker.Mint(admin.Owner(), 1000000*10000) // @administrator (1M)\r\n\ttoken = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 { return token.TotalSupply() }\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\treturn token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\tspenderAddr := users.Resolve(spender)\r\n\treturn token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n\tspenderAddr := users.Resolve(spender)\r\n\tcheckErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n\tfromAddr := users.Resolve(from)\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\n// Faucet is distributing foo20 tokens without restriction (unsafe).\r\n// For a real token faucet, you should take care of setting limits are asking payment.\r\nfunc Faucet() {\r\n\tcaller := std.PrevRealm().Addr()\r\n\tamount := uint64(1_000 * 10_000) // 1k\r\n\tcheckErr(banker.Mint(caller, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner()\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner()\r\n\tfromAddr := users.Resolve(from)\r\n\tcheckErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn banker.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := pusers.AddressOrName(parts[1])\r\n\t\townerAddr := users.Resolve(owner)\r\n\t\tbalance := banker.BalanceOf(ownerAddr)\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc checkErr(err error) {\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"u0/GBoNcyWAGl9DfjzZjx3v/bspovogAuDWMxmhFD5VIK8VSIq6QIkF9F/eEJPwKcIwQ0ArSEa9MgMGQ4gM5rg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"485192"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1er355fkjksqpdtwmhf5penwa82p0rhqxkkyhk5","package":{"name":"token_register","path":"gno.land/r/g1er355fkjksqpdtwmhf5penwa82p0rhqxkkyhk5/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/foom20","files":[{"name":"register.gno","body":"package token_register\n\nimport (\n\ttoken \"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/foom20\"\n\n\tpusers \"gno.land/p/demo/users\"\n\n\tpl \"gno.land/r/gnoswap/pool\"\n\trr \"gno.land/r/gnoswap/router\"\n\tsr \"gno.land/r/gnoswap/staker\"\n\tpf \"gno.land/r/gnoswap/protocol_fee\"\n\tcp \"gno.land/r/gnoswap/community_pool\"\n)\n\ntype NewToken struct{}\n\nfunc (NewToken) Transfer() func(to pusers.AddressOrName, amount uint64) {\n\treturn token.Transfer\n}\n\nfunc (NewToken) TransferFrom() func(from, to pusers.AddressOrName, amount uint64) {\n\treturn token.TransferFrom\n}\n\nfunc (NewToken) BalanceOf() func(owner pusers.AddressOrName) uint64 {\n\treturn token.BalanceOf\n}\n\nfunc (NewToken) Approve() func(spender pusers.AddressOrName, amount uint64) {\n\treturn token.Approve\n}\n\nfunc init() {\n\tpl.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/foom20\", NewToken{})\n\trr.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/foom20\", NewToken{})\n\tsr.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/foom20\", NewToken{})\n\tpf.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/foom20\", NewToken{})\n\tcp.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/foom20\", NewToken{})\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqmmYKxiRDVAgo6iCd7tRUreVtTLUm3iIw6iCw+knaqF"},"signature":"DXPN4pMmFm8qvL/TQfWxaJ3p0cnn7erWqU+aqKpsU9sS+HbEqUBDkjyzMxPULIodDmbcQTqhXScFcngHYeEVOw=="}],"memo":""},"blockNum":"485193"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"candy20","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","files":[{"name":"candy.gno","body":"// candy20 is a GRC20 token contract where all the GRC20 methods are proxified\r\n// with top-level functions.\r\npackage candy20\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ownable\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\tpusers \"gno.land/p/demo/users\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tbanker *grc20.Banker\r\n\tadmin  *ownable.Ownable\r\n\ttoken  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n\tadmin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // @manfred\r\n\tbanker = grc20.NewBanker(\"candy\", \"CANDY\", 6)\r\n\tbanker.Mint(admin.Owner(), 1000000000*10000) // @administrator (1M)\r\n\ttoken = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 { return token.TotalSupply() }\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\treturn token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\tspenderAddr := users.Resolve(spender)\r\n\treturn token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n\tspenderAddr := users.Resolve(spender)\r\n\tcheckErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n\tfromAddr := users.Resolve(from)\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\n// Faucet is distributing foo20 tokens without restriction (unsafe).\r\n// For a real token faucet, you should take care of setting limits are asking payment.\r\nfunc Faucet() {\r\n\tcaller := std.PrevRealm().Addr()\r\n\tamount := uint64(1_000 * 10_000) // 1k\r\n\tcheckErr(banker.Mint(caller, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner()\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner()\r\n\tfromAddr := users.Resolve(from)\r\n\tcheckErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn banker.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := pusers.AddressOrName(parts[1])\r\n\t\townerAddr := users.Resolve(owner)\r\n\t\tbalance := banker.BalanceOf(ownerAddr)\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc checkErr(err error) {\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"z6pahIoh+wqHC8EBrPgAcyvADvCuhOOd3nvTgZl6qC8KmYkqjTYQN/P4XY234gpQCYQjtEJ/dCWc1+CRdVheYA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"485273"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1er355fkjksqpdtwmhf5penwa82p0rhqxkkyhk5","package":{"name":"token_register","path":"gno.land/r/g1er355fkjksqpdtwmhf5penwa82p0rhqxkkyhk5/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","files":[{"name":"register.gno","body":"package token_register\n\nimport (\n\ttoken \"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20\"\n\n\tpusers \"gno.land/p/demo/users\"\n\n\tpl \"gno.land/r/gnoswap/pool\"\n\trr \"gno.land/r/gnoswap/router\"\n\tsr \"gno.land/r/gnoswap/staker\"\n\tpf \"gno.land/r/gnoswap/protocol_fee\"\n\tcp \"gno.land/r/gnoswap/community_pool\"\n)\n\ntype NewToken struct{}\n\nfunc (NewToken) Transfer() func(to pusers.AddressOrName, amount uint64) {\n\treturn token.Transfer\n}\n\nfunc (NewToken) TransferFrom() func(from, to pusers.AddressOrName, amount uint64) {\n\treturn token.TransferFrom\n}\n\nfunc (NewToken) BalanceOf() func(owner pusers.AddressOrName) uint64 {\n\treturn token.BalanceOf\n}\n\nfunc (NewToken) Approve() func(spender pusers.AddressOrName, amount uint64) {\n\treturn token.Approve\n}\n\nfunc init() {\n\tpl.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20\", NewToken{})\n\trr.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20\", NewToken{})\n\tsr.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20\", NewToken{})\n\tpf.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20\", NewToken{})\n\tcp.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20\", NewToken{})\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqmmYKxiRDVAgo6iCd7tRUreVtTLUm3iIw6iCw+knaqF"},"signature":"0KLxsCdtHqpdpHeWX822q7hGsHe09DUuB5ZrBwAiVN0Oba8VJxg9B7oZomdwzdsSNDOTZdTsWhMG8DZQe+smbg=="}],"memo":""},"blockNum":"485274"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/pool","func":"CreatePool","args":["gno.land/r/demo/wugnot","gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","3000","17695424652618024327990064885491"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","198003814"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","9900000000000"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","198003814"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"198003814ugnot","pkg_path":"gno.land/r/gnoswap/staker","func":"MintAndStake","args":["gnot","gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","3000","101280","115140","198003814","9900000000000","197013795","9850500000000","7282571140"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"67C71g0JdzPZtrNblHIbBtFAMgNI5cezotKpBUyJe58zlP3AFvsaYBjUFy0OYh1Y+Fj1HozoTzHCXOkuJtSGEA=="}],"memo":""},"blockNum":"485417"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/pool","func":"CreatePool","args":["gno.land/r/demo/wugnot","gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","3000","17695424652618024327990064885491"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","198003814"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","9900000000000"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","198003814"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"198003814ugnot","pkg_path":"gno.land/r/gnoswap/staker","func":"MintAndStake","args":["gnot","gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","3000","101280","115140","198003814","9900000000000","197013795","9850500000000","7282571140"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"yEitJ6S9Eyxkms30Af8TjWahwlRQTlLnWEo6qEp2QuhhPttagYXS4wyTZ5OGUZOAVsXP07sKVk0fXHCjOK5ewg=="}],"memo":""},"blockNum":"485426"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/pool","func":"CreatePool","args":["gno.land/r/demo/wugnot","gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","3000","17695424652618024327990064885491"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","198003814"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","9900000000000"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","198003814"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"198003814ugnot","pkg_path":"gno.land/r/gnoswap/staker","func":"MintAndStake","args":["gnot","gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","3000","101280","115140","198003814","9900000000000","197013795","9850500000000","7282571140"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"X7KOmypaN/SInLF8a/wujEin/xzvussGTEGkiJrPOtZuevKtIZRnteH0vvPmDUb6IGYDsoLbAIpvzkMBh+ec2w=="}],"memo":""},"blockNum":"485532"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/pool","func":"CreatePool","args":["gno.land/r/demo/wugnot","gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","3000","17695424652618024327990064885491"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","198003814"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","9900000000000"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","198003814"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"198003814ugnot","pkg_path":"gno.land/r/gnoswap/staker","func":"MintAndStake","args":["gnot","gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","3000","101280","115140","198003814","9900000000000","197013795","9850500000000","7282571140"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"4zuMcDoQBYCwxtGmlQWPTlB176wBQ7jH4NQXGnfCRkQt9xPwluWFJ8y7+UGS2/CjOh/2YYFNKtFw2z/5X1XDog=="}],"memo":""},"blockNum":"485543"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/pool","func":"CreatePool","args":["gno.land/r/demo/wugnot","gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","10000","17713128042335558637257056819903"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","198003814"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","9900000000000"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1y3uyaa63sjxvah2cx3c2usavwvx97kl8m2v7ye","198003814"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"198003814ugnot","pkg_path":"gno.land/r/gnoswap/staker","func":"MintAndStake","args":["gnot","gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","10000","101200","115200","198003814","9900000000000","197013795","9850500000000","7282571140"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/gnoswap/gnft","func":"SetTokenURILast","args":null}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"MLccsjpEZBSzzdYoZv6d19PwHKUzuEEqdL00f9g+DdYZLvs8VrTU52p1NoR7NzTqk6C6tD9jP1ESNTr6zvgVYg=="}],"memo":""},"blockNum":"485564"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"RP8rkWP2F59qi7YZm4uaiQEYQfRaVpwBEEr5x2fv8GRl5SUMYyppSyetDgbJ9B4bO0BPZvQRbzcG0uEeB5ydGA=="}],"memo":""},"blockNum":"485677"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"n0ghXdBFuJdQJJK5yfVat3RcwDzmmLmw/6X58Fq/mpgHHSq+tVvrlNlPi4pTfK1680ZSpvwmaK71jVufFqnGcA=="}],"memo":""},"blockNum":"485767"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"5000000ugnot","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gnot","gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","5000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20:10000","100","244379797123"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"GmB+Po3rX7ipAb8x8FJe7REYVrB7X2E8wF48Cu85OqZozdPLn6M2xvHlJhvh3lkTBGpMSOq9lf6+f+6Wt4P1Yg=="}],"memo":""},"blockNum":"485899"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1dexaf6aqkkyr9yfy9d5up69lsn7ra80af34g5v","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/demo/wugnot","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"","pkg_path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","func":"Approve","args":["g1vc883gshu5z7ytk5cdynhc8c2dh67pdp4cszkp","18446744073709551615"]},{"@type":"/vm.m_call","caller":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","send":"10000000ugnot","pkg_path":"gno.land/r/gnoswap/router","func":"SwapRoute","args":["gnot","gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20","10000000","EXACT_IN","gno.land/r/demo/wugnot:gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/candy20:10000","100","478169553160"]}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"SirQd1GCJIOM5TnebI+2EgfTl12rem4065g11nnHjbQRovseBUaBLKXNDbevF+yRtm1OqngEWIS75LUdzUTouw=="}],"memo":""},"blockNum":"485931"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"minus","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/minus","files":[{"name":"minus.gno","body":"package minus\r\n\r\nimport (\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ownable\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\tpusers \"gno.land/p/demo/users\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tbanker *grc20.Banker\r\n\tadmin  *ownable.Ownable\r\n\ttoken  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n\tadmin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // @manfred\r\n\tbanker = grc20.NewBanker(\"minus\", \"MINUS\", 6)\r\n\tbanker.Mint(admin.Owner(), 1000000000*10000) // @administrator (1M)\r\n\ttoken = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 { return token.TotalSupply() }\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\treturn token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\tspenderAddr := users.Resolve(spender)\r\n\treturn token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n\tspenderAddr := users.Resolve(spender)\r\n\tcurrentAllowance := token.Allowance(std.Caller(), spenderAddr)\r\n\tif currentAllowance != 0 {\r\n\t\tcheckErr(token.Approve(spenderAddr, 0))\r\n\t}\r\n\tcheckErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n\tfromAddr := users.Resolve(from)\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner()\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner()\r\n\tfromAddr := users.Resolve(from)\r\n\tcheckErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn banker.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := pusers.AddressOrName(parts[1])\r\n\t\townerAddr := users.Resolve(owner)\r\n\t\tbalance := banker.BalanceOf(ownerAddr)\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc checkErr(err error) {\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}\r\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"K30sunueLLP2qju+bWqJxFVOQFBlCYrH3g+6tewd37QfO7lKEm6asodmNEYh4LEIJipdA4BXrZwloEB5RLJoig=="}],"memo":"Deployed through play.gno.land"},"blockNum":"486273"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","package":{"name":"minus","path":"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/minus","files":[{"name":"minus.gno","body":"package minus\r\n\r\nimport (\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ownable\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\tpusers \"gno.land/p/demo/users\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tbanker *grc20.Banker\r\n\tadmin  *ownable.Ownable\r\n\ttoken  grc20.Token\r\n)\r\n\r\nfunc init() {\r\n\tadmin = ownable.NewWithAddress(\"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9\") // @manfred\r\n\tbanker = grc20.NewBanker(\"minus\", \"MINUS\", 6)\r\n\tbanker.Mint(admin.Owner(), 1000000000*10000) // @administrator (1M)\r\n\ttoken = banker.Token()\r\n}\r\n\r\nfunc TotalSupply() uint64 { return token.TotalSupply() }\r\n\r\nfunc BalanceOf(owner pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\treturn token.BalanceOf(ownerAddr)\r\n}\r\n\r\nfunc Allowance(owner, spender pusers.AddressOrName) uint64 {\r\n\townerAddr := users.Resolve(owner)\r\n\tspenderAddr := users.Resolve(spender)\r\n\treturn token.Allowance(ownerAddr, spenderAddr)\r\n}\r\n\r\nfunc Transfer(to pusers.AddressOrName, amount uint64) {\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.Transfer(toAddr, amount))\r\n}\r\n\r\nfunc Approve(spender pusers.AddressOrName, amount uint64) {\r\n\tspenderAddr := users.Resolve(spender)\r\n\tcheckErr(token.Approve(spenderAddr, amount))\r\n}\r\n\r\nfunc TransferFrom(from, to pusers.AddressOrName, amount uint64) {\r\n\tfromAddr := users.Resolve(from)\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(token.TransferFrom(fromAddr, toAddr, amount))\r\n}\r\n\r\nfunc Mint(to pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner()\r\n\ttoAddr := users.Resolve(to)\r\n\tcheckErr(banker.Mint(toAddr, amount))\r\n}\r\n\r\nfunc Burn(from pusers.AddressOrName, amount uint64) {\r\n\tadmin.AssertCallerIsOwner()\r\n\tfromAddr := users.Resolve(from)\r\n\tcheckErr(banker.Burn(fromAddr, amount))\r\n}\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn banker.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := pusers.AddressOrName(parts[1])\r\n\t\townerAddr := users.Resolve(owner)\r\n\t\tbalance := banker.BalanceOf(ownerAddr)\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc checkErr(err error) {\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atgv/+TCwlR+jzjx94p4Ik0IuGET4J/q2q9ciaL4UOQh"},"signature":"ZcRUQVxe9GvJoOBk7F17YE8wOTMnnO3Mo+iU3huOqD1Uhnm2vZc163lfeg0Jhi7e9aiXnMqjyiKMH93C83m3Fg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"486307"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1er355fkjksqpdtwmhf5penwa82p0rhqxkkyhk5","package":{"name":"token_register","path":"gno.land/r/g1er355fkjksqpdtwmhf5penwa82p0rhqxkkyhk5/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/minus","files":[{"name":"register.gno","body":"package token_register\n\nimport (\n\ttoken \"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/minus\"\n\n\tpusers \"gno.land/p/demo/users\"\n\n\tpl \"gno.land/r/gnoswap/pool\"\n\trr \"gno.land/r/gnoswap/router\"\n\tsr \"gno.land/r/gnoswap/staker\"\n\tpf \"gno.land/r/gnoswap/protocol_fee\"\n\tcp \"gno.land/r/gnoswap/community_pool\"\n)\n\ntype NewToken struct{}\n\nfunc (NewToken) Transfer() func(to pusers.AddressOrName, amount uint64) {\n\treturn token.Transfer\n}\n\nfunc (NewToken) TransferFrom() func(from, to pusers.AddressOrName, amount uint64) {\n\treturn token.TransferFrom\n}\n\nfunc (NewToken) BalanceOf() func(owner pusers.AddressOrName) uint64 {\n\treturn token.BalanceOf\n}\n\nfunc (NewToken) Approve() func(spender pusers.AddressOrName, amount uint64) {\n\treturn token.Approve\n}\n\nfunc init() {\n\tpl.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/minus\", NewToken{})\n\trr.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/minus\", NewToken{})\n\tsr.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/minus\", NewToken{})\n\tpf.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/minus\", NewToken{})\n\tcp.RegisterGRC20Interface(\"gno.land/r/g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9/minus\", NewToken{})\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"100000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqmmYKxiRDVAgo6iCd7tRUreVtTLUm3iIw6iCw+knaqF"},"signature":"FvCorMSuxymWHQZBErOyF3ZIashvrfWpSwR5dUYiUo1Mgvq+vf+tySB/MLYUsIuuKYezLX0LjxrVsjTMS/UsIA=="}],"memo":""},"blockNum":"486308"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"xavdCw5VHjiDCtFDu/XVaq2t5EvD6foZRZtEYs28Jo9kLgK2Kv01noRYxj8yJBuBtWdi93ZHvXKANqd78iCv9g=="}],"memo":""},"blockNum":"487106"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"4V4xDcAuQREtF255tuVANnOLya8c3hjHVHzp3AdHclV5jApbV5Qf2Ocu+rLL8g9GZRsV6d+Y5QcSBMqeqT1EuQ=="}],"memo":""},"blockNum":"487332"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"9k/dIQIya6qTaXJStFJVdUVYf+DqnHsnSODza5kkLhcwRu5Pa5ort+wuOGA123OTETTLgadgFJ18V2xkJ0rCfg=="}],"memo":""},"blockNum":"487342"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"5000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"SvJinfqAOs8wmkGcC8CX4f5dMDvFeih/mIs8lkOYmCosMUiRZzAYO2l6xttPQiw/y8lcjjwIofWV+Zp0oCeP6Q=="}],"memo":""},"blockNum":"487349"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"5000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"GIWbts8r5ty763m7QoDZYdPMaJicFQi3D1DkaZHWs5IDqZJaZPmPk2t9PinEYTle2uX6VNn+dCwpFDhlcHpDyQ=="}],"memo":""},"blockNum":"487358"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"mYz5jv0tVQEVlOlxDo8VHoz9MCZnNDJbSdejyf3kPYQBLNGHSMw2u1QlYZTm+x/PRgwr6NWL23CGfhG2u0rlVg=="}],"memo":""},"blockNum":"487370"}
{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g1njagaeg7e398hze39ygfgvc4gwsh6lkz7dwnuz","to_address":"g1ngywvql2ql7t8uzl63w60eqcejkwg4rm4lxdw9","amount":"15000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As2VmUYjIs+Q+esyTyrgv8nQpAtImqdkUUKCpJYzNQ4a"},"signature":"9g2is/g/vGWI+zPesRxqYmaIa3KLZMnV3zFkCr2e5ocgjGe33XK83X/vfWxSVHjOwORFBC0c8EsOfX8aDHSqgA=="}],"memo":""},"blockNum":"487447"}
